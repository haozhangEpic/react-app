{"version":3,"file":"static/js/107.cffd70e5.chunk.js","mappings":"oMACA,GAAgB,MAAQ,sB,0CC2ExB,EAxDuC,SAAHA,GAK7B,IAJLC,EAAMD,EAANC,OACAC,EAAMF,EAANE,OACAC,EAAQH,EAARG,SACGC,GAAKC,EAAAA,EAAAA,GAAAL,EAAAM,GAGRC,GAA0BC,EAAAA,EAAAA,WAAkB,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3CI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GAGtBI,GAA0BL,EAAAA,EAAAA,UAAiB,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAvCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAWhBG,EAA4D,SAACC,GACjEF,EAASE,EAAEC,OAAOJ,OAEF,MAAZZ,GACFA,EAASe,EAEb,EASME,GAAWC,EAAAA,EAAAA,UAAQ,iBAAgB,KAAVN,CAAY,GAAE,CAACA,IAE9C,OACEO,EAAAA,EAAAA,MAAA,QACEC,UAAS,GAAAC,OAAKC,EAAAA,MAAY,KAAAD,OAAIb,GAASc,EAAAA,OACvCC,QA7BwB,WAC1Bd,GAAS,EACX,EA4BIe,OA1BuB,WACzBf,GAAS,EACX,EAwBmBgB,SAAA,CAEd1B,GAAS2B,EAAAA,EAAAA,KAAA,OAAKN,UAAU,eAAeO,IAAK5B,EAAQ6B,IAAI,MAAQF,EAAAA,EAAAA,KAAAG,EAAAA,SAAA,KACjEH,EAAAA,EAAAA,KAAA,SAAAI,EAAAA,EAAAA,GAAA,CACE9B,SAAU,SAACe,GAAC,OAAKD,EAAcC,EAAE,GAE7Bd,KAENyB,EAAAA,EAAAA,KAAA,UAAQT,SAAUA,EAAUc,QApBJ,WACJ,oBAAXjC,GACXA,EAAOc,EACT,EAiBiDa,SAAC,WAKpD,C","sources":["features/components/Input/index.module.css?modules","features/components/Input/index.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"input\":\"Input_input__CiXRP\"};","import React, { ChangeEvent, useMemo, useState } from \"react\";\r\n\r\nimport styles from \"./index.module.css\";\r\n\r\ninterface IProps\r\n  extends React.DetailedHTMLProps<\r\n    React.InputHTMLAttributes<HTMLInputElement>,\r\n    HTMLInputElement\r\n  > {\r\n  onPost?: (value: string) => void;\r\n  avatar?: string;\r\n}\r\n\r\n/**\r\n * CommentInput 评论输入框,其余参数参考input\r\n * @param  {function}  onPost 点击post触发的方法\r\n * @param  {string}  avatar 头像的url\r\n * @returns {FunctionComponent} 返回一个FunctionComponent组件\r\n */\r\n\r\nconst CommentInput: React.FC<IProps> = ({\r\n  onPost,\r\n  avatar,\r\n  onChange,\r\n  ...props\r\n}) => {\r\n  // 聚焦样式\r\n  const [focus, setFocus] = useState<boolean>(false);\r\n\r\n  // 存储value的值\r\n  const [value, setValue] = useState<string>(\"\");\r\n  // 获取焦点改变classname\r\n  const onFocus: () => void = () => {\r\n    setFocus(true);\r\n  };\r\n  // 失去焦点改变classname\r\n  const onBlur: () => void = () => {\r\n    setFocus(false);\r\n  };\r\n\r\n  // input输入改变时\r\n  const onInputChange: (e: ChangeEvent<HTMLInputElement>) => void = (e) => {\r\n    setValue(e.target.value);\r\n    // 当传过来onchange方法时进行触发\r\n    if (onChange != null) {\r\n      onChange(e);\r\n    }\r\n  };\r\n\r\n  // Post按钮点击时触发\r\n  const onClick: () => void = () => {\r\n    if (typeof onPost !== \"function\") return;\r\n    onPost(value);\r\n  };\r\n\r\n  // post是否可点\r\n  const disabled = useMemo(() => value === \"\", [value]);\r\n\r\n  return (\r\n    <span\r\n      className={`${styles.input} ${focus && styles.focus}`}\r\n      onFocus={onFocus}\r\n      onBlur={onBlur}\r\n    >\r\n      {avatar ? <img className=\"input-prefix\" src={avatar} alt=\"\" /> : <></>}\r\n      <input\r\n        onChange={(e) => onInputChange(e)}\r\n        // type=\"text\"\r\n        {...props}\r\n      />\r\n      <button disabled={disabled} onClick={onClick}>\r\n        Post\r\n      </button>\r\n    </span>\r\n  );\r\n};\r\nexport default CommentInput;\r\n"],"names":["_ref","onPost","avatar","onChange","props","_objectWithoutProperties","_excluded","_useState","useState","_useState2","_slicedToArray","focus","setFocus","_useState3","_useState4","value","setValue","onInputChange","e","target","disabled","useMemo","_jsxs","className","concat","styles","onFocus","onBlur","children","_jsx","src","alt","_Fragment","_objectSpread","onClick"],"sourceRoot":""}