import React from 'react'
import "antd/dist/reset.css";
import * as JackSon from "jackson-js";

console.log(JackSon);
var jsonStr = `{
  "ResponseStatus" : {
    "Timestamp" : "/Date(1681976436895+0800)/",
    "Ack" : "Success",
    "Errors" : [ ]
  },
  "retCode" : "201",
  "retMessage" : "调用成功",
  "retValue" : {
    "fileName" : "DictNodeInfo列表.xlsx",
    "file" : "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"
  }
}`;
var jsonObj = new (JackSon as any).JsonParser();
let response = jsonObj.parse(jsonStr);
let { retValue } = response as {
  retCode: string;
  retValue: string;
};
const base64ToFile = (base64: any, fileName: any) => {
  let filenamearr = fileName.split(".");
  let type = filenamearr[filenamearr.length - 1];

  let arr = base64;
  let mime = `.${type}`;
  let bstr = atob(arr);
  let n = bstr.length;
  let u8arr = new Uint8Array(n);

  while (n--) {
    u8arr[n] = bstr.charCodeAt(n);
  }
  return new File([u8arr], fileName, { type: mime });
};

let file = base64ToFile((retValue as any).file, "DictNodeInfo列表.xlsx");

let url = window.URL.createObjectURL(file);

let a = document.createElement("a");
a.href = url;
a.setAttribute("download", "dfsfd.xlsx");
a.click();
export default function index() {
  return (
    <div>index</div>
  )
}
