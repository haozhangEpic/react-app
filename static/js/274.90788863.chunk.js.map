{"version":3,"file":"static/js/274.90788863.chunk.js","mappings":"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AG,EAAG,GAAI,EAAG,EAAG,EAAG,IAAK,EAAG,IAAK,EAAG,EAAG,EAAG,IAAK,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,IAAK,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,IAAK,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,IAAK,GAAI,IAAK,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,IAAK,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,KAAM,EAAG,EAAG,GAAI,MAAO,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,KAAM,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,MAAO,EAAG,KAAM,GAAI,EAAG,GAAI,IAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,IAAK,EAAG,KAAM,GAAI,IAAK,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EA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GAClC,OACEA,EACGqc,QAAQ,cAAe,KACvBA,QAAQ,SAAU,IAMlBo8B,cACA3Q,aAEP,oECLO,SAAS4Q,EAAWd,EAAYe,EAAQv6C,GAK7C,IAHA,IAAMw6C,EAAS,GACXx0B,GAAS,IAEJA,EAAQwzB,EAAWx3C,QAAQ,CAClC,IAAMy4C,EAAUjB,EAAWxzB,GAAOs0B,WAE9BG,IAAYD,EAAOE,SAASD,KAC9BF,EAASE,EAAQF,EAAQv6C,GACzBw6C,EAAOv6C,KAAKw6C,GAEhB,CAEA,OAAOF,CACT,oGCxBO,IAAMI,EAA0B,CACrC,QACA,MACA,SACA,QACA,SACA,QACA,SACA,OACA,OACA,SACA,MACA,SACA,QACA,SACA,OACA,KACA,SACA,QACA,SACA,OACA,KACA,SACA,SACA,QACA,SACA,SACA,SACA,OACA,OACA,MACA,QACA,SACA,QACA,SACA,OACA,SACA,SACA,QACA,QACA,QACA,SACA,MACA,QACA,SACA,OACA,SACA,SACA,QACA,OACA,OACA,SACA,MACA,SACA,SACA,QACA,SACA,MACA,OACA,SACA,SACA,SACA,KACA,SACA,QACA,QACA,SACA,SACA,OACA,QACA,KACA,OACA,QACA,SACA,OACA,MACA,SACA,SACA,QACA,SACA,OACA,OACA,SACA,SACA,OACA,OACA,SACA,QACA,OACA,QACA,MACA,OACA,MACA,OACA,OACA,OACA,QACA,QACA,QACA,SACA,QACA,SACA,MACA,OACA,SACA,MACA,QC1GWC,EAA4B,CACvC,EAAG,SACH,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,SACL,IAAK,UC1BA,SAASC,EAAU/H,GACxB,IAAMjsC,EACiB,kBAAdisC,EAAyBA,E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","sources":["../node_modules/acorn-jsx/index.js","../node_modules/acorn-jsx/xhtml.js","../node_modules/acorn/dist/acorn.js","../node_modules/extend/index.js","../node_modules/format/format.js","../node_modules/inline-style-parser/index.js","../node_modules/is-buffer/index.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/react-markdown/node_modules/react-is/cjs/react-is.production.min.js","../node_modules/react-markdown/node_modules/react-is/index.js","../node_modules/style-to-object/index.js","../node_modules/@babel/runtime/helpers/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/@babel/runtime/helpers/createClass.js","../node_modules/@babel/runtime/helpers/createSuper.js","../node_modules/@babel/runtime/helpers/get.js","../node_modules/@babel/runtime/helpers/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/inherits.js","../node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js","../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/superPropBase.js","../node_modules/@babel/runtime/helpers/toPrimitive.js","../node_modules/@babel/runtime/helpers/toPropertyKey.js","../node_modules/@babel/runtime/helpers/typeof.js","../node_modules/ccount/index.js","../node_modules/decode-named-character-reference/index.dom.js","../node_modules/mdast-util-find-and-replace/lib/index.js","../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","../node_modules/mdast-util-to-markdown/lib/util/container-flow.js","../node_modules/mdast-util-to-markdown/lib/util/container-phrasing.js","../node_modules/mdast-util-to-markdown/lib/util/indent-lines.js","../node_modules/mdast-util-to-markdown/lib/util/track.js","../node_modules/mdast-util-to-string/lib/index.js","../node_modules/micromark-core-commonmark/lib/blank-line.js","../node_modules/micromark-factory-space/index.js","../node_modules/micromark-factory-whitespace/index.js","../node_modules/micromark-util-character/lib/unicode-punctuation-regex.js","../node_modules/micromark-util-character/index.js","../node_modules/micromark-util-chunked/index.js","../node_modules/micromark-util-classify-character/index.js","../node_modules/micromark-util-combine-extensions/index.js","../node_modules/micromark-util-decode-numeric-character-reference/index.js","../node_modules/micromark-util-decode-string/index.js","../node_modules/micromark-util-normalize-identifier/index.js","../node_modules/micromark-util-resolve-all/index.js","../node_modules/character-entities-legacy/index.js","../node_modules/character-reference-invalid/index.js","../node_modules/is-decimal/index.js","../node_modules/is-hexadecimal/index.js","../node_modules/is-alphanumerical/index.js","../node_modules/is-alphabetical/index.js","../node_modules/parse-entities/lib/index.js","../node_modules/vfile/lib/minpath.browser.js","../node_modules/vfile/lib/minproc.browser.js","../node_modules/vfile/lib/minurl.shared.js","../node_modules/vfile/lib/minurl.browser.js","../node_modules/vfile/lib/index.js","../node_modules/bail/index.js","../node_modules/is-plain-obj/index.js","../node_modules/trough/index.js","../node_modules/unified/lib/index.js","../node_modules/micromark/lib/initialize/content.js","../node_modules/micromark/lib/initialize/document.js","../node_modules/micromark-util-subtokenize/index.js","../node_modules/micromark-core-commonmark/lib/content.js","../node_modules/micromark/lib/initialize/flow.js","../node_modules/micromark/lib/initialize/text.js","../node_modules/micromark/lib/create-tokenizer.js","../node_modules/micromark-core-commonmark/lib/thematic-break.js","../node_modules/micromark-core-commonmark/lib/list.js","../node_modules/micromark-core-commonmark/lib/block-quote.js","../node_modules/micromark-factory-destination/index.js","../node_modules/micromark-factory-label/index.js","../node_modules/micromark-factory-title/index.js","../node_modules/micromark-core-commonmark/lib/definition.js","../node_modules/micromark-core-commonmark/lib/code-indented.js","../node_modules/micromark-core-commonmark/lib/heading-atx.js","../node_modules/micromark-core-commonmark/lib/setext-underline.js","../node_modules/micromark-util-html-tag-name/index.js","../node_modules/micromark-core-commonmark/lib/html-flow.js","../node_modules/micromark-core-commonmark/lib/code-fenced.js","../node_modules/micromark-core-commonmark/lib/character-reference.js","../node_modules/micromark-core-commonmark/lib/character-escape.js","../node_modules/micromark-core-commonmark/lib/line-ending.js","../node_modules/micromark-core-commonmark/lib/label-end.js","../node_modules/micromark-core-commonmark/lib/label-start-image.js","../node_modules/micromark-core-commonmark/lib/attention.js","../node_modules/micromark-core-commonmark/lib/autolink.js","../node_modules/micromark-core-commonmark/lib/html-text.js","../node_modules/micromark-core-commonmark/lib/label-start-link.js","../node_modules/micromark-core-commonmark/lib/hard-break-escape.js","../node_modules/micromark-core-commonmark/lib/code-text.js","../node_modules/micromark/lib/constructs.js","../node_modules/micromark/lib/preprocess.js","../node_modules/mdast-util-from-markdown/lib/index.js","../node_modules/micromark/lib/postprocess.js","../node_modules/micromark/lib/parse.js","../node_modules/remark-parse/index.js","../node_modules/remark-parse/lib/index.js","../node_modules/micromark-util-sanitize-uri/index.js","../node_modules/unist-util-position/lib/index.js","../node_modules/mdast-util-definitions/lib/index.js","../node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","../node_modules/mdast-util-to-hast/lib/revert.js","../node_modules/mdast-util-to-hast/lib/handlers/list-item.js","../node_modules/trim-lines/index.js","../node_modules/mdast-util-to-hast/lib/handlers/index.js","../node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","../node_modules/mdast-util-to-hast/lib/handlers/break.js","../node_modules/mdast-util-to-hast/lib/handlers/code.js","../node_modules/mdast-util-to-hast/lib/handlers/delete.js","../node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","../node_modules/mdast-util-to-hast/lib/handlers/footnote.js","../node_modules/mdast-util-to-hast/lib/handlers/heading.js","../node_modules/mdast-util-to-hast/lib/handlers/html.js","../node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/image.js","../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","../node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","../node_modules/mdast-util-to-hast/lib/handlers/link.js","../node_modules/mdast-util-to-hast/lib/handlers/list.js","../node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","../node_modules/mdast-util-to-hast/lib/handlers/root.js","../node_modules/mdast-util-to-hast/lib/handlers/strong.js","../node_modules/mdast-util-to-hast/lib/handlers/table.js","../node_modules/mdast-util-to-hast/lib/handlers/table-cell.js","../node_modules/mdast-util-to-hast/lib/handlers/table-row.js","../node_modules/mdast-util-to-hast/lib/handlers/text.js","../node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","../node_modules/mdast-util-to-hast/lib/state.js","../node_modules/unist-util-generated/lib/index.js","../node_modules/mdast-util-to-hast/lib/index.js","../node_modules/mdast-util-to-hast/lib/footer.js","../node_modules/remark-rehype/lib/index.js","../node_modules/property-information/lib/util/schema.js","../node_modules/property-information/lib/util/merge.js","../node_modules/property-information/lib/normalize.js","../node_modules/property-information/lib/util/info.js","../node_modules/property-information/lib/util/types.js","../node_modules/property-information/lib/util/defined-info.js","../node_modules/property-information/lib/util/create.js","../node_modules/property-information/lib/xlink.js","../node_modules/property-information/lib/xml.js","../node_modules/property-information/lib/util/case-sensitive-transform.js","../node_modules/property-information/lib/util/case-insensitive-transform.js","../node_modules/property-information/lib/xmlns.js","../node_modules/property-information/lib/aria.js","../node_modules/property-information/lib/html.js","../node_modules/property-information/lib/svg.js","../node_modules/property-information/index.js","../node_modules/react-markdown/lib/rehype-filter.js","../node_modules/hast-util-whitespace/index.js","../node_modules/property-information/lib/find.js","../node_modules/property-information/lib/hast-to-react.js","../node_modules/style-to-object/index.mjs","../node_modules/react-markdown/lib/uri-transformer.js","../node_modules/react-markdown/lib/ast-to-react.js","../node_modules/comma-separated-tokens/index.js","../node_modules/space-separated-tokens/index.js","../node_modules/react-markdown/lib/react-markdown.js","../node_modules/remark-breaks/index.js","../node_modules/micromark-extension-directive/lib/factory-attributes.js","../node_modules/micromark-extension-directive/lib/factory-label.js","../node_modules/micromark-extension-directive/lib/factory-name.js","../node_modules/micromark-extension-directive/lib/directive-container.js","../node_modules/micromark-extension-directive/lib/directive-leaf.js","../node_modules/micromark-extension-directive/lib/directive-text.js","../node_modules/mdast-util-directive/lib/index.js","../node_modules/mdast-util-to-markdown/lib/util/check-quote.js","../node_modules/remark-directive/index.js","../node_modules/micromark-extension-directive/lib/syntax.js","../node_modules/fault/index.js","../node_modules/micromark-extension-frontmatter/matters.js","../node_modules/micromark-extension-frontmatter/lib/syntax.js","../node_modules/mdast-util-frontmatter/lib/index.js","../node_modules/remark-frontmatter/index.js","../node_modules/micromark-extension-gfm-autolink-literal/lib/syntax.js","../node_modules/micromark-extension-gfm-footnote/lib/syntax.js","../node_modules/micromark-extension-gfm-strikethrough/lib/syntax.js","../node_modules/micromark-extension-gfm-table/lib/syntax.js","../node_modules/micromark-extension-gfm-task-list-item/lib/syntax.js","../node_modules/mdast-util-gfm-autolink-literal/lib/index.js","../node_modules/mdast-util-to-markdown/lib/util/association.js","../node_modules/mdast-util-to-markdown/lib/util/pattern-compile.js","../node_modules/mdast-util-to-markdown/lib/util/pattern-in-scope.js","../node_modules/mdast-util-to-markdown/lib/util/safe.js","../node_modules/mdast-util-gfm-footnote/lib/index.js","../node_modules/mdast-util-gfm-strikethrough/lib/index.js","../node_modules/mdast-util-to-markdown/lib/handle/inline-code.js","../node_modules/markdown-table/index.js","../node_modules/mdast-util-gfm-table/lib/index.js","../node_modules/mdast-util-to-markdown/lib/handle/list-item.js","../node_modules/mdast-util-to-markdown/lib/util/check-list-item-indent.js","../node_modules/mdast-util-to-markdown/lib/util/check-bullet.js","../node_modules/mdast-util-gfm-task-list-item/lib/index.js","../node_modules/remark-gfm/index.js","../node_modules/micromark-extension-gfm/index.js","../node_modules/mdast-util-gfm/lib/index.js","../node_modules/remark-github/lib/index.js","../node_modules/acorn/dist/acorn.mjs","../node_modules/unist-util-position-from-estree/lib/index.js","../node_modules/estree-util-visit/lib/index.js","../node_modules/micromark-util-events-to-acorn/index.js","../node_modules/vfile-location/lib/index.js","../node_modules/micromark-factory-mdx-expression/index.js","../node_modules/micromark-extension-mdx-expression/lib/syntax.js","../node_modules/estree-util-is-identifier-name/lib/regex.js","../node_modules/estree-util-is-identifier-name/lib/index.js","../node_modules/micromark-extension-mdx-jsx/lib/factory-tag.js","../node_modules/micromark-extension-mdx-jsx/lib/jsx-text.js","../node_modules/micromark-extension-mdx-jsx/lib/jsx-flow.js","../node_modules/micromark-extension-mdx-jsx/lib/syntax.js","../node_modules/micromark-extension-mdx-md/index.js","../node_modules/micromark-extension-mdxjs-esm/lib/syntax.js","../node_modules/mdast-util-mdx-expression/lib/index.js","../node_modules/mdast-util-mdx-jsx/lib/index.js","../node_modules/mdast-util-mdxjs-esm/lib/index.js","../node_modules/remark-mdx/index.js","../node_modules/micromark-extension-mdxjs/index.js","../node_modules/mdast-util-mdx/index.js","../node_modules/stringify-entities/lib/core.js","../node_modules/stringify-entities/lib/util/format-basic.js","../node_modules/stringify-entities/lib/index.js","../node_modules/unist-util-is/lib/index.js","../node_modules/unist-util-stringify-position/lib/index.js","../node_modules/unist-util-visit-parents/lib/index.js","../node_modules/unist-util-visit/lib/index.js","../node_modules/vfile-message/lib/index.js"],"sourcesContent":["'use strict';\n\nconst XHTMLEntities = require('./xhtml');\n\nconst hexNumber = /^[\\da-fA-F]+$/;\nconst decimalNumber = /^\\d+$/;\n\n// The map to `acorn-jsx` tokens from `acorn` namespace objects.\nconst acornJsxMap = new WeakMap();\n\n// Get the original tokens for the given `acorn` namespace object.\nfunction getJsxTokens(acorn) {\n  acorn = acorn.Parser.acorn || acorn;\n  let acornJsx = acornJsxMap.get(acorn);\n  if (!acornJsx) {\n    const tt = acorn.tokTypes;\n    const TokContext = acorn.TokContext;\n    const TokenType = acorn.TokenType;\n    const tc_oTag = new TokContext('<tag', false);\n    const tc_cTag = new TokContext('</tag', false);\n    const tc_expr = new TokContext('<tag>...</tag>', true, true);\n    const tokContexts = {\n      tc_oTag: tc_oTag,\n      tc_cTag: tc_cTag,\n      tc_expr: tc_expr\n    };\n    const tokTypes = {\n      jsxName: new TokenType('jsxName'),\n      jsxText: new TokenType('jsxText', {beforeExpr: true}),\n      jsxTagStart: new TokenType('jsxTagStart', {startsExpr: true}),\n      jsxTagEnd: new TokenType('jsxTagEnd')\n    };\n\n    tokTypes.jsxTagStart.updateContext = function() {\n      this.context.push(tc_expr); // treat as beginning of JSX expression\n      this.context.push(tc_oTag); // start opening tag context\n      this.exprAllowed = false;\n    };\n    tokTypes.jsxTagEnd.updateContext = function(prevType) {\n      let out = this.context.pop();\n      if (out === tc_oTag && prevType === tt.slash || out === tc_cTag) {\n        this.context.pop();\n        this.exprAllowed = this.curContext() === tc_expr;\n      } else {\n        this.exprAllowed = true;\n      }\n    };\n\n    acornJsx = { tokContexts: tokContexts, tokTypes: tokTypes };\n    acornJsxMap.set(acorn, acornJsx);\n  }\n\n  return acornJsx;\n}\n\n// Transforms JSX element name to string.\n\nfunction getQualifiedJSXName(object) {\n  if (!object)\n    return object;\n\n  if (object.type === 'JSXIdentifier')\n    return object.name;\n\n  if (object.type === 'JSXNamespacedName')\n    return object.namespace.name + ':' + object.name.name;\n\n  if (object.type === 'JSXMemberExpression')\n    return getQualifiedJSXName(object.object) + '.' +\n    getQualifiedJSXName(object.property);\n}\n\nmodule.exports = function(options) {\n  options = options || {};\n  return function(Parser) {\n    return plugin({\n      allowNamespaces: options.allowNamespaces !== false,\n      allowNamespacedObjects: !!options.allowNamespacedObjects\n    }, Parser);\n  };\n};\n\n// This is `tokTypes` of the peer dep.\n// This can be different instances from the actual `tokTypes` this plugin uses.\nObject.defineProperty(module.exports, \"tokTypes\", {\n  get: function get_tokTypes() {\n    return getJsxTokens(require(\"acorn\")).tokTypes;\n  },\n  configurable: true,\n  enumerable: true\n});\n\nfunction plugin(options, Parser) {\n  const acorn = Parser.acorn || require(\"acorn\");\n  const acornJsx = getJsxTokens(acorn);\n  const tt = acorn.tokTypes;\n  const tok = acornJsx.tokTypes;\n  const tokContexts = acorn.tokContexts;\n  const tc_oTag = acornJsx.tokContexts.tc_oTag;\n  const tc_cTag = acornJsx.tokContexts.tc_cTag;\n  const tc_expr = acornJsx.tokContexts.tc_expr;\n  const isNewLine = acorn.isNewLine;\n  const isIdentifierStart = acorn.isIdentifierStart;\n  const isIdentifierChar = acorn.isIdentifierChar;\n\n  return class extends Parser {\n    // Expose actual `tokTypes` and `tokContexts` to other plugins.\n    static get acornJsx() {\n      return acornJsx;\n    }\n\n    // Reads inline JSX contents token.\n    jsx_readToken() {\n      let out = '', chunkStart = this.pos;\n      for (;;) {\n        if (this.pos >= this.input.length)\n          this.raise(this.start, 'Unterminated JSX contents');\n        let ch = this.input.charCodeAt(this.pos);\n\n        switch (ch) {\n        case 60: // '<'\n        case 123: // '{'\n          if (this.pos === this.start) {\n            if (ch === 60 && this.exprAllowed) {\n              ++this.pos;\n              return this.finishToken(tok.jsxTagStart);\n            }\n            return this.getTokenFromCode(ch);\n          }\n          out += this.input.slice(chunkStart, this.pos);\n          return this.finishToken(tok.jsxText, out);\n\n        case 38: // '&'\n          out += this.input.slice(chunkStart, this.pos);\n          out += this.jsx_readEntity();\n          chunkStart = this.pos;\n          break;\n\n        case 62: // '>'\n        case 125: // '}'\n          this.raise(\n            this.pos,\n            \"Unexpected token `\" + this.input[this.pos] + \"`. Did you mean `\" +\n              (ch === 62 ? \"&gt;\" : \"&rbrace;\") + \"` or \" + \"`{\\\"\" + this.input[this.pos] + \"\\\"}\" + \"`?\"\n          );\n\n        default:\n          if (isNewLine(ch)) {\n            out += this.input.slice(chunkStart, this.pos);\n            out += this.jsx_readNewLine(true);\n            chunkStart = this.pos;\n          } else {\n            ++this.pos;\n          }\n        }\n      }\n    }\n\n    jsx_readNewLine(normalizeCRLF) {\n      let ch = this.input.charCodeAt(this.pos);\n      let out;\n      ++this.pos;\n      if (ch === 13 && this.input.charCodeAt(this.pos) === 10) {\n        ++this.pos;\n        out = normalizeCRLF ? '\\n' : '\\r\\n';\n      } else {\n        out = String.fromCharCode(ch);\n      }\n      if (this.options.locations) {\n        ++this.curLine;\n        this.lineStart = this.pos;\n      }\n\n      return out;\n    }\n\n    jsx_readString(quote) {\n      let out = '', chunkStart = ++this.pos;\n      for (;;) {\n        if (this.pos >= this.input.length)\n          this.raise(this.start, 'Unterminated string constant');\n        let ch = this.input.charCodeAt(this.pos);\n        if (ch === quote) break;\n        if (ch === 38) { // '&'\n          out += this.input.slice(chunkStart, this.pos);\n          out += this.jsx_readEntity();\n          chunkStart = this.pos;\n        } else if (isNewLine(ch)) {\n          out += this.input.slice(chunkStart, this.pos);\n          out += this.jsx_readNewLine(false);\n          chunkStart = this.pos;\n        } else {\n          ++this.pos;\n        }\n      }\n      out += this.input.slice(chunkStart, this.pos++);\n      return this.finishToken(tt.string, out);\n    }\n\n    jsx_readEntity() {\n      let str = '', count = 0, entity;\n      let ch = this.input[this.pos];\n      if (ch !== '&')\n        this.raise(this.pos, 'Entity must start with an ampersand');\n      let startPos = ++this.pos;\n      while (this.pos < this.input.length && count++ < 10) {\n        ch = this.input[this.pos++];\n        if (ch === ';') {\n          if (str[0] === '#') {\n            if (str[1] === 'x') {\n              str = str.substr(2);\n              if (hexNumber.test(str))\n                entity = String.fromCharCode(parseInt(str, 16));\n            } else {\n              str = str.substr(1);\n              if (decimalNumber.test(str))\n                entity = String.fromCharCode(parseInt(str, 10));\n            }\n          } else {\n            entity = XHTMLEntities[str];\n          }\n          break;\n        }\n        str += ch;\n      }\n      if (!entity) {\n        this.pos = startPos;\n        return '&';\n      }\n      return entity;\n    }\n\n    // Read a JSX identifier (valid tag or attribute name).\n    //\n    // Optimized version since JSX identifiers can't contain\n    // escape characters and so can be read as single slice.\n    // Also assumes that first character was already checked\n    // by isIdentifierStart in readToken.\n\n    jsx_readWord() {\n      let ch, start = this.pos;\n      do {\n        ch = this.input.charCodeAt(++this.pos);\n      } while (isIdentifierChar(ch) || ch === 45); // '-'\n      return this.finishToken(tok.jsxName, this.input.slice(start, this.pos));\n    }\n\n    // Parse next token as JSX identifier\n\n    jsx_parseIdentifier() {\n      let node = this.startNode();\n      if (this.type === tok.jsxName)\n        node.name = this.value;\n      else if (this.type.keyword)\n        node.name = this.type.keyword;\n      else\n        this.unexpected();\n      this.next();\n      return this.finishNode(node, 'JSXIdentifier');\n    }\n\n    // Parse namespaced identifier.\n\n    jsx_parseNamespacedName() {\n      let startPos = this.start, startLoc = this.startLoc;\n      let name = this.jsx_parseIdentifier();\n      if (!options.allowNamespaces || !this.eat(tt.colon)) return name;\n      var node = this.startNodeAt(startPos, startLoc);\n      node.namespace = name;\n      node.name = this.jsx_parseIdentifier();\n      return this.finishNode(node, 'JSXNamespacedName');\n    }\n\n    // Parses element name in any form - namespaced, member\n    // or single identifier.\n\n    jsx_parseElementName() {\n      if (this.type === tok.jsxTagEnd) return '';\n      let startPos = this.start, startLoc = this.startLoc;\n      let node = this.jsx_parseNamespacedName();\n      if (this.type === tt.dot && node.type === 'JSXNamespacedName' && !options.allowNamespacedObjects) {\n        this.unexpected();\n      }\n      while (this.eat(tt.dot)) {\n        let newNode = this.startNodeAt(startPos, startLoc);\n        newNode.object = node;\n        newNode.property = this.jsx_parseIdentifier();\n        node = this.finishNode(newNode, 'JSXMemberExpression');\n      }\n      return node;\n    }\n\n    // Parses any type of JSX attribute value.\n\n    jsx_parseAttributeValue() {\n      switch (this.type) {\n      case tt.braceL:\n        let node = this.jsx_parseExpressionContainer();\n        if (node.expression.type === 'JSXEmptyExpression')\n          this.raise(node.start, 'JSX attributes must only be assigned a non-empty expression');\n        return node;\n\n      case tok.jsxTagStart:\n      case tt.string:\n        return this.parseExprAtom();\n\n      default:\n        this.raise(this.start, 'JSX value should be either an expression or a quoted JSX text');\n      }\n    }\n\n    // JSXEmptyExpression is unique type since it doesn't actually parse anything,\n    // and so it should start at the end of last read token (left brace) and finish\n    // at the beginning of the next one (right brace).\n\n    jsx_parseEmptyExpression() {\n      let node = this.startNodeAt(this.lastTokEnd, this.lastTokEndLoc);\n      return this.finishNodeAt(node, 'JSXEmptyExpression', this.start, this.startLoc);\n    }\n\n    // Parses JSX expression enclosed into curly brackets.\n\n    jsx_parseExpressionContainer() {\n      let node = this.startNode();\n      this.next();\n      node.expression = this.type === tt.braceR\n        ? this.jsx_parseEmptyExpression()\n        : this.parseExpression();\n      this.expect(tt.braceR);\n      return this.finishNode(node, 'JSXExpressionContainer');\n    }\n\n    // Parses following JSX attribute name-value pair.\n\n    jsx_parseAttribute() {\n      let node = this.startNode();\n      if (this.eat(tt.braceL)) {\n        this.expect(tt.ellipsis);\n        node.argument = this.parseMaybeAssign();\n        this.expect(tt.braceR);\n        return this.finishNode(node, 'JSXSpreadAttribute');\n      }\n      node.name = this.jsx_parseNamespacedName();\n      node.value = this.eat(tt.eq) ? this.jsx_parseAttributeValue() : null;\n      return this.finishNode(node, 'JSXAttribute');\n    }\n\n    // Parses JSX opening tag starting after '<'.\n\n    jsx_parseOpeningElementAt(startPos, startLoc) {\n      let node = this.startNodeAt(startPos, startLoc);\n      node.attributes = [];\n      let nodeName = this.jsx_parseElementName();\n      if (nodeName) node.name = nodeName;\n      while (this.type !== tt.slash && this.type !== tok.jsxTagEnd)\n        node.attributes.push(this.jsx_parseAttribute());\n      node.selfClosing = this.eat(tt.slash);\n      this.expect(tok.jsxTagEnd);\n      return this.finishNode(node, nodeName ? 'JSXOpeningElement' : 'JSXOpeningFragment');\n    }\n\n    // Parses JSX closing tag starting after '</'.\n\n    jsx_parseClosingElementAt(startPos, startLoc) {\n      let node = this.startNodeAt(startPos, startLoc);\n      let nodeName = this.jsx_parseElementName();\n      if (nodeName) node.name = nodeName;\n      this.expect(tok.jsxTagEnd);\n      return this.finishNode(node, nodeName ? 'JSXClosingElement' : 'JSXClosingFragment');\n    }\n\n    // Parses entire JSX element, including it's opening tag\n    // (starting after '<'), attributes, contents and closing tag.\n\n    jsx_parseElementAt(startPos, startLoc) {\n      let node = this.startNodeAt(startPos, startLoc);\n      let children = [];\n      let openingElement = this.jsx_parseOpeningElementAt(startPos, startLoc);\n      let closingElement = null;\n\n      if (!openingElement.selfClosing) {\n        contents: for (;;) {\n          switch (this.type) {\n          case tok.jsxTagStart:\n            startPos = this.start; startLoc = this.startLoc;\n            this.next();\n            if (this.eat(tt.slash)) {\n              closingElement = this.jsx_parseClosingElementAt(startPos, startLoc);\n              break contents;\n            }\n            children.push(this.jsx_parseElementAt(startPos, startLoc));\n            break;\n\n          case tok.jsxText:\n            children.push(this.parseExprAtom());\n            break;\n\n          case tt.braceL:\n            children.push(this.jsx_parseExpressionContainer());\n            break;\n\n          default:\n            this.unexpected();\n          }\n        }\n        if (getQualifiedJSXName(closingElement.name) !== getQualifiedJSXName(openingElement.name)) {\n          this.raise(\n            closingElement.start,\n            'Expected corresponding JSX closing tag for <' + getQualifiedJSXName(openingElement.name) + '>');\n        }\n      }\n      let fragmentOrElement = openingElement.name ? 'Element' : 'Fragment';\n\n      node['opening' + fragmentOrElement] = openingElement;\n      node['closing' + fragmentOrElement] = closingElement;\n      node.children = children;\n      if (this.type === tt.relational && this.value === \"<\") {\n        this.raise(this.start, \"Adjacent JSX elements must be wrapped in an enclosing tag\");\n      }\n      return this.finishNode(node, 'JSX' + fragmentOrElement);\n    }\n\n    // Parse JSX text\n\n    jsx_parseText() {\n      let node = this.parseLiteral(this.value);\n      node.type = \"JSXText\";\n      return node;\n    }\n\n    // Parses entire JSX element from current position.\n\n    jsx_parseElement() {\n      let startPos = this.start, startLoc = this.startLoc;\n      this.next();\n      return this.jsx_parseElementAt(startPos, startLoc);\n    }\n\n    parseExprAtom(refShortHandDefaultPos) {\n      if (this.type === tok.jsxText)\n        return this.jsx_parseText();\n      else if (this.type === tok.jsxTagStart)\n        return this.jsx_parseElement();\n      else\n        return super.parseExprAtom(refShortHandDefaultPos);\n    }\n\n    readToken(code) {\n      let context = this.curContext();\n\n      if (context === tc_expr) return this.jsx_readToken();\n\n      if (context === tc_oTag || context === tc_cTag) {\n        if (isIdentifierStart(code)) return this.jsx_readWord();\n\n        if (code == 62) {\n          ++this.pos;\n          return this.finishToken(tok.jsxTagEnd);\n        }\n\n        if ((code === 34 || code === 39) && context == tc_oTag)\n          return this.jsx_readString(code);\n      }\n\n      if (code === 60 && this.exprAllowed && this.input.charCodeAt(this.pos + 1) !== 33) {\n        ++this.pos;\n        return this.finishToken(tok.jsxTagStart);\n      }\n      return super.readToken(code);\n    }\n\n    updateContext(prevType) {\n      if (this.type == tt.braceL) {\n        var curContext = this.curContext();\n        if (curContext == tc_oTag) this.context.push(tokContexts.b_expr);\n        else if (curContext == tc_expr) this.context.push(tokContexts.b_tmpl);\n        else super.updateContext(prevType);\n        this.exprAllowed = true;\n      } else if (this.type === tt.slash && prevType === tok.jsxTagStart) {\n        this.context.length -= 2; // do not consider JSX expr -> JSX open tag -> ... anymore\n        this.context.push(tc_cTag); // reconsider as closing tag context\n        this.exprAllowed = false;\n      } else {\n        return super.updateContext(prevType);\n      }\n    }\n  };\n}\n","module.exports = {\n  quot: '\\u0022',\n  amp: '&',\n  apos: '\\u0027',\n  lt: '<',\n  gt: '>',\n  nbsp: '\\u00A0',\n  iexcl: '\\u00A1',\n  cent: '\\u00A2',\n  pound: '\\u00A3',\n  curren: '\\u00A4',\n  yen: '\\u00A5',\n  brvbar: '\\u00A6',\n  sect: '\\u00A7',\n  uml: '\\u00A8',\n  copy: '\\u00A9',\n  ordf: '\\u00AA',\n  laquo: '\\u00AB',\n  not: '\\u00AC',\n  shy: '\\u00AD',\n  reg: '\\u00AE',\n  macr: '\\u00AF',\n  deg: '\\u00B0',\n  plusmn: '\\u00B1',\n  sup2: '\\u00B2',\n  sup3: '\\u00B3',\n  acute: '\\u00B4',\n  micro: '\\u00B5',\n  para: '\\u00B6',\n  middot: '\\u00B7',\n  cedil: '\\u00B8',\n  sup1: '\\u00B9',\n  ordm: '\\u00BA',\n  raquo: '\\u00BB',\n  frac14: '\\u00BC',\n  frac12: '\\u00BD',\n  frac34: '\\u00BE',\n  iquest: '\\u00BF',\n  Agrave: '\\u00C0',\n  Aacute: '\\u00C1',\n  Acirc: '\\u00C2',\n  Atilde: '\\u00C3',\n  Auml: '\\u00C4',\n  Aring: '\\u00C5',\n  AElig: '\\u00C6',\n  Ccedil: '\\u00C7',\n  Egrave: '\\u00C8',\n  Eacute: '\\u00C9',\n  Ecirc: '\\u00CA',\n  Euml: '\\u00CB',\n  Igrave: '\\u00CC',\n  Iacute: '\\u00CD',\n  Icirc: '\\u00CE',\n  Iuml: '\\u00CF',\n  ETH: '\\u00D0',\n  Ntilde: '\\u00D1',\n  Ograve: '\\u00D2',\n  Oacute: '\\u00D3',\n  Ocirc: '\\u00D4',\n  Otilde: '\\u00D5',\n  Ouml: '\\u00D6',\n  times: '\\u00D7',\n  Oslash: '\\u00D8',\n  Ugrave: '\\u00D9',\n  Uacute: '\\u00DA',\n  Ucirc: '\\u00DB',\n  Uuml: '\\u00DC',\n  Yacute: '\\u00DD',\n  THORN: '\\u00DE',\n  szlig: '\\u00DF',\n  agrave: '\\u00E0',\n  aacute: '\\u00E1',\n  acirc: '\\u00E2',\n  atilde: '\\u00E3',\n  auml: '\\u00E4',\n  aring: '\\u00E5',\n  aelig: '\\u00E6',\n  ccedil: '\\u00E7',\n  egrave: '\\u00E8',\n  eacute: '\\u00E9',\n  ecirc: '\\u00EA',\n  euml: '\\u00EB',\n  igrave: '\\u00EC',\n  iacute: '\\u00ED',\n  icirc: '\\u00EE',\n  iuml: '\\u00EF',\n  eth: '\\u00F0',\n  ntilde: '\\u00F1',\n  ograve: '\\u00F2',\n  oacute: '\\u00F3',\n  ocirc: '\\u00F4',\n  otilde: '\\u00F5',\n  ouml: '\\u00F6',\n  divide: '\\u00F7',\n  oslash: '\\u00F8',\n  ugrave: '\\u00F9',\n  uacute: '\\u00FA',\n  ucirc: '\\u00FB',\n  uuml: '\\u00FC',\n  yacute: '\\u00FD',\n  thorn: '\\u00FE',\n  yuml: '\\u00FF',\n  OElig: '\\u0152',\n  oelig: '\\u0153',\n  Scaron: '\\u0160',\n  scaron: '\\u0161',\n  Yuml: '\\u0178',\n  fnof: '\\u0192',\n  circ: '\\u02C6',\n  tilde: '\\u02DC',\n  Alpha: '\\u0391',\n  Beta: '\\u0392',\n  Gamma: '\\u0393',\n  Delta: '\\u0394',\n  Epsilon: '\\u0395',\n  Zeta: '\\u0396',\n  Eta: '\\u0397',\n  Theta: '\\u0398',\n  Iota: '\\u0399',\n  Kappa: '\\u039A',\n  Lambda: '\\u039B',\n  Mu: '\\u039C',\n  Nu: '\\u039D',\n  Xi: '\\u039E',\n  Omicron: '\\u039F',\n  Pi: '\\u03A0',\n  Rho: '\\u03A1',\n  Sigma: '\\u03A3',\n  Tau: '\\u03A4',\n  Upsilon: '\\u03A5',\n  Phi: '\\u03A6',\n  Chi: '\\u03A7',\n  Psi: '\\u03A8',\n  Omega: '\\u03A9',\n  alpha: '\\u03B1',\n  beta: '\\u03B2',\n  gamma: '\\u03B3',\n  delta: '\\u03B4',\n  epsilon: '\\u03B5',\n  zeta: '\\u03B6',\n  eta: '\\u03B7',\n  theta: '\\u03B8',\n  iota: '\\u03B9',\n  kappa: '\\u03BA',\n  lambda: '\\u03BB',\n  mu: '\\u03BC',\n  nu: '\\u03BD',\n  xi: '\\u03BE',\n  omicron: '\\u03BF',\n  pi: '\\u03C0',\n  rho: '\\u03C1',\n  sigmaf: '\\u03C2',\n  sigma: '\\u03C3',\n  tau: '\\u03C4',\n  upsilon: '\\u03C5',\n  phi: '\\u03C6',\n  chi: '\\u03C7',\n  psi: '\\u03C8',\n  omega: '\\u03C9',\n  thetasym: '\\u03D1',\n  upsih: '\\u03D2',\n  piv: '\\u03D6',\n  ensp: '\\u2002',\n  emsp: '\\u2003',\n  thinsp: '\\u2009',\n  zwnj: '\\u200C',\n  zwj: '\\u200D',\n  lrm: '\\u200E',\n  rlm: '\\u200F',\n  ndash: '\\u2013',\n  mdash: '\\u2014',\n  lsquo: '\\u2018',\n  rsquo: '\\u2019',\n  sbquo: '\\u201A',\n  ldquo: '\\u201C',\n  rdquo: '\\u201D',\n  bdquo: '\\u201E',\n  dagger: '\\u2020',\n  Dagger: '\\u2021',\n  bull: '\\u2022',\n  hellip: '\\u2026',\n  permil: '\\u2030',\n  prime: '\\u2032',\n  Prime: '\\u2033',\n  lsaquo: '\\u2039',\n  rsaquo: '\\u203A',\n  oline: '\\u203E',\n  frasl: '\\u2044',\n  euro: '\\u20AC',\n  image: '\\u2111',\n  weierp: '\\u2118',\n  real: '\\u211C',\n  trade: '\\u2122',\n  alefsym: '\\u2135',\n  larr: '\\u2190',\n  uarr: '\\u2191',\n  rarr: '\\u2192',\n  darr: '\\u2193',\n  harr: '\\u2194',\n  crarr: '\\u21B5',\n  lArr: '\\u21D0',\n  uArr: '\\u21D1',\n  rArr: '\\u21D2',\n  dArr: '\\u21D3',\n  hArr: '\\u21D4',\n  forall: '\\u2200',\n  part: '\\u2202',\n  exist: '\\u2203',\n  empty: '\\u2205',\n  nabla: '\\u2207',\n  isin: '\\u2208',\n  notin: '\\u2209',\n  ni: '\\u220B',\n  prod: '\\u220F',\n  sum: '\\u2211',\n  minus: '\\u2212',\n  lowast: '\\u2217',\n  radic: '\\u221A',\n  prop: '\\u221D',\n  infin: '\\u221E',\n  ang: '\\u2220',\n  and: '\\u2227',\n  or: '\\u2228',\n  cap: '\\u2229',\n  cup: '\\u222A',\n  'int': '\\u222B',\n  there4: '\\u2234',\n  sim: '\\u223C',\n  cong: '\\u2245',\n  asymp: '\\u2248',\n  ne: '\\u2260',\n  equiv: '\\u2261',\n  le: '\\u2264',\n  ge: '\\u2265',\n  sub: '\\u2282',\n  sup: '\\u2283',\n  nsub: '\\u2284',\n  sube: '\\u2286',\n  supe: '\\u2287',\n  oplus: '\\u2295',\n  otimes: '\\u2297',\n  perp: '\\u22A5',\n  sdot: '\\u22C5',\n  lceil: '\\u2308',\n  rceil: '\\u2309',\n  lfloor: '\\u230A',\n  rfloor: '\\u230B',\n  lang: '\\u2329',\n  rang: '\\u232A',\n  loz: '\\u25CA',\n  spades: '\\u2660',\n  clubs: '\\u2663',\n  hearts: '\\u2665',\n  diams: '\\u2666'\n};\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.acorn = {}));\n})(this, (function (exports) { 'use strict';\n\n  // This file was generated. Do not modify manually!\n  var astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 81, 2, 71, 10, 50, 3, 123, 2, 54, 14, 32, 10, 3, 1, 11, 3, 46, 10, 8, 0, 46, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 3, 0, 158, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 10, 1, 2, 0, 49, 6, 4, 4, 14, 9, 5351, 0, 7, 14, 13835, 9, 87, 9, 39, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 4706, 45, 3, 22, 543, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 101, 0, 161, 6, 10, 9, 357, 0, 62, 13, 499, 13, 983, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];\n\n  // This file was generated. Do not modify manually!\n  var astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 13, 10, 2, 14, 2, 6, 2, 1, 2, 10, 2, 14, 2, 6, 2, 1, 68, 310, 10, 21, 11, 7, 25, 5, 2, 41, 2, 8, 70, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 43, 17, 47, 20, 28, 22, 13, 52, 58, 1, 3, 0, 14, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 20, 1, 64, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 38, 6, 186, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 19, 72, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 16, 0, 2, 12, 2, 33, 125, 0, 80, 921, 103, 110, 18, 195, 2637, 96, 16, 1071, 18, 5, 4026, 582, 8634, 568, 8, 30, 18, 78, 18, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8936, 3, 2, 6, 2, 1, 2, 290, 16, 0, 30, 2, 3, 0, 15, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 1845, 30, 7, 5, 262, 61, 147, 44, 11, 6, 17, 0, 322, 29, 19, 43, 485, 27, 757, 6, 2, 3, 2, 1, 2, 14, 2, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42719, 33, 4153, 7, 221, 3, 5761, 15, 7472, 3104, 541, 1507, 4938, 6, 4191];\n\n  // This file was generated. Do not modify manually!\n  var nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u0898-\\u089f\\u08ca-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3c\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0cf3\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ece\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1715\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u180f-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf-\\u1ace\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\n\n  // This file was generated. Do not modify manually!\n  var nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u0870-\\u0887\\u0889-\\u088e\\u08a0-\\u08c9\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c5d\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cdd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u1711\\u171f-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4c\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7ca\\ua7d0\\ua7d1\\ua7d3\\ua7d5-\\ua7d9\\ua7f2-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\n\n  // These are a run-length and offset encoded representation of the\n\n  // Reserved word lists for various dialects of the language\n\n  var reservedWords = {\n    3: \"abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile\",\n    5: \"class enum extends super const export import\",\n    6: \"enum\",\n    strict: \"implements interface let package private protected public static yield\",\n    strictBind: \"eval arguments\"\n  };\n\n  // And the keywords\n\n  var ecma5AndLessKeywords = \"break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this\";\n\n  var keywords$1 = {\n    5: ecma5AndLessKeywords,\n    \"5module\": ecma5AndLessKeywords + \" export import\",\n    6: ecma5AndLessKeywords + \" const class extends export import super\"\n  };\n\n  var keywordRelationalOperator = /^in(stanceof)?$/;\n\n  // ## Character categories\n\n  var nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\n  var nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\n\n  // This has a complexity linear to the value of the code. The\n  // assumption is that looking up astral identifier characters is\n  // rare.\n  function isInAstralSet(code, set) {\n    var pos = 0x10000;\n    for (var i = 0; i < set.length; i += 2) {\n      pos += set[i];\n      if (pos > code) { return false }\n      pos += set[i + 1];\n      if (pos >= code) { return true }\n    }\n    return false\n  }\n\n  // Test whether a given character code starts an identifier.\n\n  function isIdentifierStart(code, astral) {\n    if (code < 65) { return code === 36 }\n    if (code < 91) { return true }\n    if (code < 97) { return code === 95 }\n    if (code < 123) { return true }\n    if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code)) }\n    if (astral === false) { return false }\n    return isInAstralSet(code, astralIdentifierStartCodes)\n  }\n\n  // Test whether a given character is part of an identifier.\n\n  function isIdentifierChar(code, astral) {\n    if (code < 48) { return code === 36 }\n    if (code < 58) { return true }\n    if (code < 65) { return false }\n    if (code < 91) { return true }\n    if (code < 97) { return code === 95 }\n    if (code < 123) { return true }\n    if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code)) }\n    if (astral === false) { return false }\n    return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes)\n  }\n\n  // ## Token types\n\n  // The assignment of fine-grained, information-carrying type objects\n  // allows the tokenizer to store the information it has about a\n  // token in a way that is very cheap for the parser to look up.\n\n  // All token type variables start with an underscore, to make them\n  // easy to recognize.\n\n  // The `beforeExpr` property is used to disambiguate between regular\n  // expressions and divisions. It is set on all token types that can\n  // be followed by an expression (thus, a slash after them would be a\n  // regular expression).\n  //\n  // The `startsExpr` property is used to check if the token ends a\n  // `yield` expression. It is set on all token types that either can\n  // directly start an expression (like a quotation mark) or can\n  // continue an expression (like the body of a string).\n  //\n  // `isLoop` marks a keyword as starting a loop, which is important\n  // to know when parsing a label, in order to allow or disallow\n  // continue jumps to that label.\n\n  var TokenType = function TokenType(label, conf) {\n    if ( conf === void 0 ) conf = {};\n\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop || null;\n    this.updateContext = null;\n  };\n\n  function binop(name, prec) {\n    return new TokenType(name, {beforeExpr: true, binop: prec})\n  }\n  var beforeExpr = {beforeExpr: true}, startsExpr = {startsExpr: true};\n\n  // Map keyword names to token types.\n\n  var keywords = {};\n\n  // Succinct definitions of keyword token types\n  function kw(name, options) {\n    if ( options === void 0 ) options = {};\n\n    options.keyword = name;\n    return keywords[name] = new TokenType(name, options)\n  }\n\n  var types$1 = {\n    num: new TokenType(\"num\", startsExpr),\n    regexp: new TokenType(\"regexp\", startsExpr),\n    string: new TokenType(\"string\", startsExpr),\n    name: new TokenType(\"name\", startsExpr),\n    privateId: new TokenType(\"privateId\", startsExpr),\n    eof: new TokenType(\"eof\"),\n\n    // Punctuation token types.\n    bracketL: new TokenType(\"[\", {beforeExpr: true, startsExpr: true}),\n    bracketR: new TokenType(\"]\"),\n    braceL: new TokenType(\"{\", {beforeExpr: true, startsExpr: true}),\n    braceR: new TokenType(\"}\"),\n    parenL: new TokenType(\"(\", {beforeExpr: true, startsExpr: true}),\n    parenR: new TokenType(\")\"),\n    comma: new TokenType(\",\", beforeExpr),\n    semi: new TokenType(\";\", beforeExpr),\n    colon: new TokenType(\":\", beforeExpr),\n    dot: new TokenType(\".\"),\n    question: new TokenType(\"?\", beforeExpr),\n    questionDot: new TokenType(\"?.\"),\n    arrow: new TokenType(\"=>\", beforeExpr),\n    template: new TokenType(\"template\"),\n    invalidTemplate: new TokenType(\"invalidTemplate\"),\n    ellipsis: new TokenType(\"...\", beforeExpr),\n    backQuote: new TokenType(\"`\", startsExpr),\n    dollarBraceL: new TokenType(\"${\", {beforeExpr: true, startsExpr: true}),\n\n    // Operators. These carry several kinds of properties to help the\n    // parser use them properly (the presence of these properties is\n    // what categorizes them as operators).\n    //\n    // `binop`, when present, specifies that this operator is a binary\n    // operator, and will refer to its precedence.\n    //\n    // `prefix` and `postfix` mark the operator as a prefix or postfix\n    // unary operator.\n    //\n    // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as\n    // binary operators with a very low precedence, that should result\n    // in AssignmentExpression nodes.\n\n    eq: new TokenType(\"=\", {beforeExpr: true, isAssign: true}),\n    assign: new TokenType(\"_=\", {beforeExpr: true, isAssign: true}),\n    incDec: new TokenType(\"++/--\", {prefix: true, postfix: true, startsExpr: true}),\n    prefix: new TokenType(\"!/~\", {beforeExpr: true, prefix: true, startsExpr: true}),\n    logicalOR: binop(\"||\", 1),\n    logicalAND: binop(\"&&\", 2),\n    bitwiseOR: binop(\"|\", 3),\n    bitwiseXOR: binop(\"^\", 4),\n    bitwiseAND: binop(\"&\", 5),\n    equality: binop(\"==/!=/===/!==\", 6),\n    relational: binop(\"</>/<=/>=\", 7),\n    bitShift: binop(\"<</>>/>>>\", 8),\n    plusMin: new TokenType(\"+/-\", {beforeExpr: true, binop: 9, prefix: true, startsExpr: true}),\n    modulo: binop(\"%\", 10),\n    star: binop(\"*\", 10),\n    slash: binop(\"/\", 10),\n    starstar: new TokenType(\"**\", {beforeExpr: true}),\n    coalesce: binop(\"??\", 1),\n\n    // Keyword token types.\n    _break: kw(\"break\"),\n    _case: kw(\"case\", beforeExpr),\n    _catch: kw(\"catch\"),\n    _continue: kw(\"continue\"),\n    _debugger: kw(\"debugger\"),\n    _default: kw(\"default\", beforeExpr),\n    _do: kw(\"do\", {isLoop: true, beforeExpr: true}),\n    _else: kw(\"else\", beforeExpr),\n    _finally: kw(\"finally\"),\n    _for: kw(\"for\", {isLoop: true}),\n    _function: kw(\"function\", startsExpr),\n    _if: kw(\"if\"),\n    _return: kw(\"return\", beforeExpr),\n    _switch: kw(\"switch\"),\n    _throw: kw(\"throw\", beforeExpr),\n    _try: kw(\"try\"),\n    _var: kw(\"var\"),\n    _const: kw(\"const\"),\n    _while: kw(\"while\", {isLoop: true}),\n    _with: kw(\"with\"),\n    _new: kw(\"new\", {beforeExpr: true, startsExpr: true}),\n    _this: kw(\"this\", startsExpr),\n    _super: kw(\"super\", startsExpr),\n    _class: kw(\"class\", startsExpr),\n    _extends: kw(\"extends\", beforeExpr),\n    _export: kw(\"export\"),\n    _import: kw(\"import\", startsExpr),\n    _null: kw(\"null\", startsExpr),\n    _true: kw(\"true\", startsExpr),\n    _false: kw(\"false\", startsExpr),\n    _in: kw(\"in\", {beforeExpr: true, binop: 7}),\n    _instanceof: kw(\"instanceof\", {beforeExpr: true, binop: 7}),\n    _typeof: kw(\"typeof\", {beforeExpr: true, prefix: true, startsExpr: true}),\n    _void: kw(\"void\", {beforeExpr: true, prefix: true, startsExpr: true}),\n    _delete: kw(\"delete\", {beforeExpr: true, prefix: true, startsExpr: true})\n  };\n\n  // Matches a whole line break (where CRLF is considered a single\n  // line break). Used to count lines.\n\n  var lineBreak = /\\r\\n?|\\n|\\u2028|\\u2029/;\n  var lineBreakG = new RegExp(lineBreak.source, \"g\");\n\n  function isNewLine(code) {\n    return code === 10 || code === 13 || code === 0x2028 || code === 0x2029\n  }\n\n  function nextLineBreak(code, from, end) {\n    if ( end === void 0 ) end = code.length;\n\n    for (var i = from; i < end; i++) {\n      var next = code.charCodeAt(i);\n      if (isNewLine(next))\n        { return i < end - 1 && next === 13 && code.charCodeAt(i + 1) === 10 ? i + 2 : i + 1 }\n    }\n    return -1\n  }\n\n  var nonASCIIwhitespace = /[\\u1680\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/;\n\n  var skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\n\n  var ref = Object.prototype;\n  var hasOwnProperty = ref.hasOwnProperty;\n  var toString = ref.toString;\n\n  var hasOwn = Object.hasOwn || (function (obj, propName) { return (\n    hasOwnProperty.call(obj, propName)\n  ); });\n\n  var isArray = Array.isArray || (function (obj) { return (\n    toString.call(obj) === \"[object Array]\"\n  ); });\n\n  function wordsRegexp(words) {\n    return new RegExp(\"^(?:\" + words.replace(/ /g, \"|\") + \")$\")\n  }\n\n  function codePointToString(code) {\n    // UTF-16 Decoding\n    if (code <= 0xFFFF) { return String.fromCharCode(code) }\n    code -= 0x10000;\n    return String.fromCharCode((code >> 10) + 0xD800, (code & 1023) + 0xDC00)\n  }\n\n  var loneSurrogate = /(?:[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])/;\n\n  // These are used when `options.locations` is on, for the\n  // `startLoc` and `endLoc` properties.\n\n  var Position = function Position(line, col) {\n    this.line = line;\n    this.column = col;\n  };\n\n  Position.prototype.offset = function offset (n) {\n    return new Position(this.line, this.column + n)\n  };\n\n  var SourceLocation = function SourceLocation(p, start, end) {\n    this.start = start;\n    this.end = end;\n    if (p.sourceFile !== null) { this.source = p.sourceFile; }\n  };\n\n  // The `getLineInfo` function is mostly useful when the\n  // `locations` option is off (for performance reasons) and you\n  // want to find the line/column position for a given character\n  // offset. `input` should be the code string that the offset refers\n  // into.\n\n  function getLineInfo(input, offset) {\n    for (var line = 1, cur = 0;;) {\n      var nextBreak = nextLineBreak(input, cur, offset);\n      if (nextBreak < 0) { return new Position(line, offset - cur) }\n      ++line;\n      cur = nextBreak;\n    }\n  }\n\n  // A second argument must be given to configure the parser process.\n  // These options are recognized (only `ecmaVersion` is required):\n\n  var defaultOptions = {\n    // `ecmaVersion` indicates the ECMAScript version to parse. Must be\n    // either 3, 5, 6 (or 2015), 7 (2016), 8 (2017), 9 (2018), 10\n    // (2019), 11 (2020), 12 (2021), 13 (2022), 14 (2023), or `\"latest\"`\n    // (the latest version the library supports). This influences\n    // support for strict mode, the set of reserved words, and support\n    // for new syntax features.\n    ecmaVersion: null,\n    // `sourceType` indicates the mode the code should be parsed in.\n    // Can be either `\"script\"` or `\"module\"`. This influences global\n    // strict mode and parsing of `import` and `export` declarations.\n    sourceType: \"script\",\n    // `onInsertedSemicolon` can be a callback that will be called\n    // when a semicolon is automatically inserted. It will be passed\n    // the position of the comma as an offset, and if `locations` is\n    // enabled, it is given the location as a `{line, column}` object\n    // as second argument.\n    onInsertedSemicolon: null,\n    // `onTrailingComma` is similar to `onInsertedSemicolon`, but for\n    // trailing commas.\n    onTrailingComma: null,\n    // By default, reserved words are only enforced if ecmaVersion >= 5.\n    // Set `allowReserved` to a boolean value to explicitly turn this on\n    // an off. When this option has the value \"never\", reserved words\n    // and keywords can also not be used as property names.\n    allowReserved: null,\n    // When enabled, a return at the top level is not considered an\n    // error.\n    allowReturnOutsideFunction: false,\n    // When enabled, import/export statements are not constrained to\n    // appearing at the top of the program, and an import.meta expression\n    // in a script isn't considered an error.\n    allowImportExportEverywhere: false,\n    // By default, await identifiers are allowed to appear at the top-level scope only if ecmaVersion >= 2022.\n    // When enabled, await identifiers are allowed to appear at the top-level scope,\n    // but they are still not allowed in non-async functions.\n    allowAwaitOutsideFunction: null,\n    // When enabled, super identifiers are not constrained to\n    // appearing in methods and do not raise an error when they appear elsewhere.\n    allowSuperOutsideMethod: null,\n    // When enabled, hashbang directive in the beginning of file is\n    // allowed and treated as a line comment. Enabled by default when\n    // `ecmaVersion` >= 2023.\n    allowHashBang: false,\n    // When `locations` is on, `loc` properties holding objects with\n    // `start` and `end` properties in `{line, column}` form (with\n    // line being 1-based and column 0-based) will be attached to the\n    // nodes.\n    locations: false,\n    // A function can be passed as `onToken` option, which will\n    // cause Acorn to call that function with object in the same\n    // format as tokens returned from `tokenizer().getToken()`. Note\n    // that you are not allowed to call the parser from the\n    // callback—that will corrupt its internal state.\n    onToken: null,\n    // A function can be passed as `onComment` option, which will\n    // cause Acorn to call that function with `(block, text, start,\n    // end)` parameters whenever a comment is skipped. `block` is a\n    // boolean indicating whether this is a block (`/* */`) comment,\n    // `text` is the content of the comment, and `start` and `end` are\n    // character offsets that denote the start and end of the comment.\n    // When the `locations` option is on, two more parameters are\n    // passed, the full `{line, column}` locations of the start and\n    // end of the comments. Note that you are not allowed to call the\n    // parser from the callback—that will corrupt its internal state.\n    onComment: null,\n    // Nodes have their start and end characters offsets recorded in\n    // `start` and `end` properties (directly on the node, rather than\n    // the `loc` object, which holds line/column data. To also add a\n    // [semi-standardized][range] `range` property holding a `[start,\n    // end]` array with the same numbers, set the `ranges` option to\n    // `true`.\n    //\n    // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678\n    ranges: false,\n    // It is possible to parse multiple files into a single AST by\n    // passing the tree produced by parsing the first file as\n    // `program` option in subsequent parses. This will add the\n    // toplevel forms of the parsed file to the `Program` (top) node\n    // of an existing parse tree.\n    program: null,\n    // When `locations` is on, you can pass this to record the source\n    // file in every node's `loc` object.\n    sourceFile: null,\n    // This value, if given, is stored in every node, whether\n    // `locations` is on or off.\n    directSourceFile: null,\n    // When enabled, parenthesized expressions are represented by\n    // (non-standard) ParenthesizedExpression nodes\n    preserveParens: false\n  };\n\n  // Interpret and default an options object\n\n  var warnedAboutEcmaVersion = false;\n\n  function getOptions(opts) {\n    var options = {};\n\n    for (var opt in defaultOptions)\n      { options[opt] = opts && hasOwn(opts, opt) ? opts[opt] : defaultOptions[opt]; }\n\n    if (options.ecmaVersion === \"latest\") {\n      options.ecmaVersion = 1e8;\n    } else if (options.ecmaVersion == null) {\n      if (!warnedAboutEcmaVersion && typeof console === \"object\" && console.warn) {\n        warnedAboutEcmaVersion = true;\n        console.warn(\"Since Acorn 8.0.0, options.ecmaVersion is required.\\nDefaulting to 2020, but this will stop working in the future.\");\n      }\n      options.ecmaVersion = 11;\n    } else if (options.ecmaVersion >= 2015) {\n      options.ecmaVersion -= 2009;\n    }\n\n    if (options.allowReserved == null)\n      { options.allowReserved = options.ecmaVersion < 5; }\n\n    if (!opts || opts.allowHashBang == null)\n      { options.allowHashBang = options.ecmaVersion >= 14; }\n\n    if (isArray(options.onToken)) {\n      var tokens = options.onToken;\n      options.onToken = function (token) { return tokens.push(token); };\n    }\n    if (isArray(options.onComment))\n      { options.onComment = pushComment(options, options.onComment); }\n\n    return options\n  }\n\n  function pushComment(options, array) {\n    return function(block, text, start, end, startLoc, endLoc) {\n      var comment = {\n        type: block ? \"Block\" : \"Line\",\n        value: text,\n        start: start,\n        end: end\n      };\n      if (options.locations)\n        { comment.loc = new SourceLocation(this, startLoc, endLoc); }\n      if (options.ranges)\n        { comment.range = [start, end]; }\n      array.push(comment);\n    }\n  }\n\n  // Each scope gets a bitset that may contain these flags\n  var\n      SCOPE_TOP = 1,\n      SCOPE_FUNCTION = 2,\n      SCOPE_ASYNC = 4,\n      SCOPE_GENERATOR = 8,\n      SCOPE_ARROW = 16,\n      SCOPE_SIMPLE_CATCH = 32,\n      SCOPE_SUPER = 64,\n      SCOPE_DIRECT_SUPER = 128,\n      SCOPE_CLASS_STATIC_BLOCK = 256,\n      SCOPE_VAR = SCOPE_TOP | SCOPE_FUNCTION | SCOPE_CLASS_STATIC_BLOCK;\n\n  function functionFlags(async, generator) {\n    return SCOPE_FUNCTION | (async ? SCOPE_ASYNC : 0) | (generator ? SCOPE_GENERATOR : 0)\n  }\n\n  // Used in checkLVal* and declareName to determine the type of a binding\n  var\n      BIND_NONE = 0, // Not a binding\n      BIND_VAR = 1, // Var-style binding\n      BIND_LEXICAL = 2, // Let- or const-style binding\n      BIND_FUNCTION = 3, // Function declaration\n      BIND_SIMPLE_CATCH = 4, // Simple (identifier pattern) catch binding\n      BIND_OUTSIDE = 5; // Special case for function names as bound inside the function\n\n  var Parser = function Parser(options, input, startPos) {\n    this.options = options = getOptions(options);\n    this.sourceFile = options.sourceFile;\n    this.keywords = wordsRegexp(keywords$1[options.ecmaVersion >= 6 ? 6 : options.sourceType === \"module\" ? \"5module\" : 5]);\n    var reserved = \"\";\n    if (options.allowReserved !== true) {\n      reserved = reservedWords[options.ecmaVersion >= 6 ? 6 : options.ecmaVersion === 5 ? 5 : 3];\n      if (options.sourceType === \"module\") { reserved += \" await\"; }\n    }\n    this.reservedWords = wordsRegexp(reserved);\n    var reservedStrict = (reserved ? reserved + \" \" : \"\") + reservedWords.strict;\n    this.reservedWordsStrict = wordsRegexp(reservedStrict);\n    this.reservedWordsStrictBind = wordsRegexp(reservedStrict + \" \" + reservedWords.strictBind);\n    this.input = String(input);\n\n    // Used to signal to callers of `readWord1` whether the word\n    // contained any escape sequences. This is needed because words with\n    // escape sequences must not be interpreted as keywords.\n    this.containsEsc = false;\n\n    // Set up token state\n\n    // The current position of the tokenizer in the input.\n    if (startPos) {\n      this.pos = startPos;\n      this.lineStart = this.input.lastIndexOf(\"\\n\", startPos - 1) + 1;\n      this.curLine = this.input.slice(0, this.lineStart).split(lineBreak).length;\n    } else {\n      this.pos = this.lineStart = 0;\n      this.curLine = 1;\n    }\n\n    // Properties of the current token:\n    // Its type\n    this.type = types$1.eof;\n    // For tokens that include more information than their type, the value\n    this.value = null;\n    // Its start and end offset\n    this.start = this.end = this.pos;\n    // And, if locations are used, the {line, column} object\n    // corresponding to those offsets\n    this.startLoc = this.endLoc = this.curPosition();\n\n    // Position information for the previous token\n    this.lastTokEndLoc = this.lastTokStartLoc = null;\n    this.lastTokStart = this.lastTokEnd = this.pos;\n\n    // The context stack is used to superficially track syntactic\n    // context to predict whether a regular expression is allowed in a\n    // given position.\n    this.context = this.initialContext();\n    this.exprAllowed = true;\n\n    // Figure out if it's a module code.\n    this.inModule = options.sourceType === \"module\";\n    this.strict = this.inModule || this.strictDirective(this.pos);\n\n    // Used to signify the start of a potential arrow function\n    this.potentialArrowAt = -1;\n    this.potentialArrowInForAwait = false;\n\n    // Positions to delayed-check that yield/await does not exist in default parameters.\n    this.yieldPos = this.awaitPos = this.awaitIdentPos = 0;\n    // Labels in scope.\n    this.labels = [];\n    // Thus-far undefined exports.\n    this.undefinedExports = Object.create(null);\n\n    // If enabled, skip leading hashbang line.\n    if (this.pos === 0 && options.allowHashBang && this.input.slice(0, 2) === \"#!\")\n      { this.skipLineComment(2); }\n\n    // Scope tracking for duplicate variable names (see scope.js)\n    this.scopeStack = [];\n    this.enterScope(SCOPE_TOP);\n\n    // For RegExp validation\n    this.regexpState = null;\n\n    // The stack of private names.\n    // Each element has two properties: 'declared' and 'used'.\n    // When it exited from the outermost class definition, all used private names must be declared.\n    this.privateNameStack = [];\n  };\n\n  var prototypeAccessors = { inFunction: { configurable: true },inGenerator: { configurable: true },inAsync: { configurable: true },canAwait: { configurable: true },allowSuper: { configurable: true },allowDirectSuper: { configurable: true },treatFunctionsAsVar: { configurable: true },allowNewDotTarget: { configurable: true },inClassStaticBlock: { configurable: true } };\n\n  Parser.prototype.parse = function parse () {\n    var node = this.options.program || this.startNode();\n    this.nextToken();\n    return this.parseTopLevel(node)\n  };\n\n  prototypeAccessors.inFunction.get = function () { return (this.currentVarScope().flags & SCOPE_FUNCTION) > 0 };\n\n  prototypeAccessors.inGenerator.get = function () { return (this.currentVarScope().flags & SCOPE_GENERATOR) > 0 && !this.currentVarScope().inClassFieldInit };\n\n  prototypeAccessors.inAsync.get = function () { return (this.currentVarScope().flags & SCOPE_ASYNC) > 0 && !this.currentVarScope().inClassFieldInit };\n\n  prototypeAccessors.canAwait.get = function () {\n    for (var i = this.scopeStack.length - 1; i >= 0; i--) {\n      var scope = this.scopeStack[i];\n      if (scope.inClassFieldInit || scope.flags & SCOPE_CLASS_STATIC_BLOCK) { return false }\n      if (scope.flags & SCOPE_FUNCTION) { return (scope.flags & SCOPE_ASYNC) > 0 }\n    }\n    return (this.inModule && this.options.ecmaVersion >= 13) || this.options.allowAwaitOutsideFunction\n  };\n\n  prototypeAccessors.allowSuper.get = function () {\n    var ref = this.currentThisScope();\n      var flags = ref.flags;\n      var inClassFieldInit = ref.inClassFieldInit;\n    return (flags & SCOPE_SUPER) > 0 || inClassFieldInit || this.options.allowSuperOutsideMethod\n  };\n\n  prototypeAccessors.allowDirectSuper.get = function () { return (this.currentThisScope().flags & SCOPE_DIRECT_SUPER) > 0 };\n\n  prototypeAccessors.treatFunctionsAsVar.get = function () { return this.treatFunctionsAsVarInScope(this.currentScope()) };\n\n  prototypeAccessors.allowNewDotTarget.get = function () {\n    var ref = this.currentThisScope();\n      var flags = ref.flags;\n      var inClassFieldInit = ref.inClassFieldInit;\n    return (flags & (SCOPE_FUNCTION | SCOPE_CLASS_STATIC_BLOCK)) > 0 || inClassFieldInit\n  };\n\n  prototypeAccessors.inClassStaticBlock.get = function () {\n    return (this.currentVarScope().flags & SCOPE_CLASS_STATIC_BLOCK) > 0\n  };\n\n  Parser.extend = function extend () {\n      var plugins = [], len = arguments.length;\n      while ( len-- ) plugins[ len ] = arguments[ len ];\n\n    var cls = this;\n    for (var i = 0; i < plugins.length; i++) { cls = plugins[i](cls); }\n    return cls\n  };\n\n  Parser.parse = function parse (input, options) {\n    return new this(options, input).parse()\n  };\n\n  Parser.parseExpressionAt = function parseExpressionAt (input, pos, options) {\n    var parser = new this(options, input, pos);\n    parser.nextToken();\n    return parser.parseExpression()\n  };\n\n  Parser.tokenizer = function tokenizer (input, options) {\n    return new this(options, input)\n  };\n\n  Object.defineProperties( Parser.prototype, prototypeAccessors );\n\n  var pp$9 = Parser.prototype;\n\n  // ## Parser utilities\n\n  var literal = /^(?:'((?:\\\\.|[^'\\\\])*?)'|\"((?:\\\\.|[^\"\\\\])*?)\")/;\n  pp$9.strictDirective = function(start) {\n    if (this.options.ecmaVersion < 5) { return false }\n    for (;;) {\n      // Try to find string literal.\n      skipWhiteSpace.lastIndex = start;\n      start += skipWhiteSpace.exec(this.input)[0].length;\n      var match = literal.exec(this.input.slice(start));\n      if (!match) { return false }\n      if ((match[1] || match[2]) === \"use strict\") {\n        skipWhiteSpace.lastIndex = start + match[0].length;\n        var spaceAfter = skipWhiteSpace.exec(this.input), end = spaceAfter.index + spaceAfter[0].length;\n        var next = this.input.charAt(end);\n        return next === \";\" || next === \"}\" ||\n          (lineBreak.test(spaceAfter[0]) &&\n           !(/[(`.[+\\-/*%<>=,?^&]/.test(next) || next === \"!\" && this.input.charAt(end + 1) === \"=\"))\n      }\n      start += match[0].length;\n\n      // Skip semicolon, if any.\n      skipWhiteSpace.lastIndex = start;\n      start += skipWhiteSpace.exec(this.input)[0].length;\n      if (this.input[start] === \";\")\n        { start++; }\n    }\n  };\n\n  // Predicate that tests whether the next token is of the given\n  // type, and if yes, consumes it as a side effect.\n\n  pp$9.eat = function(type) {\n    if (this.type === type) {\n      this.next();\n      return true\n    } else {\n      return false\n    }\n  };\n\n  // Tests whether parsed token is a contextual keyword.\n\n  pp$9.isContextual = function(name) {\n    return this.type === types$1.name && this.value === name && !this.containsEsc\n  };\n\n  // Consumes contextual keyword if possible.\n\n  pp$9.eatContextual = function(name) {\n    if (!this.isContextual(name)) { return false }\n    this.next();\n    return true\n  };\n\n  // Asserts that following token is given contextual keyword.\n\n  pp$9.expectContextual = function(name) {\n    if (!this.eatContextual(name)) { this.unexpected(); }\n  };\n\n  // Test whether a semicolon can be inserted at the current position.\n\n  pp$9.canInsertSemicolon = function() {\n    return this.type === types$1.eof ||\n      this.type === types$1.braceR ||\n      lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n  };\n\n  pp$9.insertSemicolon = function() {\n    if (this.canInsertSemicolon()) {\n      if (this.options.onInsertedSemicolon)\n        { this.options.onInsertedSemicolon(this.lastTokEnd, this.lastTokEndLoc); }\n      return true\n    }\n  };\n\n  // Consume a semicolon, or, failing that, see if we are allowed to\n  // pretend that there is a semicolon at this position.\n\n  pp$9.semicolon = function() {\n    if (!this.eat(types$1.semi) && !this.insertSemicolon()) { this.unexpected(); }\n  };\n\n  pp$9.afterTrailingComma = function(tokType, notNext) {\n    if (this.type === tokType) {\n      if (this.options.onTrailingComma)\n        { this.options.onTrailingComma(this.lastTokStart, this.lastTokStartLoc); }\n      if (!notNext)\n        { this.next(); }\n      return true\n    }\n  };\n\n  // Expect a token of a given type. If found, consume it, otherwise,\n  // raise an unexpected token error.\n\n  pp$9.expect = function(type) {\n    this.eat(type) || this.unexpected();\n  };\n\n  // Raise an unexpected token error.\n\n  pp$9.unexpected = function(pos) {\n    this.raise(pos != null ? pos : this.start, \"Unexpected token\");\n  };\n\n  var DestructuringErrors = function DestructuringErrors() {\n    this.shorthandAssign =\n    this.trailingComma =\n    this.parenthesizedAssign =\n    this.parenthesizedBind =\n    this.doubleProto =\n      -1;\n  };\n\n  pp$9.checkPatternErrors = function(refDestructuringErrors, isAssign) {\n    if (!refDestructuringErrors) { return }\n    if (refDestructuringErrors.trailingComma > -1)\n      { this.raiseRecoverable(refDestructuringErrors.trailingComma, \"Comma is not permitted after the rest element\"); }\n    var parens = isAssign ? refDestructuringErrors.parenthesizedAssign : refDestructuringErrors.parenthesizedBind;\n    if (parens > -1) { this.raiseRecoverable(parens, isAssign ? \"Assigning to rvalue\" : \"Parenthesized pattern\"); }\n  };\n\n  pp$9.checkExpressionErrors = function(refDestructuringErrors, andThrow) {\n    if (!refDestructuringErrors) { return false }\n    var shorthandAssign = refDestructuringErrors.shorthandAssign;\n    var doubleProto = refDestructuringErrors.doubleProto;\n    if (!andThrow) { return shorthandAssign >= 0 || doubleProto >= 0 }\n    if (shorthandAssign >= 0)\n      { this.raise(shorthandAssign, \"Shorthand property assignments are valid only in destructuring patterns\"); }\n    if (doubleProto >= 0)\n      { this.raiseRecoverable(doubleProto, \"Redefinition of __proto__ property\"); }\n  };\n\n  pp$9.checkYieldAwaitInDefaultParams = function() {\n    if (this.yieldPos && (!this.awaitPos || this.yieldPos < this.awaitPos))\n      { this.raise(this.yieldPos, \"Yield expression cannot be a default value\"); }\n    if (this.awaitPos)\n      { this.raise(this.awaitPos, \"Await expression cannot be a default value\"); }\n  };\n\n  pp$9.isSimpleAssignTarget = function(expr) {\n    if (expr.type === \"ParenthesizedExpression\")\n      { return this.isSimpleAssignTarget(expr.expression) }\n    return expr.type === \"Identifier\" || expr.type === \"MemberExpression\"\n  };\n\n  var pp$8 = Parser.prototype;\n\n  // ### Statement parsing\n\n  // Parse a program. Initializes the parser, reads any number of\n  // statements, and wraps them in a Program node.  Optionally takes a\n  // `program` argument.  If present, the statements will be appended\n  // to its body instead of creating a new node.\n\n  pp$8.parseTopLevel = function(node) {\n    var exports = Object.create(null);\n    if (!node.body) { node.body = []; }\n    while (this.type !== types$1.eof) {\n      var stmt = this.parseStatement(null, true, exports);\n      node.body.push(stmt);\n    }\n    if (this.inModule)\n      { for (var i = 0, list = Object.keys(this.undefinedExports); i < list.length; i += 1)\n        {\n          var name = list[i];\n\n          this.raiseRecoverable(this.undefinedExports[name].start, (\"Export '\" + name + \"' is not defined\"));\n        } }\n    this.adaptDirectivePrologue(node.body);\n    this.next();\n    node.sourceType = this.options.sourceType;\n    return this.finishNode(node, \"Program\")\n  };\n\n  var loopLabel = {kind: \"loop\"}, switchLabel = {kind: \"switch\"};\n\n  pp$8.isLet = function(context) {\n    if (this.options.ecmaVersion < 6 || !this.isContextual(\"let\")) { return false }\n    skipWhiteSpace.lastIndex = this.pos;\n    var skip = skipWhiteSpace.exec(this.input);\n    var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);\n    // For ambiguous cases, determine if a LexicalDeclaration (or only a\n    // Statement) is allowed here. If context is not empty then only a Statement\n    // is allowed. However, `let [` is an explicit negative lookahead for\n    // ExpressionStatement, so special-case it first.\n    if (nextCh === 91 || nextCh === 92) { return true } // '[', '/'\n    if (context) { return false }\n\n    if (nextCh === 123 || nextCh > 0xd7ff && nextCh < 0xdc00) { return true } // '{', astral\n    if (isIdentifierStart(nextCh, true)) {\n      var pos = next + 1;\n      while (isIdentifierChar(nextCh = this.input.charCodeAt(pos), true)) { ++pos; }\n      if (nextCh === 92 || nextCh > 0xd7ff && nextCh < 0xdc00) { return true }\n      var ident = this.input.slice(next, pos);\n      if (!keywordRelationalOperator.test(ident)) { return true }\n    }\n    return false\n  };\n\n  // check 'async [no LineTerminator here] function'\n  // - 'async /*foo*/ function' is OK.\n  // - 'async /*\\n*/ function' is invalid.\n  pp$8.isAsyncFunction = function() {\n    if (this.options.ecmaVersion < 8 || !this.isContextual(\"async\"))\n      { return false }\n\n    skipWhiteSpace.lastIndex = this.pos;\n    var skip = skipWhiteSpace.exec(this.input);\n    var next = this.pos + skip[0].length, after;\n    return !lineBreak.test(this.input.slice(this.pos, next)) &&\n      this.input.slice(next, next + 8) === \"function\" &&\n      (next + 8 === this.input.length ||\n       !(isIdentifierChar(after = this.input.charCodeAt(next + 8)) || after > 0xd7ff && after < 0xdc00))\n  };\n\n  // Parse a single statement.\n  //\n  // If expecting a statement and finding a slash operator, parse a\n  // regular expression literal. This is to handle cases like\n  // `if (foo) /blah/.exec(foo)`, where looking at the previous token\n  // does not help.\n\n  pp$8.parseStatement = function(context, topLevel, exports) {\n    var starttype = this.type, node = this.startNode(), kind;\n\n    if (this.isLet(context)) {\n      starttype = types$1._var;\n      kind = \"let\";\n    }\n\n    // Most types of statements are recognized by the keyword they\n    // start with. Many are trivial to parse, some require a bit of\n    // complexity.\n\n    switch (starttype) {\n    case types$1._break: case types$1._continue: return this.parseBreakContinueStatement(node, starttype.keyword)\n    case types$1._debugger: return this.parseDebuggerStatement(node)\n    case types$1._do: return this.parseDoStatement(node)\n    case types$1._for: return this.parseForStatement(node)\n    case types$1._function:\n      // Function as sole body of either an if statement or a labeled statement\n      // works, but not when it is part of a labeled statement that is the sole\n      // body of an if statement.\n      if ((context && (this.strict || context !== \"if\" && context !== \"label\")) && this.options.ecmaVersion >= 6) { this.unexpected(); }\n      return this.parseFunctionStatement(node, false, !context)\n    case types$1._class:\n      if (context) { this.unexpected(); }\n      return this.parseClass(node, true)\n    case types$1._if: return this.parseIfStatement(node)\n    case types$1._return: return this.parseReturnStatement(node)\n    case types$1._switch: return this.parseSwitchStatement(node)\n    case types$1._throw: return this.parseThrowStatement(node)\n    case types$1._try: return this.parseTryStatement(node)\n    case types$1._const: case types$1._var:\n      kind = kind || this.value;\n      if (context && kind !== \"var\") { this.unexpected(); }\n      return this.parseVarStatement(node, kind)\n    case types$1._while: return this.parseWhileStatement(node)\n    case types$1._with: return this.parseWithStatement(node)\n    case types$1.braceL: return this.parseBlock(true, node)\n    case types$1.semi: return this.parseEmptyStatement(node)\n    case types$1._export:\n    case types$1._import:\n      if (this.options.ecmaVersion > 10 && starttype === types$1._import) {\n        skipWhiteSpace.lastIndex = this.pos;\n        var skip = skipWhiteSpace.exec(this.input);\n        var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);\n        if (nextCh === 40 || nextCh === 46) // '(' or '.'\n          { return this.parseExpressionStatement(node, this.parseExpression()) }\n      }\n\n      if (!this.options.allowImportExportEverywhere) {\n        if (!topLevel)\n          { this.raise(this.start, \"'import' and 'export' may only appear at the top level\"); }\n        if (!this.inModule)\n          { this.raise(this.start, \"'import' and 'export' may appear only with 'sourceType: module'\"); }\n      }\n      return starttype === types$1._import ? this.parseImport(node) : this.parseExport(node, exports)\n\n      // If the statement does not start with a statement keyword or a\n      // brace, it's an ExpressionStatement or LabeledStatement. We\n      // simply start parsing an expression, and afterwards, if the\n      // next token is a colon and the expression was a simple\n      // Identifier node, we switch to interpreting it as a label.\n    default:\n      if (this.isAsyncFunction()) {\n        if (context) { this.unexpected(); }\n        this.next();\n        return this.parseFunctionStatement(node, true, !context)\n      }\n\n      var maybeName = this.value, expr = this.parseExpression();\n      if (starttype === types$1.name && expr.type === \"Identifier\" && this.eat(types$1.colon))\n        { return this.parseLabeledStatement(node, maybeName, expr, context) }\n      else { return this.parseExpressionStatement(node, expr) }\n    }\n  };\n\n  pp$8.parseBreakContinueStatement = function(node, keyword) {\n    var isBreak = keyword === \"break\";\n    this.next();\n    if (this.eat(types$1.semi) || this.insertSemicolon()) { node.label = null; }\n    else if (this.type !== types$1.name) { this.unexpected(); }\n    else {\n      node.label = this.parseIdent();\n      this.semicolon();\n    }\n\n    // Verify that there is an actual destination to break or\n    // continue to.\n    var i = 0;\n    for (; i < this.labels.length; ++i) {\n      var lab = this.labels[i];\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) { break }\n        if (node.label && isBreak) { break }\n      }\n    }\n    if (i === this.labels.length) { this.raise(node.start, \"Unsyntactic \" + keyword); }\n    return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\")\n  };\n\n  pp$8.parseDebuggerStatement = function(node) {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\")\n  };\n\n  pp$8.parseDoStatement = function(node) {\n    this.next();\n    this.labels.push(loopLabel);\n    node.body = this.parseStatement(\"do\");\n    this.labels.pop();\n    this.expect(types$1._while);\n    node.test = this.parseParenExpression();\n    if (this.options.ecmaVersion >= 6)\n      { this.eat(types$1.semi); }\n    else\n      { this.semicolon(); }\n    return this.finishNode(node, \"DoWhileStatement\")\n  };\n\n  // Disambiguating between a `for` and a `for`/`in` or `for`/`of`\n  // loop is non-trivial. Basically, we have to parse the init `var`\n  // statement or expression, disallowing the `in` operator (see\n  // the second parameter to `parseExpression`), and then check\n  // whether the next token is `in` or `of`. When there is no init\n  // part (semicolon immediately after the opening parenthesis), it\n  // is a regular `for` loop.\n\n  pp$8.parseForStatement = function(node) {\n    this.next();\n    var awaitAt = (this.options.ecmaVersion >= 9 && this.canAwait && this.eatContextual(\"await\")) ? this.lastTokStart : -1;\n    this.labels.push(loopLabel);\n    this.enterScope(0);\n    this.expect(types$1.parenL);\n    if (this.type === types$1.semi) {\n      if (awaitAt > -1) { this.unexpected(awaitAt); }\n      return this.parseFor(node, null)\n    }\n    var isLet = this.isLet();\n    if (this.type === types$1._var || this.type === types$1._const || isLet) {\n      var init$1 = this.startNode(), kind = isLet ? \"let\" : this.value;\n      this.next();\n      this.parseVar(init$1, true, kind);\n      this.finishNode(init$1, \"VariableDeclaration\");\n      if ((this.type === types$1._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) && init$1.declarations.length === 1) {\n        if (this.options.ecmaVersion >= 9) {\n          if (this.type === types$1._in) {\n            if (awaitAt > -1) { this.unexpected(awaitAt); }\n          } else { node.await = awaitAt > -1; }\n        }\n        return this.parseForIn(node, init$1)\n      }\n      if (awaitAt > -1) { this.unexpected(awaitAt); }\n      return this.parseFor(node, init$1)\n    }\n    var startsWithLet = this.isContextual(\"let\"), isForOf = false;\n    var refDestructuringErrors = new DestructuringErrors;\n    var init = this.parseExpression(awaitAt > -1 ? \"await\" : true, refDestructuringErrors);\n    if (this.type === types$1._in || (isForOf = this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) {\n      if (this.options.ecmaVersion >= 9) {\n        if (this.type === types$1._in) {\n          if (awaitAt > -1) { this.unexpected(awaitAt); }\n        } else { node.await = awaitAt > -1; }\n      }\n      if (startsWithLet && isForOf) { this.raise(init.start, \"The left-hand side of a for-of loop may not start with 'let'.\"); }\n      this.toAssignable(init, false, refDestructuringErrors);\n      this.checkLValPattern(init);\n      return this.parseForIn(node, init)\n    } else {\n      this.checkExpressionErrors(refDestructuringErrors, true);\n    }\n    if (awaitAt > -1) { this.unexpected(awaitAt); }\n    return this.parseFor(node, init)\n  };\n\n  pp$8.parseFunctionStatement = function(node, isAsync, declarationPosition) {\n    this.next();\n    return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), false, isAsync)\n  };\n\n  pp$8.parseIfStatement = function(node) {\n    this.next();\n    node.test = this.parseParenExpression();\n    // allow function declarations in branches, but only in non-strict mode\n    node.consequent = this.parseStatement(\"if\");\n    node.alternate = this.eat(types$1._else) ? this.parseStatement(\"if\") : null;\n    return this.finishNode(node, \"IfStatement\")\n  };\n\n  pp$8.parseReturnStatement = function(node) {\n    if (!this.inFunction && !this.options.allowReturnOutsideFunction)\n      { this.raise(this.start, \"'return' outside of function\"); }\n    this.next();\n\n    // In `return` (and `break`/`continue`), the keywords with\n    // optional arguments, we eagerly look for a semicolon or the\n    // possibility to insert one.\n\n    if (this.eat(types$1.semi) || this.insertSemicolon()) { node.argument = null; }\n    else { node.argument = this.parseExpression(); this.semicolon(); }\n    return this.finishNode(node, \"ReturnStatement\")\n  };\n\n  pp$8.parseSwitchStatement = function(node) {\n    this.next();\n    node.discriminant = this.parseParenExpression();\n    node.cases = [];\n    this.expect(types$1.braceL);\n    this.labels.push(switchLabel);\n    this.enterScope(0);\n\n    // Statements under must be grouped (by label) in SwitchCase\n    // nodes. `cur` is used to keep the node that we are currently\n    // adding statements to.\n\n    var cur;\n    for (var sawDefault = false; this.type !== types$1.braceR;) {\n      if (this.type === types$1._case || this.type === types$1._default) {\n        var isCase = this.type === types$1._case;\n        if (cur) { this.finishNode(cur, \"SwitchCase\"); }\n        node.cases.push(cur = this.startNode());\n        cur.consequent = [];\n        this.next();\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) { this.raiseRecoverable(this.lastTokStart, \"Multiple default clauses\"); }\n          sawDefault = true;\n          cur.test = null;\n        }\n        this.expect(types$1.colon);\n      } else {\n        if (!cur) { this.unexpected(); }\n        cur.consequent.push(this.parseStatement(null));\n      }\n    }\n    this.exitScope();\n    if (cur) { this.finishNode(cur, \"SwitchCase\"); }\n    this.next(); // Closing brace\n    this.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\")\n  };\n\n  pp$8.parseThrowStatement = function(node) {\n    this.next();\n    if (lineBreak.test(this.input.slice(this.lastTokEnd, this.start)))\n      { this.raise(this.lastTokEnd, \"Illegal newline after throw\"); }\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\")\n  };\n\n  // Reused empty array added for node fields that are always empty.\n\n  var empty$1 = [];\n\n  pp$8.parseTryStatement = function(node) {\n    this.next();\n    node.block = this.parseBlock();\n    node.handler = null;\n    if (this.type === types$1._catch) {\n      var clause = this.startNode();\n      this.next();\n      if (this.eat(types$1.parenL)) {\n        clause.param = this.parseBindingAtom();\n        var simple = clause.param.type === \"Identifier\";\n        this.enterScope(simple ? SCOPE_SIMPLE_CATCH : 0);\n        this.checkLValPattern(clause.param, simple ? BIND_SIMPLE_CATCH : BIND_LEXICAL);\n        this.expect(types$1.parenR);\n      } else {\n        if (this.options.ecmaVersion < 10) { this.unexpected(); }\n        clause.param = null;\n        this.enterScope(0);\n      }\n      clause.body = this.parseBlock(false);\n      this.exitScope();\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n    node.finalizer = this.eat(types$1._finally) ? this.parseBlock() : null;\n    if (!node.handler && !node.finalizer)\n      { this.raise(node.start, \"Missing catch or finally clause\"); }\n    return this.finishNode(node, \"TryStatement\")\n  };\n\n  pp$8.parseVarStatement = function(node, kind) {\n    this.next();\n    this.parseVar(node, false, kind);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\")\n  };\n\n  pp$8.parseWhileStatement = function(node) {\n    this.next();\n    node.test = this.parseParenExpression();\n    this.labels.push(loopLabel);\n    node.body = this.parseStatement(\"while\");\n    this.labels.pop();\n    return this.finishNode(node, \"WhileStatement\")\n  };\n\n  pp$8.parseWithStatement = function(node) {\n    if (this.strict) { this.raise(this.start, \"'with' in strict mode\"); }\n    this.next();\n    node.object = this.parseParenExpression();\n    node.body = this.parseStatement(\"with\");\n    return this.finishNode(node, \"WithStatement\")\n  };\n\n  pp$8.parseEmptyStatement = function(node) {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\")\n  };\n\n  pp$8.parseLabeledStatement = function(node, maybeName, expr, context) {\n    for (var i$1 = 0, list = this.labels; i$1 < list.length; i$1 += 1)\n      {\n      var label = list[i$1];\n\n      if (label.name === maybeName)\n        { this.raise(expr.start, \"Label '\" + maybeName + \"' is already declared\");\n    } }\n    var kind = this.type.isLoop ? \"loop\" : this.type === types$1._switch ? \"switch\" : null;\n    for (var i = this.labels.length - 1; i >= 0; i--) {\n      var label$1 = this.labels[i];\n      if (label$1.statementStart === node.start) {\n        // Update information about previous labels on this node\n        label$1.statementStart = this.start;\n        label$1.kind = kind;\n      } else { break }\n    }\n    this.labels.push({name: maybeName, kind: kind, statementStart: this.start});\n    node.body = this.parseStatement(context ? context.indexOf(\"label\") === -1 ? context + \"label\" : context : \"label\");\n    this.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\")\n  };\n\n  pp$8.parseExpressionStatement = function(node, expr) {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\")\n  };\n\n  // Parse a semicolon-enclosed block of statements, handling `\"use\n  // strict\"` declarations when `allowStrict` is true (used for\n  // function bodies).\n\n  pp$8.parseBlock = function(createNewLexicalScope, node, exitStrict) {\n    if ( createNewLexicalScope === void 0 ) createNewLexicalScope = true;\n    if ( node === void 0 ) node = this.startNode();\n\n    node.body = [];\n    this.expect(types$1.braceL);\n    if (createNewLexicalScope) { this.enterScope(0); }\n    while (this.type !== types$1.braceR) {\n      var stmt = this.parseStatement(null);\n      node.body.push(stmt);\n    }\n    if (exitStrict) { this.strict = false; }\n    this.next();\n    if (createNewLexicalScope) { this.exitScope(); }\n    return this.finishNode(node, \"BlockStatement\")\n  };\n\n  // Parse a regular `for` loop. The disambiguation code in\n  // `parseStatement` will already have parsed the init statement or\n  // expression.\n\n  pp$8.parseFor = function(node, init) {\n    node.init = init;\n    this.expect(types$1.semi);\n    node.test = this.type === types$1.semi ? null : this.parseExpression();\n    this.expect(types$1.semi);\n    node.update = this.type === types$1.parenR ? null : this.parseExpression();\n    this.expect(types$1.parenR);\n    node.body = this.parseStatement(\"for\");\n    this.exitScope();\n    this.labels.pop();\n    return this.finishNode(node, \"ForStatement\")\n  };\n\n  // Parse a `for`/`in` and `for`/`of` loop, which are almost\n  // same from parser's perspective.\n\n  pp$8.parseForIn = function(node, init) {\n    var isForIn = this.type === types$1._in;\n    this.next();\n\n    if (\n      init.type === \"VariableDeclaration\" &&\n      init.declarations[0].init != null &&\n      (\n        !isForIn ||\n        this.options.ecmaVersion < 8 ||\n        this.strict ||\n        init.kind !== \"var\" ||\n        init.declarations[0].id.type !== \"Identifier\"\n      )\n    ) {\n      this.raise(\n        init.start,\n        ((isForIn ? \"for-in\" : \"for-of\") + \" loop variable declaration may not have an initializer\")\n      );\n    }\n    node.left = init;\n    node.right = isForIn ? this.parseExpression() : this.parseMaybeAssign();\n    this.expect(types$1.parenR);\n    node.body = this.parseStatement(\"for\");\n    this.exitScope();\n    this.labels.pop();\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\")\n  };\n\n  // Parse a list of variable declarations.\n\n  pp$8.parseVar = function(node, isFor, kind) {\n    node.declarations = [];\n    node.kind = kind;\n    for (;;) {\n      var decl = this.startNode();\n      this.parseVarId(decl, kind);\n      if (this.eat(types$1.eq)) {\n        decl.init = this.parseMaybeAssign(isFor);\n      } else if (kind === \"const\" && !(this.type === types$1._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\")))) {\n        this.unexpected();\n      } else if (decl.id.type !== \"Identifier\" && !(isFor && (this.type === types$1._in || this.isContextual(\"of\")))) {\n        this.raise(this.lastTokEnd, \"Complex binding patterns require an initialization value\");\n      } else {\n        decl.init = null;\n      }\n      node.declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(types$1.comma)) { break }\n    }\n    return node\n  };\n\n  pp$8.parseVarId = function(decl, kind) {\n    decl.id = this.parseBindingAtom();\n    this.checkLValPattern(decl.id, kind === \"var\" ? BIND_VAR : BIND_LEXICAL, false);\n  };\n\n  var FUNC_STATEMENT = 1, FUNC_HANGING_STATEMENT = 2, FUNC_NULLABLE_ID = 4;\n\n  // Parse a function declaration or literal (depending on the\n  // `statement & FUNC_STATEMENT`).\n\n  // Remove `allowExpressionBody` for 7.0.0, as it is only called with false\n  pp$8.parseFunction = function(node, statement, allowExpressionBody, isAsync, forInit) {\n    this.initFunction(node);\n    if (this.options.ecmaVersion >= 9 || this.options.ecmaVersion >= 6 && !isAsync) {\n      if (this.type === types$1.star && (statement & FUNC_HANGING_STATEMENT))\n        { this.unexpected(); }\n      node.generator = this.eat(types$1.star);\n    }\n    if (this.options.ecmaVersion >= 8)\n      { node.async = !!isAsync; }\n\n    if (statement & FUNC_STATEMENT) {\n      node.id = (statement & FUNC_NULLABLE_ID) && this.type !== types$1.name ? null : this.parseIdent();\n      if (node.id && !(statement & FUNC_HANGING_STATEMENT))\n        // If it is a regular function declaration in sloppy mode, then it is\n        // subject to Annex B semantics (BIND_FUNCTION). Otherwise, the binding\n        // mode depends on properties of the current scope (see\n        // treatFunctionsAsVar).\n        { this.checkLValSimple(node.id, (this.strict || node.generator || node.async) ? this.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION); }\n    }\n\n    var oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    this.awaitIdentPos = 0;\n    this.enterScope(functionFlags(node.async, node.generator));\n\n    if (!(statement & FUNC_STATEMENT))\n      { node.id = this.type === types$1.name ? this.parseIdent() : null; }\n\n    this.parseFunctionParams(node);\n    this.parseFunctionBody(node, allowExpressionBody, false, forInit);\n\n    this.yieldPos = oldYieldPos;\n    this.awaitPos = oldAwaitPos;\n    this.awaitIdentPos = oldAwaitIdentPos;\n    return this.finishNode(node, (statement & FUNC_STATEMENT) ? \"FunctionDeclaration\" : \"FunctionExpression\")\n  };\n\n  pp$8.parseFunctionParams = function(node) {\n    this.expect(types$1.parenL);\n    node.params = this.parseBindingList(types$1.parenR, false, this.options.ecmaVersion >= 8);\n    this.checkYieldAwaitInDefaultParams();\n  };\n\n  // Parse a class declaration or literal (depending on the\n  // `isStatement` parameter).\n\n  pp$8.parseClass = function(node, isStatement) {\n    this.next();\n\n    // ecma-262 14.6 Class Definitions\n    // A class definition is always strict mode code.\n    var oldStrict = this.strict;\n    this.strict = true;\n\n    this.parseClassId(node, isStatement);\n    this.parseClassSuper(node);\n    var privateNameMap = this.enterClassBody();\n    var classBody = this.startNode();\n    var hadConstructor = false;\n    classBody.body = [];\n    this.expect(types$1.braceL);\n    while (this.type !== types$1.braceR) {\n      var element = this.parseClassElement(node.superClass !== null);\n      if (element) {\n        classBody.body.push(element);\n        if (element.type === \"MethodDefinition\" && element.kind === \"constructor\") {\n          if (hadConstructor) { this.raise(element.start, \"Duplicate constructor in the same class\"); }\n          hadConstructor = true;\n        } else if (element.key && element.key.type === \"PrivateIdentifier\" && isPrivateNameConflicted(privateNameMap, element)) {\n          this.raiseRecoverable(element.key.start, (\"Identifier '#\" + (element.key.name) + \"' has already been declared\"));\n        }\n      }\n    }\n    this.strict = oldStrict;\n    this.next();\n    node.body = this.finishNode(classBody, \"ClassBody\");\n    this.exitClassBody();\n    return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\")\n  };\n\n  pp$8.parseClassElement = function(constructorAllowsSuper) {\n    if (this.eat(types$1.semi)) { return null }\n\n    var ecmaVersion = this.options.ecmaVersion;\n    var node = this.startNode();\n    var keyName = \"\";\n    var isGenerator = false;\n    var isAsync = false;\n    var kind = \"method\";\n    var isStatic = false;\n\n    if (this.eatContextual(\"static\")) {\n      // Parse static init block\n      if (ecmaVersion >= 13 && this.eat(types$1.braceL)) {\n        this.parseClassStaticBlock(node);\n        return node\n      }\n      if (this.isClassElementNameStart() || this.type === types$1.star) {\n        isStatic = true;\n      } else {\n        keyName = \"static\";\n      }\n    }\n    node.static = isStatic;\n    if (!keyName && ecmaVersion >= 8 && this.eatContextual(\"async\")) {\n      if ((this.isClassElementNameStart() || this.type === types$1.star) && !this.canInsertSemicolon()) {\n        isAsync = true;\n      } else {\n        keyName = \"async\";\n      }\n    }\n    if (!keyName && (ecmaVersion >= 9 || !isAsync) && this.eat(types$1.star)) {\n      isGenerator = true;\n    }\n    if (!keyName && !isAsync && !isGenerator) {\n      var lastValue = this.value;\n      if (this.eatContextual(\"get\") || this.eatContextual(\"set\")) {\n        if (this.isClassElementNameStart()) {\n          kind = lastValue;\n        } else {\n          keyName = lastValue;\n        }\n      }\n    }\n\n    // Parse element name\n    if (keyName) {\n      // 'async', 'get', 'set', or 'static' were not a keyword contextually.\n      // The last token is any of those. Make it the element name.\n      node.computed = false;\n      node.key = this.startNodeAt(this.lastTokStart, this.lastTokStartLoc);\n      node.key.name = keyName;\n      this.finishNode(node.key, \"Identifier\");\n    } else {\n      this.parseClassElementName(node);\n    }\n\n    // Parse element value\n    if (ecmaVersion < 13 || this.type === types$1.parenL || kind !== \"method\" || isGenerator || isAsync) {\n      var isConstructor = !node.static && checkKeyName(node, \"constructor\");\n      var allowsDirectSuper = isConstructor && constructorAllowsSuper;\n      // Couldn't move this check into the 'parseClassMethod' method for backward compatibility.\n      if (isConstructor && kind !== \"method\") { this.raise(node.key.start, \"Constructor can't have get/set modifier\"); }\n      node.kind = isConstructor ? \"constructor\" : kind;\n      this.parseClassMethod(node, isGenerator, isAsync, allowsDirectSuper);\n    } else {\n      this.parseClassField(node);\n    }\n\n    return node\n  };\n\n  pp$8.isClassElementNameStart = function() {\n    return (\n      this.type === types$1.name ||\n      this.type === types$1.privateId ||\n      this.type === types$1.num ||\n      this.type === types$1.string ||\n      this.type === types$1.bracketL ||\n      this.type.keyword\n    )\n  };\n\n  pp$8.parseClassElementName = function(element) {\n    if (this.type === types$1.privateId) {\n      if (this.value === \"constructor\") {\n        this.raise(this.start, \"Classes can't have an element named '#constructor'\");\n      }\n      element.computed = false;\n      element.key = this.parsePrivateIdent();\n    } else {\n      this.parsePropertyName(element);\n    }\n  };\n\n  pp$8.parseClassMethod = function(method, isGenerator, isAsync, allowsDirectSuper) {\n    // Check key and flags\n    var key = method.key;\n    if (method.kind === \"constructor\") {\n      if (isGenerator) { this.raise(key.start, \"Constructor can't be a generator\"); }\n      if (isAsync) { this.raise(key.start, \"Constructor can't be an async method\"); }\n    } else if (method.static && checkKeyName(method, \"prototype\")) {\n      this.raise(key.start, \"Classes may not have a static property named prototype\");\n    }\n\n    // Parse value\n    var value = method.value = this.parseMethod(isGenerator, isAsync, allowsDirectSuper);\n\n    // Check value\n    if (method.kind === \"get\" && value.params.length !== 0)\n      { this.raiseRecoverable(value.start, \"getter should have no params\"); }\n    if (method.kind === \"set\" && value.params.length !== 1)\n      { this.raiseRecoverable(value.start, \"setter should have exactly one param\"); }\n    if (method.kind === \"set\" && value.params[0].type === \"RestElement\")\n      { this.raiseRecoverable(value.params[0].start, \"Setter cannot use rest params\"); }\n\n    return this.finishNode(method, \"MethodDefinition\")\n  };\n\n  pp$8.parseClassField = function(field) {\n    if (checkKeyName(field, \"constructor\")) {\n      this.raise(field.key.start, \"Classes can't have a field named 'constructor'\");\n    } else if (field.static && checkKeyName(field, \"prototype\")) {\n      this.raise(field.key.start, \"Classes can't have a static field named 'prototype'\");\n    }\n\n    if (this.eat(types$1.eq)) {\n      // To raise SyntaxError if 'arguments' exists in the initializer.\n      var scope = this.currentThisScope();\n      var inClassFieldInit = scope.inClassFieldInit;\n      scope.inClassFieldInit = true;\n      field.value = this.parseMaybeAssign();\n      scope.inClassFieldInit = inClassFieldInit;\n    } else {\n      field.value = null;\n    }\n    this.semicolon();\n\n    return this.finishNode(field, \"PropertyDefinition\")\n  };\n\n  pp$8.parseClassStaticBlock = function(node) {\n    node.body = [];\n\n    var oldLabels = this.labels;\n    this.labels = [];\n    this.enterScope(SCOPE_CLASS_STATIC_BLOCK | SCOPE_SUPER);\n    while (this.type !== types$1.braceR) {\n      var stmt = this.parseStatement(null);\n      node.body.push(stmt);\n    }\n    this.next();\n    this.exitScope();\n    this.labels = oldLabels;\n\n    return this.finishNode(node, \"StaticBlock\")\n  };\n\n  pp$8.parseClassId = function(node, isStatement) {\n    if (this.type === types$1.name) {\n      node.id = this.parseIdent();\n      if (isStatement)\n        { this.checkLValSimple(node.id, BIND_LEXICAL, false); }\n    } else {\n      if (isStatement === true)\n        { this.unexpected(); }\n      node.id = null;\n    }\n  };\n\n  pp$8.parseClassSuper = function(node) {\n    node.superClass = this.eat(types$1._extends) ? this.parseExprSubscripts(null, false) : null;\n  };\n\n  pp$8.enterClassBody = function() {\n    var element = {declared: Object.create(null), used: []};\n    this.privateNameStack.push(element);\n    return element.declared\n  };\n\n  pp$8.exitClassBody = function() {\n    var ref = this.privateNameStack.pop();\n    var declared = ref.declared;\n    var used = ref.used;\n    var len = this.privateNameStack.length;\n    var parent = len === 0 ? null : this.privateNameStack[len - 1];\n    for (var i = 0; i < used.length; ++i) {\n      var id = used[i];\n      if (!hasOwn(declared, id.name)) {\n        if (parent) {\n          parent.used.push(id);\n        } else {\n          this.raiseRecoverable(id.start, (\"Private field '#\" + (id.name) + \"' must be declared in an enclosing class\"));\n        }\n      }\n    }\n  };\n\n  function isPrivateNameConflicted(privateNameMap, element) {\n    var name = element.key.name;\n    var curr = privateNameMap[name];\n\n    var next = \"true\";\n    if (element.type === \"MethodDefinition\" && (element.kind === \"get\" || element.kind === \"set\")) {\n      next = (element.static ? \"s\" : \"i\") + element.kind;\n    }\n\n    // `class { get #a(){}; static set #a(_){} }` is also conflict.\n    if (\n      curr === \"iget\" && next === \"iset\" ||\n      curr === \"iset\" && next === \"iget\" ||\n      curr === \"sget\" && next === \"sset\" ||\n      curr === \"sset\" && next === \"sget\"\n    ) {\n      privateNameMap[name] = \"true\";\n      return false\n    } else if (!curr) {\n      privateNameMap[name] = next;\n      return false\n    } else {\n      return true\n    }\n  }\n\n  function checkKeyName(node, name) {\n    var computed = node.computed;\n    var key = node.key;\n    return !computed && (\n      key.type === \"Identifier\" && key.name === name ||\n      key.type === \"Literal\" && key.value === name\n    )\n  }\n\n  // Parses module export declaration.\n\n  pp$8.parseExport = function(node, exports) {\n    this.next();\n    // export * from '...'\n    if (this.eat(types$1.star)) {\n      if (this.options.ecmaVersion >= 11) {\n        if (this.eatContextual(\"as\")) {\n          node.exported = this.parseModuleExportName();\n          this.checkExport(exports, node.exported, this.lastTokStart);\n        } else {\n          node.exported = null;\n        }\n      }\n      this.expectContextual(\"from\");\n      if (this.type !== types$1.string) { this.unexpected(); }\n      node.source = this.parseExprAtom();\n      this.semicolon();\n      return this.finishNode(node, \"ExportAllDeclaration\")\n    }\n    if (this.eat(types$1._default)) { // export default ...\n      this.checkExport(exports, \"default\", this.lastTokStart);\n      var isAsync;\n      if (this.type === types$1._function || (isAsync = this.isAsyncFunction())) {\n        var fNode = this.startNode();\n        this.next();\n        if (isAsync) { this.next(); }\n        node.declaration = this.parseFunction(fNode, FUNC_STATEMENT | FUNC_NULLABLE_ID, false, isAsync);\n      } else if (this.type === types$1._class) {\n        var cNode = this.startNode();\n        node.declaration = this.parseClass(cNode, \"nullableID\");\n      } else {\n        node.declaration = this.parseMaybeAssign();\n        this.semicolon();\n      }\n      return this.finishNode(node, \"ExportDefaultDeclaration\")\n    }\n    // export var|const|let|function|class ...\n    if (this.shouldParseExportStatement()) {\n      node.declaration = this.parseStatement(null);\n      if (node.declaration.type === \"VariableDeclaration\")\n        { this.checkVariableExport(exports, node.declaration.declarations); }\n      else\n        { this.checkExport(exports, node.declaration.id, node.declaration.id.start); }\n      node.specifiers = [];\n      node.source = null;\n    } else { // export { x, y as z } [from '...']\n      node.declaration = null;\n      node.specifiers = this.parseExportSpecifiers(exports);\n      if (this.eatContextual(\"from\")) {\n        if (this.type !== types$1.string) { this.unexpected(); }\n        node.source = this.parseExprAtom();\n      } else {\n        for (var i = 0, list = node.specifiers; i < list.length; i += 1) {\n          // check for keywords used as local names\n          var spec = list[i];\n\n          this.checkUnreserved(spec.local);\n          // check if export is defined\n          this.checkLocalExport(spec.local);\n\n          if (spec.local.type === \"Literal\") {\n            this.raise(spec.local.start, \"A string literal cannot be used as an exported binding without `from`.\");\n          }\n        }\n\n        node.source = null;\n      }\n      this.semicolon();\n    }\n    return this.finishNode(node, \"ExportNamedDeclaration\")\n  };\n\n  pp$8.checkExport = function(exports, name, pos) {\n    if (!exports) { return }\n    if (typeof name !== \"string\")\n      { name = name.type === \"Identifier\" ? name.name : name.value; }\n    if (hasOwn(exports, name))\n      { this.raiseRecoverable(pos, \"Duplicate export '\" + name + \"'\"); }\n    exports[name] = true;\n  };\n\n  pp$8.checkPatternExport = function(exports, pat) {\n    var type = pat.type;\n    if (type === \"Identifier\")\n      { this.checkExport(exports, pat, pat.start); }\n    else if (type === \"ObjectPattern\")\n      { for (var i = 0, list = pat.properties; i < list.length; i += 1)\n        {\n          var prop = list[i];\n\n          this.checkPatternExport(exports, prop);\n        } }\n    else if (type === \"ArrayPattern\")\n      { for (var i$1 = 0, list$1 = pat.elements; i$1 < list$1.length; i$1 += 1) {\n        var elt = list$1[i$1];\n\n          if (elt) { this.checkPatternExport(exports, elt); }\n      } }\n    else if (type === \"Property\")\n      { this.checkPatternExport(exports, pat.value); }\n    else if (type === \"AssignmentPattern\")\n      { this.checkPatternExport(exports, pat.left); }\n    else if (type === \"RestElement\")\n      { this.checkPatternExport(exports, pat.argument); }\n    else if (type === \"ParenthesizedExpression\")\n      { this.checkPatternExport(exports, pat.expression); }\n  };\n\n  pp$8.checkVariableExport = function(exports, decls) {\n    if (!exports) { return }\n    for (var i = 0, list = decls; i < list.length; i += 1)\n      {\n      var decl = list[i];\n\n      this.checkPatternExport(exports, decl.id);\n    }\n  };\n\n  pp$8.shouldParseExportStatement = function() {\n    return this.type.keyword === \"var\" ||\n      this.type.keyword === \"const\" ||\n      this.type.keyword === \"class\" ||\n      this.type.keyword === \"function\" ||\n      this.isLet() ||\n      this.isAsyncFunction()\n  };\n\n  // Parses a comma-separated list of module exports.\n\n  pp$8.parseExportSpecifiers = function(exports) {\n    var nodes = [], first = true;\n    // export { x, y as z } [from '...']\n    this.expect(types$1.braceL);\n    while (!this.eat(types$1.braceR)) {\n      if (!first) {\n        this.expect(types$1.comma);\n        if (this.afterTrailingComma(types$1.braceR)) { break }\n      } else { first = false; }\n\n      var node = this.startNode();\n      node.local = this.parseModuleExportName();\n      node.exported = this.eatContextual(\"as\") ? this.parseModuleExportName() : node.local;\n      this.checkExport(\n        exports,\n        node.exported,\n        node.exported.start\n      );\n      nodes.push(this.finishNode(node, \"ExportSpecifier\"));\n    }\n    return nodes\n  };\n\n  // Parses import declaration.\n\n  pp$8.parseImport = function(node) {\n    this.next();\n    // import '...'\n    if (this.type === types$1.string) {\n      node.specifiers = empty$1;\n      node.source = this.parseExprAtom();\n    } else {\n      node.specifiers = this.parseImportSpecifiers();\n      this.expectContextual(\"from\");\n      node.source = this.type === types$1.string ? this.parseExprAtom() : this.unexpected();\n    }\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\")\n  };\n\n  // Parses a comma-separated list of module imports.\n\n  pp$8.parseImportSpecifiers = function() {\n    var nodes = [], first = true;\n    if (this.type === types$1.name) {\n      // import defaultObj, { x, y as z } from '...'\n      var node = this.startNode();\n      node.local = this.parseIdent();\n      this.checkLValSimple(node.local, BIND_LEXICAL);\n      nodes.push(this.finishNode(node, \"ImportDefaultSpecifier\"));\n      if (!this.eat(types$1.comma)) { return nodes }\n    }\n    if (this.type === types$1.star) {\n      var node$1 = this.startNode();\n      this.next();\n      this.expectContextual(\"as\");\n      node$1.local = this.parseIdent();\n      this.checkLValSimple(node$1.local, BIND_LEXICAL);\n      nodes.push(this.finishNode(node$1, \"ImportNamespaceSpecifier\"));\n      return nodes\n    }\n    this.expect(types$1.braceL);\n    while (!this.eat(types$1.braceR)) {\n      if (!first) {\n        this.expect(types$1.comma);\n        if (this.afterTrailingComma(types$1.braceR)) { break }\n      } else { first = false; }\n\n      var node$2 = this.startNode();\n      node$2.imported = this.parseModuleExportName();\n      if (this.eatContextual(\"as\")) {\n        node$2.local = this.parseIdent();\n      } else {\n        this.checkUnreserved(node$2.imported);\n        node$2.local = node$2.imported;\n      }\n      this.checkLValSimple(node$2.local, BIND_LEXICAL);\n      nodes.push(this.finishNode(node$2, \"ImportSpecifier\"));\n    }\n    return nodes\n  };\n\n  pp$8.parseModuleExportName = function() {\n    if (this.options.ecmaVersion >= 13 && this.type === types$1.string) {\n      var stringLiteral = this.parseLiteral(this.value);\n      if (loneSurrogate.test(stringLiteral.value)) {\n        this.raise(stringLiteral.start, \"An export name cannot include a lone surrogate.\");\n      }\n      return stringLiteral\n    }\n    return this.parseIdent(true)\n  };\n\n  // Set `ExpressionStatement#directive` property for directive prologues.\n  pp$8.adaptDirectivePrologue = function(statements) {\n    for (var i = 0; i < statements.length && this.isDirectiveCandidate(statements[i]); ++i) {\n      statements[i].directive = statements[i].expression.raw.slice(1, -1);\n    }\n  };\n  pp$8.isDirectiveCandidate = function(statement) {\n    return (\n      this.options.ecmaVersion >= 5 &&\n      statement.type === \"ExpressionStatement\" &&\n      statement.expression.type === \"Literal\" &&\n      typeof statement.expression.value === \"string\" &&\n      // Reject parenthesized strings.\n      (this.input[statement.start] === \"\\\"\" || this.input[statement.start] === \"'\")\n    )\n  };\n\n  var pp$7 = Parser.prototype;\n\n  // Convert existing expression atom to assignable pattern\n  // if possible.\n\n  pp$7.toAssignable = function(node, isBinding, refDestructuringErrors) {\n    if (this.options.ecmaVersion >= 6 && node) {\n      switch (node.type) {\n      case \"Identifier\":\n        if (this.inAsync && node.name === \"await\")\n          { this.raise(node.start, \"Cannot use 'await' as identifier inside an async function\"); }\n        break\n\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"AssignmentPattern\":\n      case \"RestElement\":\n        break\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n        if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n        for (var i = 0, list = node.properties; i < list.length; i += 1) {\n          var prop = list[i];\n\n        this.toAssignable(prop, isBinding);\n          // Early error:\n          //   AssignmentRestProperty[Yield, Await] :\n          //     `...` DestructuringAssignmentTarget[Yield, Await]\n          //\n          //   It is a Syntax Error if |DestructuringAssignmentTarget| is an |ArrayLiteral| or an |ObjectLiteral|.\n          if (\n            prop.type === \"RestElement\" &&\n            (prop.argument.type === \"ArrayPattern\" || prop.argument.type === \"ObjectPattern\")\n          ) {\n            this.raise(prop.argument.start, \"Unexpected token\");\n          }\n        }\n        break\n\n      case \"Property\":\n        // AssignmentProperty has type === \"Property\"\n        if (node.kind !== \"init\") { this.raise(node.key.start, \"Object pattern can't contain getter or setter\"); }\n        this.toAssignable(node.value, isBinding);\n        break\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n        this.toAssignableList(node.elements, isBinding);\n        break\n\n      case \"SpreadElement\":\n        node.type = \"RestElement\";\n        this.toAssignable(node.argument, isBinding);\n        if (node.argument.type === \"AssignmentPattern\")\n          { this.raise(node.argument.start, \"Rest elements cannot have a default value\"); }\n        break\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") { this.raise(node.left.end, \"Only '=' operator can be used for specifying default value.\"); }\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isBinding);\n        break\n\n      case \"ParenthesizedExpression\":\n        this.toAssignable(node.expression, isBinding, refDestructuringErrors);\n        break\n\n      case \"ChainExpression\":\n        this.raiseRecoverable(node.start, \"Optional chaining cannot appear in left-hand side\");\n        break\n\n      case \"MemberExpression\":\n        if (!isBinding) { break }\n\n      default:\n        this.raise(node.start, \"Assigning to rvalue\");\n      }\n    } else if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n    return node\n  };\n\n  // Convert list of expression atoms to binding list.\n\n  pp$7.toAssignableList = function(exprList, isBinding) {\n    var end = exprList.length;\n    for (var i = 0; i < end; i++) {\n      var elt = exprList[i];\n      if (elt) { this.toAssignable(elt, isBinding); }\n    }\n    if (end) {\n      var last = exprList[end - 1];\n      if (this.options.ecmaVersion === 6 && isBinding && last && last.type === \"RestElement\" && last.argument.type !== \"Identifier\")\n        { this.unexpected(last.argument.start); }\n    }\n    return exprList\n  };\n\n  // Parses spread element.\n\n  pp$7.parseSpread = function(refDestructuringErrors) {\n    var node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n    return this.finishNode(node, \"SpreadElement\")\n  };\n\n  pp$7.parseRestBinding = function() {\n    var node = this.startNode();\n    this.next();\n\n    // RestElement inside of a function parameter must be an identifier\n    if (this.options.ecmaVersion === 6 && this.type !== types$1.name)\n      { this.unexpected(); }\n\n    node.argument = this.parseBindingAtom();\n\n    return this.finishNode(node, \"RestElement\")\n  };\n\n  // Parses lvalue (assignable) atom.\n\n  pp$7.parseBindingAtom = function() {\n    if (this.options.ecmaVersion >= 6) {\n      switch (this.type) {\n      case types$1.bracketL:\n        var node = this.startNode();\n        this.next();\n        node.elements = this.parseBindingList(types$1.bracketR, true, true);\n        return this.finishNode(node, \"ArrayPattern\")\n\n      case types$1.braceL:\n        return this.parseObj(true)\n      }\n    }\n    return this.parseIdent()\n  };\n\n  pp$7.parseBindingList = function(close, allowEmpty, allowTrailingComma) {\n    var elts = [], first = true;\n    while (!this.eat(close)) {\n      if (first) { first = false; }\n      else { this.expect(types$1.comma); }\n      if (allowEmpty && this.type === types$1.comma) {\n        elts.push(null);\n      } else if (allowTrailingComma && this.afterTrailingComma(close)) {\n        break\n      } else if (this.type === types$1.ellipsis) {\n        var rest = this.parseRestBinding();\n        this.parseBindingListItem(rest);\n        elts.push(rest);\n        if (this.type === types$1.comma) { this.raise(this.start, \"Comma is not permitted after the rest element\"); }\n        this.expect(close);\n        break\n      } else {\n        var elem = this.parseMaybeDefault(this.start, this.startLoc);\n        this.parseBindingListItem(elem);\n        elts.push(elem);\n      }\n    }\n    return elts\n  };\n\n  pp$7.parseBindingListItem = function(param) {\n    return param\n  };\n\n  // Parses assignment pattern around given atom if possible.\n\n  pp$7.parseMaybeDefault = function(startPos, startLoc, left) {\n    left = left || this.parseBindingAtom();\n    if (this.options.ecmaVersion < 6 || !this.eat(types$1.eq)) { return left }\n    var node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssign();\n    return this.finishNode(node, \"AssignmentPattern\")\n  };\n\n  // The following three functions all verify that a node is an lvalue —\n  // something that can be bound, or assigned to. In order to do so, they perform\n  // a variety of checks:\n  //\n  // - Check that none of the bound/assigned-to identifiers are reserved words.\n  // - Record name declarations for bindings in the appropriate scope.\n  // - Check duplicate argument names, if checkClashes is set.\n  //\n  // If a complex binding pattern is encountered (e.g., object and array\n  // destructuring), the entire pattern is recursively checked.\n  //\n  // There are three versions of checkLVal*() appropriate for different\n  // circumstances:\n  //\n  // - checkLValSimple() shall be used if the syntactic construct supports\n  //   nothing other than identifiers and member expressions. Parenthesized\n  //   expressions are also correctly handled. This is generally appropriate for\n  //   constructs for which the spec says\n  //\n  //   > It is a Syntax Error if AssignmentTargetType of [the production] is not\n  //   > simple.\n  //\n  //   It is also appropriate for checking if an identifier is valid and not\n  //   defined elsewhere, like import declarations or function/class identifiers.\n  //\n  //   Examples where this is used include:\n  //     a += …;\n  //     import a from '…';\n  //   where a is the node to be checked.\n  //\n  // - checkLValPattern() shall be used if the syntactic construct supports\n  //   anything checkLValSimple() supports, as well as object and array\n  //   destructuring patterns. This is generally appropriate for constructs for\n  //   which the spec says\n  //\n  //   > It is a Syntax Error if [the production] is neither an ObjectLiteral nor\n  //   > an ArrayLiteral and AssignmentTargetType of [the production] is not\n  //   > simple.\n  //\n  //   Examples where this is used include:\n  //     (a = …);\n  //     const a = …;\n  //     try { … } catch (a) { … }\n  //   where a is the node to be checked.\n  //\n  // - checkLValInnerPattern() shall be used if the syntactic construct supports\n  //   anything checkLValPattern() supports, as well as default assignment\n  //   patterns, rest elements, and other constructs that may appear within an\n  //   object or array destructuring pattern.\n  //\n  //   As a special case, function parameters also use checkLValInnerPattern(),\n  //   as they also support defaults and rest constructs.\n  //\n  // These functions deliberately support both assignment and binding constructs,\n  // as the logic for both is exceedingly similar. If the node is the target of\n  // an assignment, then bindingType should be set to BIND_NONE. Otherwise, it\n  // should be set to the appropriate BIND_* constant, like BIND_VAR or\n  // BIND_LEXICAL.\n  //\n  // If the function is called with a non-BIND_NONE bindingType, then\n  // additionally a checkClashes object may be specified to allow checking for\n  // duplicate argument names. checkClashes is ignored if the provided construct\n  // is an assignment (i.e., bindingType is BIND_NONE).\n\n  pp$7.checkLValSimple = function(expr, bindingType, checkClashes) {\n    if ( bindingType === void 0 ) bindingType = BIND_NONE;\n\n    var isBind = bindingType !== BIND_NONE;\n\n    switch (expr.type) {\n    case \"Identifier\":\n      if (this.strict && this.reservedWordsStrictBind.test(expr.name))\n        { this.raiseRecoverable(expr.start, (isBind ? \"Binding \" : \"Assigning to \") + expr.name + \" in strict mode\"); }\n      if (isBind) {\n        if (bindingType === BIND_LEXICAL && expr.name === \"let\")\n          { this.raiseRecoverable(expr.start, \"let is disallowed as a lexically bound name\"); }\n        if (checkClashes) {\n          if (hasOwn(checkClashes, expr.name))\n            { this.raiseRecoverable(expr.start, \"Argument name clash\"); }\n          checkClashes[expr.name] = true;\n        }\n        if (bindingType !== BIND_OUTSIDE) { this.declareName(expr.name, bindingType, expr.start); }\n      }\n      break\n\n    case \"ChainExpression\":\n      this.raiseRecoverable(expr.start, \"Optional chaining cannot appear in left-hand side\");\n      break\n\n    case \"MemberExpression\":\n      if (isBind) { this.raiseRecoverable(expr.start, \"Binding member expression\"); }\n      break\n\n    case \"ParenthesizedExpression\":\n      if (isBind) { this.raiseRecoverable(expr.start, \"Binding parenthesized expression\"); }\n      return this.checkLValSimple(expr.expression, bindingType, checkClashes)\n\n    default:\n      this.raise(expr.start, (isBind ? \"Binding\" : \"Assigning to\") + \" rvalue\");\n    }\n  };\n\n  pp$7.checkLValPattern = function(expr, bindingType, checkClashes) {\n    if ( bindingType === void 0 ) bindingType = BIND_NONE;\n\n    switch (expr.type) {\n    case \"ObjectPattern\":\n      for (var i = 0, list = expr.properties; i < list.length; i += 1) {\n        var prop = list[i];\n\n      this.checkLValInnerPattern(prop, bindingType, checkClashes);\n      }\n      break\n\n    case \"ArrayPattern\":\n      for (var i$1 = 0, list$1 = expr.elements; i$1 < list$1.length; i$1 += 1) {\n        var elem = list$1[i$1];\n\n      if (elem) { this.checkLValInnerPattern(elem, bindingType, checkClashes); }\n      }\n      break\n\n    default:\n      this.checkLValSimple(expr, bindingType, checkClashes);\n    }\n  };\n\n  pp$7.checkLValInnerPattern = function(expr, bindingType, checkClashes) {\n    if ( bindingType === void 0 ) bindingType = BIND_NONE;\n\n    switch (expr.type) {\n    case \"Property\":\n      // AssignmentProperty has type === \"Property\"\n      this.checkLValInnerPattern(expr.value, bindingType, checkClashes);\n      break\n\n    case \"AssignmentPattern\":\n      this.checkLValPattern(expr.left, bindingType, checkClashes);\n      break\n\n    case \"RestElement\":\n      this.checkLValPattern(expr.argument, bindingType, checkClashes);\n      break\n\n    default:\n      this.checkLValPattern(expr, bindingType, checkClashes);\n    }\n  };\n\n  // The algorithm used to determine whether a regexp can appear at a\n\n  var TokContext = function TokContext(token, isExpr, preserveSpace, override, generator) {\n    this.token = token;\n    this.isExpr = !!isExpr;\n    this.preserveSpace = !!preserveSpace;\n    this.override = override;\n    this.generator = !!generator;\n  };\n\n  var types = {\n    b_stat: new TokContext(\"{\", false),\n    b_expr: new TokContext(\"{\", true),\n    b_tmpl: new TokContext(\"${\", false),\n    p_stat: new TokContext(\"(\", false),\n    p_expr: new TokContext(\"(\", true),\n    q_tmpl: new TokContext(\"`\", true, true, function (p) { return p.tryReadTemplateToken(); }),\n    f_stat: new TokContext(\"function\", false),\n    f_expr: new TokContext(\"function\", true),\n    f_expr_gen: new TokContext(\"function\", true, false, null, true),\n    f_gen: new TokContext(\"function\", false, false, null, true)\n  };\n\n  var pp$6 = Parser.prototype;\n\n  pp$6.initialContext = function() {\n    return [types.b_stat]\n  };\n\n  pp$6.curContext = function() {\n    return this.context[this.context.length - 1]\n  };\n\n  pp$6.braceIsBlock = function(prevType) {\n    var parent = this.curContext();\n    if (parent === types.f_expr || parent === types.f_stat)\n      { return true }\n    if (prevType === types$1.colon && (parent === types.b_stat || parent === types.b_expr))\n      { return !parent.isExpr }\n\n    // The check for `tt.name && exprAllowed` detects whether we are\n    // after a `yield` or `of` construct. See the `updateContext` for\n    // `tt.name`.\n    if (prevType === types$1._return || prevType === types$1.name && this.exprAllowed)\n      { return lineBreak.test(this.input.slice(this.lastTokEnd, this.start)) }\n    if (prevType === types$1._else || prevType === types$1.semi || prevType === types$1.eof || prevType === types$1.parenR || prevType === types$1.arrow)\n      { return true }\n    if (prevType === types$1.braceL)\n      { return parent === types.b_stat }\n    if (prevType === types$1._var || prevType === types$1._const || prevType === types$1.name)\n      { return false }\n    return !this.exprAllowed\n  };\n\n  pp$6.inGeneratorContext = function() {\n    for (var i = this.context.length - 1; i >= 1; i--) {\n      var context = this.context[i];\n      if (context.token === \"function\")\n        { return context.generator }\n    }\n    return false\n  };\n\n  pp$6.updateContext = function(prevType) {\n    var update, type = this.type;\n    if (type.keyword && prevType === types$1.dot)\n      { this.exprAllowed = false; }\n    else if (update = type.updateContext)\n      { update.call(this, prevType); }\n    else\n      { this.exprAllowed = type.beforeExpr; }\n  };\n\n  // Used to handle egde cases when token context could not be inferred correctly during tokenization phase\n\n  pp$6.overrideContext = function(tokenCtx) {\n    if (this.curContext() !== tokenCtx) {\n      this.context[this.context.length - 1] = tokenCtx;\n    }\n  };\n\n  // Token-specific context update code\n\n  types$1.parenR.updateContext = types$1.braceR.updateContext = function() {\n    if (this.context.length === 1) {\n      this.exprAllowed = true;\n      return\n    }\n    var out = this.context.pop();\n    if (out === types.b_stat && this.curContext().token === \"function\") {\n      out = this.context.pop();\n    }\n    this.exprAllowed = !out.isExpr;\n  };\n\n  types$1.braceL.updateContext = function(prevType) {\n    this.context.push(this.braceIsBlock(prevType) ? types.b_stat : types.b_expr);\n    this.exprAllowed = true;\n  };\n\n  types$1.dollarBraceL.updateContext = function() {\n    this.context.push(types.b_tmpl);\n    this.exprAllowed = true;\n  };\n\n  types$1.parenL.updateContext = function(prevType) {\n    var statementParens = prevType === types$1._if || prevType === types$1._for || prevType === types$1._with || prevType === types$1._while;\n    this.context.push(statementParens ? types.p_stat : types.p_expr);\n    this.exprAllowed = true;\n  };\n\n  types$1.incDec.updateContext = function() {\n    // tokExprAllowed stays unchanged\n  };\n\n  types$1._function.updateContext = types$1._class.updateContext = function(prevType) {\n    if (prevType.beforeExpr && prevType !== types$1._else &&\n        !(prevType === types$1.semi && this.curContext() !== types.p_stat) &&\n        !(prevType === types$1._return && lineBreak.test(this.input.slice(this.lastTokEnd, this.start))) &&\n        !((prevType === types$1.colon || prevType === types$1.braceL) && this.curContext() === types.b_stat))\n      { this.context.push(types.f_expr); }\n    else\n      { this.context.push(types.f_stat); }\n    this.exprAllowed = false;\n  };\n\n  types$1.backQuote.updateContext = function() {\n    if (this.curContext() === types.q_tmpl)\n      { this.context.pop(); }\n    else\n      { this.context.push(types.q_tmpl); }\n    this.exprAllowed = false;\n  };\n\n  types$1.star.updateContext = function(prevType) {\n    if (prevType === types$1._function) {\n      var index = this.context.length - 1;\n      if (this.context[index] === types.f_expr)\n        { this.context[index] = types.f_expr_gen; }\n      else\n        { this.context[index] = types.f_gen; }\n    }\n    this.exprAllowed = true;\n  };\n\n  types$1.name.updateContext = function(prevType) {\n    var allowed = false;\n    if (this.options.ecmaVersion >= 6 && prevType !== types$1.dot) {\n      if (this.value === \"of\" && !this.exprAllowed ||\n          this.value === \"yield\" && this.inGeneratorContext())\n        { allowed = true; }\n    }\n    this.exprAllowed = allowed;\n  };\n\n  // A recursive descent parser operates by defining functions for all\n\n  var pp$5 = Parser.prototype;\n\n  // Check if property name clashes with already added.\n  // Object/class getters and setters are not allowed to clash —\n  // either with each other or with an init property — and in\n  // strict mode, init properties are also not allowed to be repeated.\n\n  pp$5.checkPropClash = function(prop, propHash, refDestructuringErrors) {\n    if (this.options.ecmaVersion >= 9 && prop.type === \"SpreadElement\")\n      { return }\n    if (this.options.ecmaVersion >= 6 && (prop.computed || prop.method || prop.shorthand))\n      { return }\n    var key = prop.key;\n    var name;\n    switch (key.type) {\n    case \"Identifier\": name = key.name; break\n    case \"Literal\": name = String(key.value); break\n    default: return\n    }\n    var kind = prop.kind;\n    if (this.options.ecmaVersion >= 6) {\n      if (name === \"__proto__\" && kind === \"init\") {\n        if (propHash.proto) {\n          if (refDestructuringErrors) {\n            if (refDestructuringErrors.doubleProto < 0) {\n              refDestructuringErrors.doubleProto = key.start;\n            }\n          } else {\n            this.raiseRecoverable(key.start, \"Redefinition of __proto__ property\");\n          }\n        }\n        propHash.proto = true;\n      }\n      return\n    }\n    name = \"$\" + name;\n    var other = propHash[name];\n    if (other) {\n      var redefinition;\n      if (kind === \"init\") {\n        redefinition = this.strict && other.init || other.get || other.set;\n      } else {\n        redefinition = other.init || other[kind];\n      }\n      if (redefinition)\n        { this.raiseRecoverable(key.start, \"Redefinition of property\"); }\n    } else {\n      other = propHash[name] = {\n        init: false,\n        get: false,\n        set: false\n      };\n    }\n    other[kind] = true;\n  };\n\n  // ### Expression parsing\n\n  // These nest, from the most general expression type at the top to\n  // 'atomic', nondivisible expression types at the bottom. Most of\n  // the functions will simply let the function(s) below them parse,\n  // and, *if* the syntactic construct they handle is present, wrap\n  // the AST node that the inner parser gave them in another node.\n\n  // Parse a full expression. The optional arguments are used to\n  // forbid the `in` operator (in for loops initalization expressions)\n  // and provide reference for storing '=' operator inside shorthand\n  // property assignment in contexts where both object expression\n  // and object pattern might appear (so it's possible to raise\n  // delayed syntax error at correct position).\n\n  pp$5.parseExpression = function(forInit, refDestructuringErrors) {\n    var startPos = this.start, startLoc = this.startLoc;\n    var expr = this.parseMaybeAssign(forInit, refDestructuringErrors);\n    if (this.type === types$1.comma) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.expressions = [expr];\n      while (this.eat(types$1.comma)) { node.expressions.push(this.parseMaybeAssign(forInit, refDestructuringErrors)); }\n      return this.finishNode(node, \"SequenceExpression\")\n    }\n    return expr\n  };\n\n  // Parse an assignment expression. This includes applications of\n  // operators like `+=`.\n\n  pp$5.parseMaybeAssign = function(forInit, refDestructuringErrors, afterLeftParse) {\n    if (this.isContextual(\"yield\")) {\n      if (this.inGenerator) { return this.parseYield(forInit) }\n      // The tokenizer will assume an expression is allowed after\n      // `yield`, but this isn't that kind of yield\n      else { this.exprAllowed = false; }\n    }\n\n    var ownDestructuringErrors = false, oldParenAssign = -1, oldTrailingComma = -1, oldDoubleProto = -1;\n    if (refDestructuringErrors) {\n      oldParenAssign = refDestructuringErrors.parenthesizedAssign;\n      oldTrailingComma = refDestructuringErrors.trailingComma;\n      oldDoubleProto = refDestructuringErrors.doubleProto;\n      refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = -1;\n    } else {\n      refDestructuringErrors = new DestructuringErrors;\n      ownDestructuringErrors = true;\n    }\n\n    var startPos = this.start, startLoc = this.startLoc;\n    if (this.type === types$1.parenL || this.type === types$1.name) {\n      this.potentialArrowAt = this.start;\n      this.potentialArrowInForAwait = forInit === \"await\";\n    }\n    var left = this.parseMaybeConditional(forInit, refDestructuringErrors);\n    if (afterLeftParse) { left = afterLeftParse.call(this, left, startPos, startLoc); }\n    if (this.type.isAssign) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.operator = this.value;\n      if (this.type === types$1.eq)\n        { left = this.toAssignable(left, false, refDestructuringErrors); }\n      if (!ownDestructuringErrors) {\n        refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = refDestructuringErrors.doubleProto = -1;\n      }\n      if (refDestructuringErrors.shorthandAssign >= left.start)\n        { refDestructuringErrors.shorthandAssign = -1; } // reset because shorthand default was used correctly\n      if (this.type === types$1.eq)\n        { this.checkLValPattern(left); }\n      else\n        { this.checkLValSimple(left); }\n      node.left = left;\n      this.next();\n      node.right = this.parseMaybeAssign(forInit);\n      if (oldDoubleProto > -1) { refDestructuringErrors.doubleProto = oldDoubleProto; }\n      return this.finishNode(node, \"AssignmentExpression\")\n    } else {\n      if (ownDestructuringErrors) { this.checkExpressionErrors(refDestructuringErrors, true); }\n    }\n    if (oldParenAssign > -1) { refDestructuringErrors.parenthesizedAssign = oldParenAssign; }\n    if (oldTrailingComma > -1) { refDestructuringErrors.trailingComma = oldTrailingComma; }\n    return left\n  };\n\n  // Parse a ternary conditional (`?:`) operator.\n\n  pp$5.parseMaybeConditional = function(forInit, refDestructuringErrors) {\n    var startPos = this.start, startLoc = this.startLoc;\n    var expr = this.parseExprOps(forInit, refDestructuringErrors);\n    if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n    if (this.eat(types$1.question)) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssign();\n      this.expect(types$1.colon);\n      node.alternate = this.parseMaybeAssign(forInit);\n      return this.finishNode(node, \"ConditionalExpression\")\n    }\n    return expr\n  };\n\n  // Start the precedence parser.\n\n  pp$5.parseExprOps = function(forInit, refDestructuringErrors) {\n    var startPos = this.start, startLoc = this.startLoc;\n    var expr = this.parseMaybeUnary(refDestructuringErrors, false, false, forInit);\n    if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n    return expr.start === startPos && expr.type === \"ArrowFunctionExpression\" ? expr : this.parseExprOp(expr, startPos, startLoc, -1, forInit)\n  };\n\n  // Parse binary operators with the operator precedence parsing\n  // algorithm. `left` is the left-hand side of the operator.\n  // `minPrec` provides context that allows the function to stop and\n  // defer further parser to one of its callers when it encounters an\n  // operator that has a lower precedence than the set it is parsing.\n\n  pp$5.parseExprOp = function(left, leftStartPos, leftStartLoc, minPrec, forInit) {\n    var prec = this.type.binop;\n    if (prec != null && (!forInit || this.type !== types$1._in)) {\n      if (prec > minPrec) {\n        var logical = this.type === types$1.logicalOR || this.type === types$1.logicalAND;\n        var coalesce = this.type === types$1.coalesce;\n        if (coalesce) {\n          // Handle the precedence of `tt.coalesce` as equal to the range of logical expressions.\n          // In other words, `node.right` shouldn't contain logical expressions in order to check the mixed error.\n          prec = types$1.logicalAND.binop;\n        }\n        var op = this.value;\n        this.next();\n        var startPos = this.start, startLoc = this.startLoc;\n        var right = this.parseExprOp(this.parseMaybeUnary(null, false, false, forInit), startPos, startLoc, prec, forInit);\n        var node = this.buildBinary(leftStartPos, leftStartLoc, left, right, op, logical || coalesce);\n        if ((logical && this.type === types$1.coalesce) || (coalesce && (this.type === types$1.logicalOR || this.type === types$1.logicalAND))) {\n          this.raiseRecoverable(this.start, \"Logical expressions and coalesce expressions cannot be mixed. Wrap either by parentheses\");\n        }\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec, forInit)\n      }\n    }\n    return left\n  };\n\n  pp$5.buildBinary = function(startPos, startLoc, left, right, op, logical) {\n    if (right.type === \"PrivateIdentifier\") { this.raise(right.start, \"Private identifier can only be left side of binary expression\"); }\n    var node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.operator = op;\n    node.right = right;\n    return this.finishNode(node, logical ? \"LogicalExpression\" : \"BinaryExpression\")\n  };\n\n  // Parse unary operators, both prefix and postfix.\n\n  pp$5.parseMaybeUnary = function(refDestructuringErrors, sawUnary, incDec, forInit) {\n    var startPos = this.start, startLoc = this.startLoc, expr;\n    if (this.isContextual(\"await\") && this.canAwait) {\n      expr = this.parseAwait(forInit);\n      sawUnary = true;\n    } else if (this.type.prefix) {\n      var node = this.startNode(), update = this.type === types$1.incDec;\n      node.operator = this.value;\n      node.prefix = true;\n      this.next();\n      node.argument = this.parseMaybeUnary(null, true, update, forInit);\n      this.checkExpressionErrors(refDestructuringErrors, true);\n      if (update) { this.checkLValSimple(node.argument); }\n      else if (this.strict && node.operator === \"delete\" &&\n               node.argument.type === \"Identifier\")\n        { this.raiseRecoverable(node.start, \"Deleting local variable in strict mode\"); }\n      else if (node.operator === \"delete\" && isPrivateFieldAccess(node.argument))\n        { this.raiseRecoverable(node.start, \"Private fields can not be deleted\"); }\n      else { sawUnary = true; }\n      expr = this.finishNode(node, update ? \"UpdateExpression\" : \"UnaryExpression\");\n    } else if (!sawUnary && this.type === types$1.privateId) {\n      if (forInit || this.privateNameStack.length === 0) { this.unexpected(); }\n      expr = this.parsePrivateIdent();\n      // only could be private fields in 'in', such as #x in obj\n      if (this.type !== types$1._in) { this.unexpected(); }\n    } else {\n      expr = this.parseExprSubscripts(refDestructuringErrors, forInit);\n      if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n      while (this.type.postfix && !this.canInsertSemicolon()) {\n        var node$1 = this.startNodeAt(startPos, startLoc);\n        node$1.operator = this.value;\n        node$1.prefix = false;\n        node$1.argument = expr;\n        this.checkLValSimple(expr);\n        this.next();\n        expr = this.finishNode(node$1, \"UpdateExpression\");\n      }\n    }\n\n    if (!incDec && this.eat(types$1.starstar)) {\n      if (sawUnary)\n        { this.unexpected(this.lastTokStart); }\n      else\n        { return this.buildBinary(startPos, startLoc, expr, this.parseMaybeUnary(null, false, false, forInit), \"**\", false) }\n    } else {\n      return expr\n    }\n  };\n\n  function isPrivateFieldAccess(node) {\n    return (\n      node.type === \"MemberExpression\" && node.property.type === \"PrivateIdentifier\" ||\n      node.type === \"ChainExpression\" && isPrivateFieldAccess(node.expression)\n    )\n  }\n\n  // Parse call, dot, and `[]`-subscript expressions.\n\n  pp$5.parseExprSubscripts = function(refDestructuringErrors, forInit) {\n    var startPos = this.start, startLoc = this.startLoc;\n    var expr = this.parseExprAtom(refDestructuringErrors, forInit);\n    if (expr.type === \"ArrowFunctionExpression\" && this.input.slice(this.lastTokStart, this.lastTokEnd) !== \")\")\n      { return expr }\n    var result = this.parseSubscripts(expr, startPos, startLoc, false, forInit);\n    if (refDestructuringErrors && result.type === \"MemberExpression\") {\n      if (refDestructuringErrors.parenthesizedAssign >= result.start) { refDestructuringErrors.parenthesizedAssign = -1; }\n      if (refDestructuringErrors.parenthesizedBind >= result.start) { refDestructuringErrors.parenthesizedBind = -1; }\n      if (refDestructuringErrors.trailingComma >= result.start) { refDestructuringErrors.trailingComma = -1; }\n    }\n    return result\n  };\n\n  pp$5.parseSubscripts = function(base, startPos, startLoc, noCalls, forInit) {\n    var maybeAsyncArrow = this.options.ecmaVersion >= 8 && base.type === \"Identifier\" && base.name === \"async\" &&\n        this.lastTokEnd === base.end && !this.canInsertSemicolon() && base.end - base.start === 5 &&\n        this.potentialArrowAt === base.start;\n    var optionalChained = false;\n\n    while (true) {\n      var element = this.parseSubscript(base, startPos, startLoc, noCalls, maybeAsyncArrow, optionalChained, forInit);\n\n      if (element.optional) { optionalChained = true; }\n      if (element === base || element.type === \"ArrowFunctionExpression\") {\n        if (optionalChained) {\n          var chainNode = this.startNodeAt(startPos, startLoc);\n          chainNode.expression = element;\n          element = this.finishNode(chainNode, \"ChainExpression\");\n        }\n        return element\n      }\n\n      base = element;\n    }\n  };\n\n  pp$5.parseSubscript = function(base, startPos, startLoc, noCalls, maybeAsyncArrow, optionalChained, forInit) {\n    var optionalSupported = this.options.ecmaVersion >= 11;\n    var optional = optionalSupported && this.eat(types$1.questionDot);\n    if (noCalls && optional) { this.raise(this.lastTokStart, \"Optional chaining cannot appear in the callee of new expressions\"); }\n\n    var computed = this.eat(types$1.bracketL);\n    if (computed || (optional && this.type !== types$1.parenL && this.type !== types$1.backQuote) || this.eat(types$1.dot)) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.object = base;\n      if (computed) {\n        node.property = this.parseExpression();\n        this.expect(types$1.bracketR);\n      } else if (this.type === types$1.privateId && base.type !== \"Super\") {\n        node.property = this.parsePrivateIdent();\n      } else {\n        node.property = this.parseIdent(this.options.allowReserved !== \"never\");\n      }\n      node.computed = !!computed;\n      if (optionalSupported) {\n        node.optional = optional;\n      }\n      base = this.finishNode(node, \"MemberExpression\");\n    } else if (!noCalls && this.eat(types$1.parenL)) {\n      var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n      this.yieldPos = 0;\n      this.awaitPos = 0;\n      this.awaitIdentPos = 0;\n      var exprList = this.parseExprList(types$1.parenR, this.options.ecmaVersion >= 8, false, refDestructuringErrors);\n      if (maybeAsyncArrow && !optional && !this.canInsertSemicolon() && this.eat(types$1.arrow)) {\n        this.checkPatternErrors(refDestructuringErrors, false);\n        this.checkYieldAwaitInDefaultParams();\n        if (this.awaitIdentPos > 0)\n          { this.raise(this.awaitIdentPos, \"Cannot use 'await' as identifier inside an async function\"); }\n        this.yieldPos = oldYieldPos;\n        this.awaitPos = oldAwaitPos;\n        this.awaitIdentPos = oldAwaitIdentPos;\n        return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList, true, forInit)\n      }\n      this.checkExpressionErrors(refDestructuringErrors, true);\n      this.yieldPos = oldYieldPos || this.yieldPos;\n      this.awaitPos = oldAwaitPos || this.awaitPos;\n      this.awaitIdentPos = oldAwaitIdentPos || this.awaitIdentPos;\n      var node$1 = this.startNodeAt(startPos, startLoc);\n      node$1.callee = base;\n      node$1.arguments = exprList;\n      if (optionalSupported) {\n        node$1.optional = optional;\n      }\n      base = this.finishNode(node$1, \"CallExpression\");\n    } else if (this.type === types$1.backQuote) {\n      if (optional || optionalChained) {\n        this.raise(this.start, \"Optional chaining cannot appear in the tag of tagged template expressions\");\n      }\n      var node$2 = this.startNodeAt(startPos, startLoc);\n      node$2.tag = base;\n      node$2.quasi = this.parseTemplate({isTagged: true});\n      base = this.finishNode(node$2, \"TaggedTemplateExpression\");\n    }\n    return base\n  };\n\n  // Parse an atomic expression — either a single token that is an\n  // expression, an expression started by a keyword like `function` or\n  // `new`, or an expression wrapped in punctuation like `()`, `[]`,\n  // or `{}`.\n\n  pp$5.parseExprAtom = function(refDestructuringErrors, forInit) {\n    // If a division operator appears in an expression position, the\n    // tokenizer got confused, and we force it to read a regexp instead.\n    if (this.type === types$1.slash) { this.readRegexp(); }\n\n    var node, canBeArrow = this.potentialArrowAt === this.start;\n    switch (this.type) {\n    case types$1._super:\n      if (!this.allowSuper)\n        { this.raise(this.start, \"'super' keyword outside a method\"); }\n      node = this.startNode();\n      this.next();\n      if (this.type === types$1.parenL && !this.allowDirectSuper)\n        { this.raise(node.start, \"super() call outside constructor of a subclass\"); }\n      // The `super` keyword can appear at below:\n      // SuperProperty:\n      //     super [ Expression ]\n      //     super . IdentifierName\n      // SuperCall:\n      //     super ( Arguments )\n      if (this.type !== types$1.dot && this.type !== types$1.bracketL && this.type !== types$1.parenL)\n        { this.unexpected(); }\n      return this.finishNode(node, \"Super\")\n\n    case types$1._this:\n      node = this.startNode();\n      this.next();\n      return this.finishNode(node, \"ThisExpression\")\n\n    case types$1.name:\n      var startPos = this.start, startLoc = this.startLoc, containsEsc = this.containsEsc;\n      var id = this.parseIdent(false);\n      if (this.options.ecmaVersion >= 8 && !containsEsc && id.name === \"async\" && !this.canInsertSemicolon() && this.eat(types$1._function)) {\n        this.overrideContext(types.f_expr);\n        return this.parseFunction(this.startNodeAt(startPos, startLoc), 0, false, true, forInit)\n      }\n      if (canBeArrow && !this.canInsertSemicolon()) {\n        if (this.eat(types$1.arrow))\n          { return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], false, forInit) }\n        if (this.options.ecmaVersion >= 8 && id.name === \"async\" && this.type === types$1.name && !containsEsc &&\n            (!this.potentialArrowInForAwait || this.value !== \"of\" || this.containsEsc)) {\n          id = this.parseIdent(false);\n          if (this.canInsertSemicolon() || !this.eat(types$1.arrow))\n            { this.unexpected(); }\n          return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], true, forInit)\n        }\n      }\n      return id\n\n    case types$1.regexp:\n      var value = this.value;\n      node = this.parseLiteral(value.value);\n      node.regex = {pattern: value.pattern, flags: value.flags};\n      return node\n\n    case types$1.num: case types$1.string:\n      return this.parseLiteral(this.value)\n\n    case types$1._null: case types$1._true: case types$1._false:\n      node = this.startNode();\n      node.value = this.type === types$1._null ? null : this.type === types$1._true;\n      node.raw = this.type.keyword;\n      this.next();\n      return this.finishNode(node, \"Literal\")\n\n    case types$1.parenL:\n      var start = this.start, expr = this.parseParenAndDistinguishExpression(canBeArrow, forInit);\n      if (refDestructuringErrors) {\n        if (refDestructuringErrors.parenthesizedAssign < 0 && !this.isSimpleAssignTarget(expr))\n          { refDestructuringErrors.parenthesizedAssign = start; }\n        if (refDestructuringErrors.parenthesizedBind < 0)\n          { refDestructuringErrors.parenthesizedBind = start; }\n      }\n      return expr\n\n    case types$1.bracketL:\n      node = this.startNode();\n      this.next();\n      node.elements = this.parseExprList(types$1.bracketR, true, true, refDestructuringErrors);\n      return this.finishNode(node, \"ArrayExpression\")\n\n    case types$1.braceL:\n      this.overrideContext(types.b_expr);\n      return this.parseObj(false, refDestructuringErrors)\n\n    case types$1._function:\n      node = this.startNode();\n      this.next();\n      return this.parseFunction(node, 0)\n\n    case types$1._class:\n      return this.parseClass(this.startNode(), false)\n\n    case types$1._new:\n      return this.parseNew()\n\n    case types$1.backQuote:\n      return this.parseTemplate()\n\n    case types$1._import:\n      if (this.options.ecmaVersion >= 11) {\n        return this.parseExprImport()\n      } else {\n        return this.unexpected()\n      }\n\n    default:\n      this.unexpected();\n    }\n  };\n\n  pp$5.parseExprImport = function() {\n    var node = this.startNode();\n\n    // Consume `import` as an identifier for `import.meta`.\n    // Because `this.parseIdent(true)` doesn't check escape sequences, it needs the check of `this.containsEsc`.\n    if (this.containsEsc) { this.raiseRecoverable(this.start, \"Escape sequence in keyword import\"); }\n    var meta = this.parseIdent(true);\n\n    switch (this.type) {\n    case types$1.parenL:\n      return this.parseDynamicImport(node)\n    case types$1.dot:\n      node.meta = meta;\n      return this.parseImportMeta(node)\n    default:\n      this.unexpected();\n    }\n  };\n\n  pp$5.parseDynamicImport = function(node) {\n    this.next(); // skip `(`\n\n    // Parse node.source.\n    node.source = this.parseMaybeAssign();\n\n    // Verify ending.\n    if (!this.eat(types$1.parenR)) {\n      var errorPos = this.start;\n      if (this.eat(types$1.comma) && this.eat(types$1.parenR)) {\n        this.raiseRecoverable(errorPos, \"Trailing comma is not allowed in import()\");\n      } else {\n        this.unexpected(errorPos);\n      }\n    }\n\n    return this.finishNode(node, \"ImportExpression\")\n  };\n\n  pp$5.parseImportMeta = function(node) {\n    this.next(); // skip `.`\n\n    var containsEsc = this.containsEsc;\n    node.property = this.parseIdent(true);\n\n    if (node.property.name !== \"meta\")\n      { this.raiseRecoverable(node.property.start, \"The only valid meta property for import is 'import.meta'\"); }\n    if (containsEsc)\n      { this.raiseRecoverable(node.start, \"'import.meta' must not contain escaped characters\"); }\n    if (this.options.sourceType !== \"module\" && !this.options.allowImportExportEverywhere)\n      { this.raiseRecoverable(node.start, \"Cannot use 'import.meta' outside a module\"); }\n\n    return this.finishNode(node, \"MetaProperty\")\n  };\n\n  pp$5.parseLiteral = function(value) {\n    var node = this.startNode();\n    node.value = value;\n    node.raw = this.input.slice(this.start, this.end);\n    if (node.raw.charCodeAt(node.raw.length - 1) === 110) { node.bigint = node.raw.slice(0, -1).replace(/_/g, \"\"); }\n    this.next();\n    return this.finishNode(node, \"Literal\")\n  };\n\n  pp$5.parseParenExpression = function() {\n    this.expect(types$1.parenL);\n    var val = this.parseExpression();\n    this.expect(types$1.parenR);\n    return val\n  };\n\n  pp$5.parseParenAndDistinguishExpression = function(canBeArrow, forInit) {\n    var startPos = this.start, startLoc = this.startLoc, val, allowTrailingComma = this.options.ecmaVersion >= 8;\n    if (this.options.ecmaVersion >= 6) {\n      this.next();\n\n      var innerStartPos = this.start, innerStartLoc = this.startLoc;\n      var exprList = [], first = true, lastIsComma = false;\n      var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, spreadStart;\n      this.yieldPos = 0;\n      this.awaitPos = 0;\n      // Do not save awaitIdentPos to allow checking awaits nested in parameters\n      while (this.type !== types$1.parenR) {\n        first ? first = false : this.expect(types$1.comma);\n        if (allowTrailingComma && this.afterTrailingComma(types$1.parenR, true)) {\n          lastIsComma = true;\n          break\n        } else if (this.type === types$1.ellipsis) {\n          spreadStart = this.start;\n          exprList.push(this.parseParenItem(this.parseRestBinding()));\n          if (this.type === types$1.comma) { this.raise(this.start, \"Comma is not permitted after the rest element\"); }\n          break\n        } else {\n          exprList.push(this.parseMaybeAssign(false, refDestructuringErrors, this.parseParenItem));\n        }\n      }\n      var innerEndPos = this.lastTokEnd, innerEndLoc = this.lastTokEndLoc;\n      this.expect(types$1.parenR);\n\n      if (canBeArrow && !this.canInsertSemicolon() && this.eat(types$1.arrow)) {\n        this.checkPatternErrors(refDestructuringErrors, false);\n        this.checkYieldAwaitInDefaultParams();\n        this.yieldPos = oldYieldPos;\n        this.awaitPos = oldAwaitPos;\n        return this.parseParenArrowList(startPos, startLoc, exprList, forInit)\n      }\n\n      if (!exprList.length || lastIsComma) { this.unexpected(this.lastTokStart); }\n      if (spreadStart) { this.unexpected(spreadStart); }\n      this.checkExpressionErrors(refDestructuringErrors, true);\n      this.yieldPos = oldYieldPos || this.yieldPos;\n      this.awaitPos = oldAwaitPos || this.awaitPos;\n\n      if (exprList.length > 1) {\n        val = this.startNodeAt(innerStartPos, innerStartLoc);\n        val.expressions = exprList;\n        this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n      } else {\n        val = exprList[0];\n      }\n    } else {\n      val = this.parseParenExpression();\n    }\n\n    if (this.options.preserveParens) {\n      var par = this.startNodeAt(startPos, startLoc);\n      par.expression = val;\n      return this.finishNode(par, \"ParenthesizedExpression\")\n    } else {\n      return val\n    }\n  };\n\n  pp$5.parseParenItem = function(item) {\n    return item\n  };\n\n  pp$5.parseParenArrowList = function(startPos, startLoc, exprList, forInit) {\n    return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList, false, forInit)\n  };\n\n  // New's precedence is slightly tricky. It must allow its argument to\n  // be a `[]` or dot subscript expression, but not a call — at least,\n  // not without wrapping it in parentheses. Thus, it uses the noCalls\n  // argument to parseSubscripts to prevent it from consuming the\n  // argument list.\n\n  var empty = [];\n\n  pp$5.parseNew = function() {\n    if (this.containsEsc) { this.raiseRecoverable(this.start, \"Escape sequence in keyword new\"); }\n    var node = this.startNode();\n    var meta = this.parseIdent(true);\n    if (this.options.ecmaVersion >= 6 && this.eat(types$1.dot)) {\n      node.meta = meta;\n      var containsEsc = this.containsEsc;\n      node.property = this.parseIdent(true);\n      if (node.property.name !== \"target\")\n        { this.raiseRecoverable(node.property.start, \"The only valid meta property for new is 'new.target'\"); }\n      if (containsEsc)\n        { this.raiseRecoverable(node.start, \"'new.target' must not contain escaped characters\"); }\n      if (!this.allowNewDotTarget)\n        { this.raiseRecoverable(node.start, \"'new.target' can only be used in functions and class static block\"); }\n      return this.finishNode(node, \"MetaProperty\")\n    }\n    var startPos = this.start, startLoc = this.startLoc, isImport = this.type === types$1._import;\n    node.callee = this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true, false);\n    if (isImport && node.callee.type === \"ImportExpression\") {\n      this.raise(startPos, \"Cannot use new with import()\");\n    }\n    if (this.eat(types$1.parenL)) { node.arguments = this.parseExprList(types$1.parenR, this.options.ecmaVersion >= 8, false); }\n    else { node.arguments = empty; }\n    return this.finishNode(node, \"NewExpression\")\n  };\n\n  // Parse template expression.\n\n  pp$5.parseTemplateElement = function(ref) {\n    var isTagged = ref.isTagged;\n\n    var elem = this.startNode();\n    if (this.type === types$1.invalidTemplate) {\n      if (!isTagged) {\n        this.raiseRecoverable(this.start, \"Bad escape sequence in untagged template literal\");\n      }\n      elem.value = {\n        raw: this.value,\n        cooked: null\n      };\n    } else {\n      elem.value = {\n        raw: this.input.slice(this.start, this.end).replace(/\\r\\n?/g, \"\\n\"),\n        cooked: this.value\n      };\n    }\n    this.next();\n    elem.tail = this.type === types$1.backQuote;\n    return this.finishNode(elem, \"TemplateElement\")\n  };\n\n  pp$5.parseTemplate = function(ref) {\n    if ( ref === void 0 ) ref = {};\n    var isTagged = ref.isTagged; if ( isTagged === void 0 ) isTagged = false;\n\n    var node = this.startNode();\n    this.next();\n    node.expressions = [];\n    var curElt = this.parseTemplateElement({isTagged: isTagged});\n    node.quasis = [curElt];\n    while (!curElt.tail) {\n      if (this.type === types$1.eof) { this.raise(this.pos, \"Unterminated template literal\"); }\n      this.expect(types$1.dollarBraceL);\n      node.expressions.push(this.parseExpression());\n      this.expect(types$1.braceR);\n      node.quasis.push(curElt = this.parseTemplateElement({isTagged: isTagged}));\n    }\n    this.next();\n    return this.finishNode(node, \"TemplateLiteral\")\n  };\n\n  pp$5.isAsyncProp = function(prop) {\n    return !prop.computed && prop.key.type === \"Identifier\" && prop.key.name === \"async\" &&\n      (this.type === types$1.name || this.type === types$1.num || this.type === types$1.string || this.type === types$1.bracketL || this.type.keyword || (this.options.ecmaVersion >= 9 && this.type === types$1.star)) &&\n      !lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n  };\n\n  // Parse an object literal or binding pattern.\n\n  pp$5.parseObj = function(isPattern, refDestructuringErrors) {\n    var node = this.startNode(), first = true, propHash = {};\n    node.properties = [];\n    this.next();\n    while (!this.eat(types$1.braceR)) {\n      if (!first) {\n        this.expect(types$1.comma);\n        if (this.options.ecmaVersion >= 5 && this.afterTrailingComma(types$1.braceR)) { break }\n      } else { first = false; }\n\n      var prop = this.parseProperty(isPattern, refDestructuringErrors);\n      if (!isPattern) { this.checkPropClash(prop, propHash, refDestructuringErrors); }\n      node.properties.push(prop);\n    }\n    return this.finishNode(node, isPattern ? \"ObjectPattern\" : \"ObjectExpression\")\n  };\n\n  pp$5.parseProperty = function(isPattern, refDestructuringErrors) {\n    var prop = this.startNode(), isGenerator, isAsync, startPos, startLoc;\n    if (this.options.ecmaVersion >= 9 && this.eat(types$1.ellipsis)) {\n      if (isPattern) {\n        prop.argument = this.parseIdent(false);\n        if (this.type === types$1.comma) {\n          this.raise(this.start, \"Comma is not permitted after the rest element\");\n        }\n        return this.finishNode(prop, \"RestElement\")\n      }\n      // Parse argument.\n      prop.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n      // To disallow trailing comma via `this.toAssignable()`.\n      if (this.type === types$1.comma && refDestructuringErrors && refDestructuringErrors.trailingComma < 0) {\n        refDestructuringErrors.trailingComma = this.start;\n      }\n      // Finish\n      return this.finishNode(prop, \"SpreadElement\")\n    }\n    if (this.options.ecmaVersion >= 6) {\n      prop.method = false;\n      prop.shorthand = false;\n      if (isPattern || refDestructuringErrors) {\n        startPos = this.start;\n        startLoc = this.startLoc;\n      }\n      if (!isPattern)\n        { isGenerator = this.eat(types$1.star); }\n    }\n    var containsEsc = this.containsEsc;\n    this.parsePropertyName(prop);\n    if (!isPattern && !containsEsc && this.options.ecmaVersion >= 8 && !isGenerator && this.isAsyncProp(prop)) {\n      isAsync = true;\n      isGenerator = this.options.ecmaVersion >= 9 && this.eat(types$1.star);\n      this.parsePropertyName(prop);\n    } else {\n      isAsync = false;\n    }\n    this.parsePropertyValue(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc);\n    return this.finishNode(prop, \"Property\")\n  };\n\n  pp$5.parsePropertyValue = function(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc) {\n    if ((isGenerator || isAsync) && this.type === types$1.colon)\n      { this.unexpected(); }\n\n    if (this.eat(types$1.colon)) {\n      prop.value = isPattern ? this.parseMaybeDefault(this.start, this.startLoc) : this.parseMaybeAssign(false, refDestructuringErrors);\n      prop.kind = \"init\";\n    } else if (this.options.ecmaVersion >= 6 && this.type === types$1.parenL) {\n      if (isPattern) { this.unexpected(); }\n      prop.kind = \"init\";\n      prop.method = true;\n      prop.value = this.parseMethod(isGenerator, isAsync);\n    } else if (!isPattern && !containsEsc &&\n               this.options.ecmaVersion >= 5 && !prop.computed && prop.key.type === \"Identifier\" &&\n               (prop.key.name === \"get\" || prop.key.name === \"set\") &&\n               (this.type !== types$1.comma && this.type !== types$1.braceR && this.type !== types$1.eq)) {\n      if (isGenerator || isAsync) { this.unexpected(); }\n      prop.kind = prop.key.name;\n      this.parsePropertyName(prop);\n      prop.value = this.parseMethod(false);\n      var paramCount = prop.kind === \"get\" ? 0 : 1;\n      if (prop.value.params.length !== paramCount) {\n        var start = prop.value.start;\n        if (prop.kind === \"get\")\n          { this.raiseRecoverable(start, \"getter should have no params\"); }\n        else\n          { this.raiseRecoverable(start, \"setter should have exactly one param\"); }\n      } else {\n        if (prop.kind === \"set\" && prop.value.params[0].type === \"RestElement\")\n          { this.raiseRecoverable(prop.value.params[0].start, \"Setter cannot use rest params\"); }\n      }\n    } else if (this.options.ecmaVersion >= 6 && !prop.computed && prop.key.type === \"Identifier\") {\n      if (isGenerator || isAsync) { this.unexpected(); }\n      this.checkUnreserved(prop.key);\n      if (prop.key.name === \"await\" && !this.awaitIdentPos)\n        { this.awaitIdentPos = startPos; }\n      prop.kind = \"init\";\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(startPos, startLoc, this.copyNode(prop.key));\n      } else if (this.type === types$1.eq && refDestructuringErrors) {\n        if (refDestructuringErrors.shorthandAssign < 0)\n          { refDestructuringErrors.shorthandAssign = this.start; }\n        prop.value = this.parseMaybeDefault(startPos, startLoc, this.copyNode(prop.key));\n      } else {\n        prop.value = this.copyNode(prop.key);\n      }\n      prop.shorthand = true;\n    } else { this.unexpected(); }\n  };\n\n  pp$5.parsePropertyName = function(prop) {\n    if (this.options.ecmaVersion >= 6) {\n      if (this.eat(types$1.bracketL)) {\n        prop.computed = true;\n        prop.key = this.parseMaybeAssign();\n        this.expect(types$1.bracketR);\n        return prop.key\n      } else {\n        prop.computed = false;\n      }\n    }\n    return prop.key = this.type === types$1.num || this.type === types$1.string ? this.parseExprAtom() : this.parseIdent(this.options.allowReserved !== \"never\")\n  };\n\n  // Initialize empty function node.\n\n  pp$5.initFunction = function(node) {\n    node.id = null;\n    if (this.options.ecmaVersion >= 6) { node.generator = node.expression = false; }\n    if (this.options.ecmaVersion >= 8) { node.async = false; }\n  };\n\n  // Parse object or class method.\n\n  pp$5.parseMethod = function(isGenerator, isAsync, allowDirectSuper) {\n    var node = this.startNode(), oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n\n    this.initFunction(node);\n    if (this.options.ecmaVersion >= 6)\n      { node.generator = isGenerator; }\n    if (this.options.ecmaVersion >= 8)\n      { node.async = !!isAsync; }\n\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    this.awaitIdentPos = 0;\n    this.enterScope(functionFlags(isAsync, node.generator) | SCOPE_SUPER | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));\n\n    this.expect(types$1.parenL);\n    node.params = this.parseBindingList(types$1.parenR, false, this.options.ecmaVersion >= 8);\n    this.checkYieldAwaitInDefaultParams();\n    this.parseFunctionBody(node, false, true, false);\n\n    this.yieldPos = oldYieldPos;\n    this.awaitPos = oldAwaitPos;\n    this.awaitIdentPos = oldAwaitIdentPos;\n    return this.finishNode(node, \"FunctionExpression\")\n  };\n\n  // Parse arrow function expression with given parameters.\n\n  pp$5.parseArrowExpression = function(node, params, isAsync, forInit) {\n    var oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n\n    this.enterScope(functionFlags(isAsync, false) | SCOPE_ARROW);\n    this.initFunction(node);\n    if (this.options.ecmaVersion >= 8) { node.async = !!isAsync; }\n\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    this.awaitIdentPos = 0;\n\n    node.params = this.toAssignableList(params, true);\n    this.parseFunctionBody(node, true, false, forInit);\n\n    this.yieldPos = oldYieldPos;\n    this.awaitPos = oldAwaitPos;\n    this.awaitIdentPos = oldAwaitIdentPos;\n    return this.finishNode(node, \"ArrowFunctionExpression\")\n  };\n\n  // Parse function body and check parameters.\n\n  pp$5.parseFunctionBody = function(node, isArrowFunction, isMethod, forInit) {\n    var isExpression = isArrowFunction && this.type !== types$1.braceL;\n    var oldStrict = this.strict, useStrict = false;\n\n    if (isExpression) {\n      node.body = this.parseMaybeAssign(forInit);\n      node.expression = true;\n      this.checkParams(node, false);\n    } else {\n      var nonSimple = this.options.ecmaVersion >= 7 && !this.isSimpleParamList(node.params);\n      if (!oldStrict || nonSimple) {\n        useStrict = this.strictDirective(this.end);\n        // If this is a strict mode function, verify that argument names\n        // are not repeated, and it does not try to bind the words `eval`\n        // or `arguments`.\n        if (useStrict && nonSimple)\n          { this.raiseRecoverable(node.start, \"Illegal 'use strict' directive in function with non-simple parameter list\"); }\n      }\n      // Start a new scope with regard to labels and the `inFunction`\n      // flag (restore them to their old value afterwards).\n      var oldLabels = this.labels;\n      this.labels = [];\n      if (useStrict) { this.strict = true; }\n\n      // Add the params to varDeclaredNames to ensure that an error is thrown\n      // if a let/const declaration in the function clashes with one of the params.\n      this.checkParams(node, !oldStrict && !useStrict && !isArrowFunction && !isMethod && this.isSimpleParamList(node.params));\n      // Ensure the function name isn't a forbidden identifier in strict mode, e.g. 'eval'\n      if (this.strict && node.id) { this.checkLValSimple(node.id, BIND_OUTSIDE); }\n      node.body = this.parseBlock(false, undefined, useStrict && !oldStrict);\n      node.expression = false;\n      this.adaptDirectivePrologue(node.body.body);\n      this.labels = oldLabels;\n    }\n    this.exitScope();\n  };\n\n  pp$5.isSimpleParamList = function(params) {\n    for (var i = 0, list = params; i < list.length; i += 1)\n      {\n      var param = list[i];\n\n      if (param.type !== \"Identifier\") { return false\n    } }\n    return true\n  };\n\n  // Checks function params for various disallowed patterns such as using \"eval\"\n  // or \"arguments\" and duplicate parameters.\n\n  pp$5.checkParams = function(node, allowDuplicates) {\n    var nameHash = Object.create(null);\n    for (var i = 0, list = node.params; i < list.length; i += 1)\n      {\n      var param = list[i];\n\n      this.checkLValInnerPattern(param, BIND_VAR, allowDuplicates ? null : nameHash);\n    }\n  };\n\n  // Parses a comma-separated list of expressions, and returns them as\n  // an array. `close` is the token type that ends the list, and\n  // `allowEmpty` can be turned on to allow subsequent commas with\n  // nothing in between them to be parsed as `null` (which is needed\n  // for array literals).\n\n  pp$5.parseExprList = function(close, allowTrailingComma, allowEmpty, refDestructuringErrors) {\n    var elts = [], first = true;\n    while (!this.eat(close)) {\n      if (!first) {\n        this.expect(types$1.comma);\n        if (allowTrailingComma && this.afterTrailingComma(close)) { break }\n      } else { first = false; }\n\n      var elt = (void 0);\n      if (allowEmpty && this.type === types$1.comma)\n        { elt = null; }\n      else if (this.type === types$1.ellipsis) {\n        elt = this.parseSpread(refDestructuringErrors);\n        if (refDestructuringErrors && this.type === types$1.comma && refDestructuringErrors.trailingComma < 0)\n          { refDestructuringErrors.trailingComma = this.start; }\n      } else {\n        elt = this.parseMaybeAssign(false, refDestructuringErrors);\n      }\n      elts.push(elt);\n    }\n    return elts\n  };\n\n  pp$5.checkUnreserved = function(ref) {\n    var start = ref.start;\n    var end = ref.end;\n    var name = ref.name;\n\n    if (this.inGenerator && name === \"yield\")\n      { this.raiseRecoverable(start, \"Cannot use 'yield' as identifier inside a generator\"); }\n    if (this.inAsync && name === \"await\")\n      { this.raiseRecoverable(start, \"Cannot use 'await' as identifier inside an async function\"); }\n    if (this.currentThisScope().inClassFieldInit && name === \"arguments\")\n      { this.raiseRecoverable(start, \"Cannot use 'arguments' in class field initializer\"); }\n    if (this.inClassStaticBlock && (name === \"arguments\" || name === \"await\"))\n      { this.raise(start, (\"Cannot use \" + name + \" in class static initialization block\")); }\n    if (this.keywords.test(name))\n      { this.raise(start, (\"Unexpected keyword '\" + name + \"'\")); }\n    if (this.options.ecmaVersion < 6 &&\n      this.input.slice(start, end).indexOf(\"\\\\\") !== -1) { return }\n    var re = this.strict ? this.reservedWordsStrict : this.reservedWords;\n    if (re.test(name)) {\n      if (!this.inAsync && name === \"await\")\n        { this.raiseRecoverable(start, \"Cannot use keyword 'await' outside an async function\"); }\n      this.raiseRecoverable(start, (\"The keyword '\" + name + \"' is reserved\"));\n    }\n  };\n\n  // Parse the next token as an identifier. If `liberal` is true (used\n  // when parsing properties), it will also convert keywords into\n  // identifiers.\n\n  pp$5.parseIdent = function(liberal) {\n    var node = this.startNode();\n    if (this.type === types$1.name) {\n      node.name = this.value;\n    } else if (this.type.keyword) {\n      node.name = this.type.keyword;\n\n      // To fix https://github.com/acornjs/acorn/issues/575\n      // `class` and `function` keywords push new context into this.context.\n      // But there is no chance to pop the context if the keyword is consumed as an identifier such as a property name.\n      // If the previous token is a dot, this does not apply because the context-managing code already ignored the keyword\n      if ((node.name === \"class\" || node.name === \"function\") &&\n          (this.lastTokEnd !== this.lastTokStart + 1 || this.input.charCodeAt(this.lastTokStart) !== 46)) {\n        this.context.pop();\n      }\n    } else {\n      this.unexpected();\n    }\n    this.next(!!liberal);\n    this.finishNode(node, \"Identifier\");\n    if (!liberal) {\n      this.checkUnreserved(node);\n      if (node.name === \"await\" && !this.awaitIdentPos)\n        { this.awaitIdentPos = node.start; }\n    }\n    return node\n  };\n\n  pp$5.parsePrivateIdent = function() {\n    var node = this.startNode();\n    if (this.type === types$1.privateId) {\n      node.name = this.value;\n    } else {\n      this.unexpected();\n    }\n    this.next();\n    this.finishNode(node, \"PrivateIdentifier\");\n\n    // For validating existence\n    if (this.privateNameStack.length === 0) {\n      this.raise(node.start, (\"Private field '#\" + (node.name) + \"' must be declared in an enclosing class\"));\n    } else {\n      this.privateNameStack[this.privateNameStack.length - 1].used.push(node);\n    }\n\n    return node\n  };\n\n  // Parses yield expression inside generator.\n\n  pp$5.parseYield = function(forInit) {\n    if (!this.yieldPos) { this.yieldPos = this.start; }\n\n    var node = this.startNode();\n    this.next();\n    if (this.type === types$1.semi || this.canInsertSemicolon() || (this.type !== types$1.star && !this.type.startsExpr)) {\n      node.delegate = false;\n      node.argument = null;\n    } else {\n      node.delegate = this.eat(types$1.star);\n      node.argument = this.parseMaybeAssign(forInit);\n    }\n    return this.finishNode(node, \"YieldExpression\")\n  };\n\n  pp$5.parseAwait = function(forInit) {\n    if (!this.awaitPos) { this.awaitPos = this.start; }\n\n    var node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeUnary(null, true, false, forInit);\n    return this.finishNode(node, \"AwaitExpression\")\n  };\n\n  var pp$4 = Parser.prototype;\n\n  // This function is used to raise exceptions on parse errors. It\n  // takes an offset integer (into the current `input`) to indicate\n  // the location of the error, attaches the position to the end\n  // of the error message, and then raises a `SyntaxError` with that\n  // message.\n\n  pp$4.raise = function(pos, message) {\n    var loc = getLineInfo(this.input, pos);\n    message += \" (\" + loc.line + \":\" + loc.column + \")\";\n    var err = new SyntaxError(message);\n    err.pos = pos; err.loc = loc; err.raisedAt = this.pos;\n    throw err\n  };\n\n  pp$4.raiseRecoverable = pp$4.raise;\n\n  pp$4.curPosition = function() {\n    if (this.options.locations) {\n      return new Position(this.curLine, this.pos - this.lineStart)\n    }\n  };\n\n  var pp$3 = Parser.prototype;\n\n  var Scope = function Scope(flags) {\n    this.flags = flags;\n    // A list of var-declared names in the current lexical scope\n    this.var = [];\n    // A list of lexically-declared names in the current lexical scope\n    this.lexical = [];\n    // A list of lexically-declared FunctionDeclaration names in the current lexical scope\n    this.functions = [];\n    // A switch to disallow the identifier reference 'arguments'\n    this.inClassFieldInit = false;\n  };\n\n  // The functions in this module keep track of declared variables in the current scope in order to detect duplicate variable names.\n\n  pp$3.enterScope = function(flags) {\n    this.scopeStack.push(new Scope(flags));\n  };\n\n  pp$3.exitScope = function() {\n    this.scopeStack.pop();\n  };\n\n  // The spec says:\n  // > At the top level of a function, or script, function declarations are\n  // > treated like var declarations rather than like lexical declarations.\n  pp$3.treatFunctionsAsVarInScope = function(scope) {\n    return (scope.flags & SCOPE_FUNCTION) || !this.inModule && (scope.flags & SCOPE_TOP)\n  };\n\n  pp$3.declareName = function(name, bindingType, pos) {\n    var redeclared = false;\n    if (bindingType === BIND_LEXICAL) {\n      var scope = this.currentScope();\n      redeclared = scope.lexical.indexOf(name) > -1 || scope.functions.indexOf(name) > -1 || scope.var.indexOf(name) > -1;\n      scope.lexical.push(name);\n      if (this.inModule && (scope.flags & SCOPE_TOP))\n        { delete this.undefinedExports[name]; }\n    } else if (bindingType === BIND_SIMPLE_CATCH) {\n      var scope$1 = this.currentScope();\n      scope$1.lexical.push(name);\n    } else if (bindingType === BIND_FUNCTION) {\n      var scope$2 = this.currentScope();\n      if (this.treatFunctionsAsVar)\n        { redeclared = scope$2.lexical.indexOf(name) > -1; }\n      else\n        { redeclared = scope$2.lexical.indexOf(name) > -1 || scope$2.var.indexOf(name) > -1; }\n      scope$2.functions.push(name);\n    } else {\n      for (var i = this.scopeStack.length - 1; i >= 0; --i) {\n        var scope$3 = this.scopeStack[i];\n        if (scope$3.lexical.indexOf(name) > -1 && !((scope$3.flags & SCOPE_SIMPLE_CATCH) && scope$3.lexical[0] === name) ||\n            !this.treatFunctionsAsVarInScope(scope$3) && scope$3.functions.indexOf(name) > -1) {\n          redeclared = true;\n          break\n        }\n        scope$3.var.push(name);\n        if (this.inModule && (scope$3.flags & SCOPE_TOP))\n          { delete this.undefinedExports[name]; }\n        if (scope$3.flags & SCOPE_VAR) { break }\n      }\n    }\n    if (redeclared) { this.raiseRecoverable(pos, (\"Identifier '\" + name + \"' has already been declared\")); }\n  };\n\n  pp$3.checkLocalExport = function(id) {\n    // scope.functions must be empty as Module code is always strict.\n    if (this.scopeStack[0].lexical.indexOf(id.name) === -1 &&\n        this.scopeStack[0].var.indexOf(id.name) === -1) {\n      this.undefinedExports[id.name] = id;\n    }\n  };\n\n  pp$3.currentScope = function() {\n    return this.scopeStack[this.scopeStack.length - 1]\n  };\n\n  pp$3.currentVarScope = function() {\n    for (var i = this.scopeStack.length - 1;; i--) {\n      var scope = this.scopeStack[i];\n      if (scope.flags & SCOPE_VAR) { return scope }\n    }\n  };\n\n  // Could be useful for `this`, `new.target`, `super()`, `super.property`, and `super[property]`.\n  pp$3.currentThisScope = function() {\n    for (var i = this.scopeStack.length - 1;; i--) {\n      var scope = this.scopeStack[i];\n      if (scope.flags & SCOPE_VAR && !(scope.flags & SCOPE_ARROW)) { return scope }\n    }\n  };\n\n  var Node = function Node(parser, pos, loc) {\n    this.type = \"\";\n    this.start = pos;\n    this.end = 0;\n    if (parser.options.locations)\n      { this.loc = new SourceLocation(parser, loc); }\n    if (parser.options.directSourceFile)\n      { this.sourceFile = parser.options.directSourceFile; }\n    if (parser.options.ranges)\n      { this.range = [pos, 0]; }\n  };\n\n  // Start an AST node, attaching a start offset.\n\n  var pp$2 = Parser.prototype;\n\n  pp$2.startNode = function() {\n    return new Node(this, this.start, this.startLoc)\n  };\n\n  pp$2.startNodeAt = function(pos, loc) {\n    return new Node(this, pos, loc)\n  };\n\n  // Finish an AST node, adding `type` and `end` properties.\n\n  function finishNodeAt(node, type, pos, loc) {\n    node.type = type;\n    node.end = pos;\n    if (this.options.locations)\n      { node.loc.end = loc; }\n    if (this.options.ranges)\n      { node.range[1] = pos; }\n    return node\n  }\n\n  pp$2.finishNode = function(node, type) {\n    return finishNodeAt.call(this, node, type, this.lastTokEnd, this.lastTokEndLoc)\n  };\n\n  // Finish node at given position\n\n  pp$2.finishNodeAt = function(node, type, pos, loc) {\n    return finishNodeAt.call(this, node, type, pos, loc)\n  };\n\n  pp$2.copyNode = function(node) {\n    var newNode = new Node(this, node.start, this.startLoc);\n    for (var prop in node) { newNode[prop] = node[prop]; }\n    return newNode\n  };\n\n  // This file contains Unicode properties extracted from the ECMAScript specification.\n  // The lists are extracted like so:\n  // $$('#table-binary-unicode-properties > figure > table > tbody > tr > td:nth-child(1) code').map(el => el.innerText)\n\n  // #table-binary-unicode-properties\n  var ecma9BinaryProperties = \"ASCII ASCII_Hex_Digit AHex Alphabetic Alpha Any Assigned Bidi_Control Bidi_C Bidi_Mirrored Bidi_M Case_Ignorable CI Cased Changes_When_Casefolded CWCF Changes_When_Casemapped CWCM Changes_When_Lowercased CWL Changes_When_NFKC_Casefolded CWKCF Changes_When_Titlecased CWT Changes_When_Uppercased CWU Dash Default_Ignorable_Code_Point DI Deprecated Dep Diacritic Dia Emoji Emoji_Component Emoji_Modifier Emoji_Modifier_Base Emoji_Presentation Extender Ext Grapheme_Base Gr_Base Grapheme_Extend Gr_Ext Hex_Digit Hex IDS_Binary_Operator IDSB IDS_Trinary_Operator IDST ID_Continue IDC ID_Start IDS Ideographic Ideo Join_Control Join_C Logical_Order_Exception LOE Lowercase Lower Math Noncharacter_Code_Point NChar Pattern_Syntax Pat_Syn Pattern_White_Space Pat_WS Quotation_Mark QMark Radical Regional_Indicator RI Sentence_Terminal STerm Soft_Dotted SD Terminal_Punctuation Term Unified_Ideograph UIdeo Uppercase Upper Variation_Selector VS White_Space space XID_Continue XIDC XID_Start XIDS\";\n  var ecma10BinaryProperties = ecma9BinaryProperties + \" Extended_Pictographic\";\n  var ecma11BinaryProperties = ecma10BinaryProperties;\n  var ecma12BinaryProperties = ecma11BinaryProperties + \" EBase EComp EMod EPres ExtPict\";\n  var ecma13BinaryProperties = ecma12BinaryProperties;\n  var ecma14BinaryProperties = ecma13BinaryProperties;\n\n  var unicodeBinaryProperties = {\n    9: ecma9BinaryProperties,\n    10: ecma10BinaryProperties,\n    11: ecma11BinaryProperties,\n    12: ecma12BinaryProperties,\n    13: ecma13BinaryProperties,\n    14: ecma14BinaryProperties\n  };\n\n  // #table-unicode-general-category-values\n  var unicodeGeneralCategoryValues = \"Cased_Letter LC Close_Punctuation Pe Connector_Punctuation Pc Control Cc cntrl Currency_Symbol Sc Dash_Punctuation Pd Decimal_Number Nd digit Enclosing_Mark Me Final_Punctuation Pf Format Cf Initial_Punctuation Pi Letter L Letter_Number Nl Line_Separator Zl Lowercase_Letter Ll Mark M Combining_Mark Math_Symbol Sm Modifier_Letter Lm Modifier_Symbol Sk Nonspacing_Mark Mn Number N Open_Punctuation Ps Other C Other_Letter Lo Other_Number No Other_Punctuation Po Other_Symbol So Paragraph_Separator Zp Private_Use Co Punctuation P punct Separator Z Space_Separator Zs Spacing_Mark Mc Surrogate Cs Symbol S Titlecase_Letter Lt Unassigned Cn Uppercase_Letter Lu\";\n\n  // #table-unicode-script-values\n  var ecma9ScriptValues = \"Adlam Adlm Ahom Anatolian_Hieroglyphs Hluw Arabic Arab Armenian Armn Avestan Avst Balinese Bali Bamum Bamu Bassa_Vah Bass Batak Batk Bengali Beng Bhaiksuki Bhks Bopomofo Bopo Brahmi Brah Braille Brai Buginese Bugi Buhid Buhd Canadian_Aboriginal Cans Carian Cari Caucasian_Albanian Aghb Chakma Cakm Cham Cham Cherokee Cher Common Zyyy Coptic Copt Qaac Cuneiform Xsux Cypriot Cprt Cyrillic Cyrl Deseret Dsrt Devanagari Deva Duployan Dupl Egyptian_Hieroglyphs Egyp Elbasan Elba Ethiopic Ethi Georgian Geor Glagolitic Glag Gothic Goth Grantha Gran Greek Grek Gujarati Gujr Gurmukhi Guru Han Hani Hangul Hang Hanunoo Hano Hatran Hatr Hebrew Hebr Hiragana Hira Imperial_Aramaic Armi Inherited Zinh Qaai Inscriptional_Pahlavi Phli Inscriptional_Parthian Prti Javanese Java Kaithi Kthi Kannada Knda Katakana Kana Kayah_Li Kali Kharoshthi Khar Khmer Khmr Khojki Khoj Khudawadi Sind Lao Laoo Latin Latn Lepcha Lepc Limbu Limb Linear_A Lina Linear_B Linb Lisu Lisu Lycian Lyci Lydian Lydi Mahajani Mahj Malayalam Mlym Mandaic Mand Manichaean Mani Marchen Marc Masaram_Gondi Gonm Meetei_Mayek Mtei Mende_Kikakui Mend Meroitic_Cursive Merc Meroitic_Hieroglyphs Mero Miao Plrd Modi Mongolian Mong Mro Mroo Multani Mult Myanmar Mymr Nabataean Nbat New_Tai_Lue Talu Newa Newa Nko Nkoo Nushu Nshu Ogham Ogam Ol_Chiki Olck Old_Hungarian Hung Old_Italic Ital Old_North_Arabian Narb Old_Permic Perm Old_Persian Xpeo Old_South_Arabian Sarb Old_Turkic Orkh Oriya Orya Osage Osge Osmanya Osma Pahawh_Hmong Hmng Palmyrene Palm Pau_Cin_Hau Pauc Phags_Pa Phag Phoenician Phnx Psalter_Pahlavi Phlp Rejang Rjng Runic Runr Samaritan Samr Saurashtra Saur Sharada Shrd Shavian Shaw Siddham Sidd SignWriting Sgnw Sinhala Sinh Sora_Sompeng Sora Soyombo Soyo Sundanese Sund Syloti_Nagri Sylo Syriac Syrc Tagalog Tglg Tagbanwa Tagb Tai_Le Tale Tai_Tham Lana Tai_Viet Tavt Takri Takr Tamil Taml Tangut Tang Telugu Telu Thaana Thaa Thai Thai Tibetan Tibt Tifinagh Tfng Tirhuta Tirh Ugaritic Ugar Vai Vaii Warang_Citi Wara Yi Yiii Zanabazar_Square Zanb\";\n  var ecma10ScriptValues = ecma9ScriptValues + \" Dogra Dogr Gunjala_Gondi Gong Hanifi_Rohingya Rohg Makasar Maka Medefaidrin Medf Old_Sogdian Sogo Sogdian Sogd\";\n  var ecma11ScriptValues = ecma10ScriptValues + \" Elymaic Elym Nandinagari Nand Nyiakeng_Puachue_Hmong Hmnp Wancho Wcho\";\n  var ecma12ScriptValues = ecma11ScriptValues + \" Chorasmian Chrs Diak Dives_Akuru Khitan_Small_Script Kits Yezi Yezidi\";\n  var ecma13ScriptValues = ecma12ScriptValues + \" Cypro_Minoan Cpmn Old_Uyghur Ougr Tangsa Tnsa Toto Vithkuqi Vith\";\n  var ecma14ScriptValues = ecma13ScriptValues + \" Kawi Nag_Mundari Nagm\";\n\n  var unicodeScriptValues = {\n    9: ecma9ScriptValues,\n    10: ecma10ScriptValues,\n    11: ecma11ScriptValues,\n    12: ecma12ScriptValues,\n    13: ecma13ScriptValues,\n    14: ecma14ScriptValues\n  };\n\n  var data = {};\n  function buildUnicodeData(ecmaVersion) {\n    var d = data[ecmaVersion] = {\n      binary: wordsRegexp(unicodeBinaryProperties[ecmaVersion] + \" \" + unicodeGeneralCategoryValues),\n      nonBinary: {\n        General_Category: wordsRegexp(unicodeGeneralCategoryValues),\n        Script: wordsRegexp(unicodeScriptValues[ecmaVersion])\n      }\n    };\n    d.nonBinary.Script_Extensions = d.nonBinary.Script;\n\n    d.nonBinary.gc = d.nonBinary.General_Category;\n    d.nonBinary.sc = d.nonBinary.Script;\n    d.nonBinary.scx = d.nonBinary.Script_Extensions;\n  }\n\n  for (var i = 0, list = [9, 10, 11, 12, 13, 14]; i < list.length; i += 1) {\n    var ecmaVersion = list[i];\n\n    buildUnicodeData(ecmaVersion);\n  }\n\n  var pp$1 = Parser.prototype;\n\n  var RegExpValidationState = function RegExpValidationState(parser) {\n    this.parser = parser;\n    this.validFlags = \"gim\" + (parser.options.ecmaVersion >= 6 ? \"uy\" : \"\") + (parser.options.ecmaVersion >= 9 ? \"s\" : \"\") + (parser.options.ecmaVersion >= 13 ? \"d\" : \"\");\n    this.unicodeProperties = data[parser.options.ecmaVersion >= 14 ? 14 : parser.options.ecmaVersion];\n    this.source = \"\";\n    this.flags = \"\";\n    this.start = 0;\n    this.switchU = false;\n    this.switchN = false;\n    this.pos = 0;\n    this.lastIntValue = 0;\n    this.lastStringValue = \"\";\n    this.lastAssertionIsQuantifiable = false;\n    this.numCapturingParens = 0;\n    this.maxBackReference = 0;\n    this.groupNames = [];\n    this.backReferenceNames = [];\n  };\n\n  RegExpValidationState.prototype.reset = function reset (start, pattern, flags) {\n    var unicode = flags.indexOf(\"u\") !== -1;\n    this.start = start | 0;\n    this.source = pattern + \"\";\n    this.flags = flags;\n    this.switchU = unicode && this.parser.options.ecmaVersion >= 6;\n    this.switchN = unicode && this.parser.options.ecmaVersion >= 9;\n  };\n\n  RegExpValidationState.prototype.raise = function raise (message) {\n    this.parser.raiseRecoverable(this.start, (\"Invalid regular expression: /\" + (this.source) + \"/: \" + message));\n  };\n\n  // If u flag is given, this returns the code point at the index (it combines a surrogate pair).\n  // Otherwise, this returns the code unit of the index (can be a part of a surrogate pair).\n  RegExpValidationState.prototype.at = function at (i, forceU) {\n      if ( forceU === void 0 ) forceU = false;\n\n    var s = this.source;\n    var l = s.length;\n    if (i >= l) {\n      return -1\n    }\n    var c = s.charCodeAt(i);\n    if (!(forceU || this.switchU) || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l) {\n      return c\n    }\n    var next = s.charCodeAt(i + 1);\n    return next >= 0xDC00 && next <= 0xDFFF ? (c << 10) + next - 0x35FDC00 : c\n  };\n\n  RegExpValidationState.prototype.nextIndex = function nextIndex (i, forceU) {\n      if ( forceU === void 0 ) forceU = false;\n\n    var s = this.source;\n    var l = s.length;\n    if (i >= l) {\n      return l\n    }\n    var c = s.charCodeAt(i), next;\n    if (!(forceU || this.switchU) || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l ||\n        (next = s.charCodeAt(i + 1)) < 0xDC00 || next > 0xDFFF) {\n      return i + 1\n    }\n    return i + 2\n  };\n\n  RegExpValidationState.prototype.current = function current (forceU) {\n      if ( forceU === void 0 ) forceU = false;\n\n    return this.at(this.pos, forceU)\n  };\n\n  RegExpValidationState.prototype.lookahead = function lookahead (forceU) {\n      if ( forceU === void 0 ) forceU = false;\n\n    return this.at(this.nextIndex(this.pos, forceU), forceU)\n  };\n\n  RegExpValidationState.prototype.advance = function advance (forceU) {\n      if ( forceU === void 0 ) forceU = false;\n\n    this.pos = this.nextIndex(this.pos, forceU);\n  };\n\n  RegExpValidationState.prototype.eat = function eat (ch, forceU) {\n      if ( forceU === void 0 ) forceU = false;\n\n    if (this.current(forceU) === ch) {\n      this.advance(forceU);\n      return true\n    }\n    return false\n  };\n\n  /**\n   * Validate the flags part of a given RegExpLiteral.\n   *\n   * @param {RegExpValidationState} state The state to validate RegExp.\n   * @returns {void}\n   */\n  pp$1.validateRegExpFlags = function(state) {\n    var validFlags = state.validFlags;\n    var flags = state.flags;\n\n    for (var i = 0; i < flags.length; i++) {\n      var flag = flags.charAt(i);\n      if (validFlags.indexOf(flag) === -1) {\n        this.raise(state.start, \"Invalid regular expression flag\");\n      }\n      if (flags.indexOf(flag, i + 1) > -1) {\n        this.raise(state.start, \"Duplicate regular expression flag\");\n      }\n    }\n  };\n\n  /**\n   * Validate the pattern part of a given RegExpLiteral.\n   *\n   * @param {RegExpValidationState} state The state to validate RegExp.\n   * @returns {void}\n   */\n  pp$1.validateRegExpPattern = function(state) {\n    this.regexp_pattern(state);\n\n    // The goal symbol for the parse is |Pattern[~U, ~N]|. If the result of\n    // parsing contains a |GroupName|, reparse with the goal symbol\n    // |Pattern[~U, +N]| and use this result instead. Throw a *SyntaxError*\n    // exception if _P_ did not conform to the grammar, if any elements of _P_\n    // were not matched by the parse, or if any Early Error conditions exist.\n    if (!state.switchN && this.options.ecmaVersion >= 9 && state.groupNames.length > 0) {\n      state.switchN = true;\n      this.regexp_pattern(state);\n    }\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-Pattern\n  pp$1.regexp_pattern = function(state) {\n    state.pos = 0;\n    state.lastIntValue = 0;\n    state.lastStringValue = \"\";\n    state.lastAssertionIsQuantifiable = false;\n    state.numCapturingParens = 0;\n    state.maxBackReference = 0;\n    state.groupNames.length = 0;\n    state.backReferenceNames.length = 0;\n\n    this.regexp_disjunction(state);\n\n    if (state.pos !== state.source.length) {\n      // Make the same messages as V8.\n      if (state.eat(0x29 /* ) */)) {\n        state.raise(\"Unmatched ')'\");\n      }\n      if (state.eat(0x5D /* ] */) || state.eat(0x7D /* } */)) {\n        state.raise(\"Lone quantifier brackets\");\n      }\n    }\n    if (state.maxBackReference > state.numCapturingParens) {\n      state.raise(\"Invalid escape\");\n    }\n    for (var i = 0, list = state.backReferenceNames; i < list.length; i += 1) {\n      var name = list[i];\n\n      if (state.groupNames.indexOf(name) === -1) {\n        state.raise(\"Invalid named capture referenced\");\n      }\n    }\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-Disjunction\n  pp$1.regexp_disjunction = function(state) {\n    this.regexp_alternative(state);\n    while (state.eat(0x7C /* | */)) {\n      this.regexp_alternative(state);\n    }\n\n    // Make the same message as V8.\n    if (this.regexp_eatQuantifier(state, true)) {\n      state.raise(\"Nothing to repeat\");\n    }\n    if (state.eat(0x7B /* { */)) {\n      state.raise(\"Lone quantifier brackets\");\n    }\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-Alternative\n  pp$1.regexp_alternative = function(state) {\n    while (state.pos < state.source.length && this.regexp_eatTerm(state))\n      { }\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Term\n  pp$1.regexp_eatTerm = function(state) {\n    if (this.regexp_eatAssertion(state)) {\n      // Handle `QuantifiableAssertion Quantifier` alternative.\n      // `state.lastAssertionIsQuantifiable` is true if the last eaten Assertion\n      // is a QuantifiableAssertion.\n      if (state.lastAssertionIsQuantifiable && this.regexp_eatQuantifier(state)) {\n        // Make the same message as V8.\n        if (state.switchU) {\n          state.raise(\"Invalid quantifier\");\n        }\n      }\n      return true\n    }\n\n    if (state.switchU ? this.regexp_eatAtom(state) : this.regexp_eatExtendedAtom(state)) {\n      this.regexp_eatQuantifier(state);\n      return true\n    }\n\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Assertion\n  pp$1.regexp_eatAssertion = function(state) {\n    var start = state.pos;\n    state.lastAssertionIsQuantifiable = false;\n\n    // ^, $\n    if (state.eat(0x5E /* ^ */) || state.eat(0x24 /* $ */)) {\n      return true\n    }\n\n    // \\b \\B\n    if (state.eat(0x5C /* \\ */)) {\n      if (state.eat(0x42 /* B */) || state.eat(0x62 /* b */)) {\n        return true\n      }\n      state.pos = start;\n    }\n\n    // Lookahead / Lookbehind\n    if (state.eat(0x28 /* ( */) && state.eat(0x3F /* ? */)) {\n      var lookbehind = false;\n      if (this.options.ecmaVersion >= 9) {\n        lookbehind = state.eat(0x3C /* < */);\n      }\n      if (state.eat(0x3D /* = */) || state.eat(0x21 /* ! */)) {\n        this.regexp_disjunction(state);\n        if (!state.eat(0x29 /* ) */)) {\n          state.raise(\"Unterminated group\");\n        }\n        state.lastAssertionIsQuantifiable = !lookbehind;\n        return true\n      }\n    }\n\n    state.pos = start;\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-Quantifier\n  pp$1.regexp_eatQuantifier = function(state, noError) {\n    if ( noError === void 0 ) noError = false;\n\n    if (this.regexp_eatQuantifierPrefix(state, noError)) {\n      state.eat(0x3F /* ? */);\n      return true\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-QuantifierPrefix\n  pp$1.regexp_eatQuantifierPrefix = function(state, noError) {\n    return (\n      state.eat(0x2A /* * */) ||\n      state.eat(0x2B /* + */) ||\n      state.eat(0x3F /* ? */) ||\n      this.regexp_eatBracedQuantifier(state, noError)\n    )\n  };\n  pp$1.regexp_eatBracedQuantifier = function(state, noError) {\n    var start = state.pos;\n    if (state.eat(0x7B /* { */)) {\n      var min = 0, max = -1;\n      if (this.regexp_eatDecimalDigits(state)) {\n        min = state.lastIntValue;\n        if (state.eat(0x2C /* , */) && this.regexp_eatDecimalDigits(state)) {\n          max = state.lastIntValue;\n        }\n        if (state.eat(0x7D /* } */)) {\n          // SyntaxError in https://www.ecma-international.org/ecma-262/8.0/#sec-term\n          if (max !== -1 && max < min && !noError) {\n            state.raise(\"numbers out of order in {} quantifier\");\n          }\n          return true\n        }\n      }\n      if (state.switchU && !noError) {\n        state.raise(\"Incomplete quantifier\");\n      }\n      state.pos = start;\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-Atom\n  pp$1.regexp_eatAtom = function(state) {\n    return (\n      this.regexp_eatPatternCharacters(state) ||\n      state.eat(0x2E /* . */) ||\n      this.regexp_eatReverseSolidusAtomEscape(state) ||\n      this.regexp_eatCharacterClass(state) ||\n      this.regexp_eatUncapturingGroup(state) ||\n      this.regexp_eatCapturingGroup(state)\n    )\n  };\n  pp$1.regexp_eatReverseSolidusAtomEscape = function(state) {\n    var start = state.pos;\n    if (state.eat(0x5C /* \\ */)) {\n      if (this.regexp_eatAtomEscape(state)) {\n        return true\n      }\n      state.pos = start;\n    }\n    return false\n  };\n  pp$1.regexp_eatUncapturingGroup = function(state) {\n    var start = state.pos;\n    if (state.eat(0x28 /* ( */)) {\n      if (state.eat(0x3F /* ? */) && state.eat(0x3A /* : */)) {\n        this.regexp_disjunction(state);\n        if (state.eat(0x29 /* ) */)) {\n          return true\n        }\n        state.raise(\"Unterminated group\");\n      }\n      state.pos = start;\n    }\n    return false\n  };\n  pp$1.regexp_eatCapturingGroup = function(state) {\n    if (state.eat(0x28 /* ( */)) {\n      if (this.options.ecmaVersion >= 9) {\n        this.regexp_groupSpecifier(state);\n      } else if (state.current() === 0x3F /* ? */) {\n        state.raise(\"Invalid group\");\n      }\n      this.regexp_disjunction(state);\n      if (state.eat(0x29 /* ) */)) {\n        state.numCapturingParens += 1;\n        return true\n      }\n      state.raise(\"Unterminated group\");\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedAtom\n  pp$1.regexp_eatExtendedAtom = function(state) {\n    return (\n      state.eat(0x2E /* . */) ||\n      this.regexp_eatReverseSolidusAtomEscape(state) ||\n      this.regexp_eatCharacterClass(state) ||\n      this.regexp_eatUncapturingGroup(state) ||\n      this.regexp_eatCapturingGroup(state) ||\n      this.regexp_eatInvalidBracedQuantifier(state) ||\n      this.regexp_eatExtendedPatternCharacter(state)\n    )\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-InvalidBracedQuantifier\n  pp$1.regexp_eatInvalidBracedQuantifier = function(state) {\n    if (this.regexp_eatBracedQuantifier(state, true)) {\n      state.raise(\"Nothing to repeat\");\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-SyntaxCharacter\n  pp$1.regexp_eatSyntaxCharacter = function(state) {\n    var ch = state.current();\n    if (isSyntaxCharacter(ch)) {\n      state.lastIntValue = ch;\n      state.advance();\n      return true\n    }\n    return false\n  };\n  function isSyntaxCharacter(ch) {\n    return (\n      ch === 0x24 /* $ */ ||\n      ch >= 0x28 /* ( */ && ch <= 0x2B /* + */ ||\n      ch === 0x2E /* . */ ||\n      ch === 0x3F /* ? */ ||\n      ch >= 0x5B /* [ */ && ch <= 0x5E /* ^ */ ||\n      ch >= 0x7B /* { */ && ch <= 0x7D /* } */\n    )\n  }\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-PatternCharacter\n  // But eat eager.\n  pp$1.regexp_eatPatternCharacters = function(state) {\n    var start = state.pos;\n    var ch = 0;\n    while ((ch = state.current()) !== -1 && !isSyntaxCharacter(ch)) {\n      state.advance();\n    }\n    return state.pos !== start\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedPatternCharacter\n  pp$1.regexp_eatExtendedPatternCharacter = function(state) {\n    var ch = state.current();\n    if (\n      ch !== -1 &&\n      ch !== 0x24 /* $ */ &&\n      !(ch >= 0x28 /* ( */ && ch <= 0x2B /* + */) &&\n      ch !== 0x2E /* . */ &&\n      ch !== 0x3F /* ? */ &&\n      ch !== 0x5B /* [ */ &&\n      ch !== 0x5E /* ^ */ &&\n      ch !== 0x7C /* | */\n    ) {\n      state.advance();\n      return true\n    }\n    return false\n  };\n\n  // GroupSpecifier ::\n  //   [empty]\n  //   `?` GroupName\n  pp$1.regexp_groupSpecifier = function(state) {\n    if (state.eat(0x3F /* ? */)) {\n      if (this.regexp_eatGroupName(state)) {\n        if (state.groupNames.indexOf(state.lastStringValue) !== -1) {\n          state.raise(\"Duplicate capture group name\");\n        }\n        state.groupNames.push(state.lastStringValue);\n        return\n      }\n      state.raise(\"Invalid group\");\n    }\n  };\n\n  // GroupName ::\n  //   `<` RegExpIdentifierName `>`\n  // Note: this updates `state.lastStringValue` property with the eaten name.\n  pp$1.regexp_eatGroupName = function(state) {\n    state.lastStringValue = \"\";\n    if (state.eat(0x3C /* < */)) {\n      if (this.regexp_eatRegExpIdentifierName(state) && state.eat(0x3E /* > */)) {\n        return true\n      }\n      state.raise(\"Invalid capture group name\");\n    }\n    return false\n  };\n\n  // RegExpIdentifierName ::\n  //   RegExpIdentifierStart\n  //   RegExpIdentifierName RegExpIdentifierPart\n  // Note: this updates `state.lastStringValue` property with the eaten name.\n  pp$1.regexp_eatRegExpIdentifierName = function(state) {\n    state.lastStringValue = \"\";\n    if (this.regexp_eatRegExpIdentifierStart(state)) {\n      state.lastStringValue += codePointToString(state.lastIntValue);\n      while (this.regexp_eatRegExpIdentifierPart(state)) {\n        state.lastStringValue += codePointToString(state.lastIntValue);\n      }\n      return true\n    }\n    return false\n  };\n\n  // RegExpIdentifierStart ::\n  //   UnicodeIDStart\n  //   `$`\n  //   `_`\n  //   `\\` RegExpUnicodeEscapeSequence[+U]\n  pp$1.regexp_eatRegExpIdentifierStart = function(state) {\n    var start = state.pos;\n    var forceU = this.options.ecmaVersion >= 11;\n    var ch = state.current(forceU);\n    state.advance(forceU);\n\n    if (ch === 0x5C /* \\ */ && this.regexp_eatRegExpUnicodeEscapeSequence(state, forceU)) {\n      ch = state.lastIntValue;\n    }\n    if (isRegExpIdentifierStart(ch)) {\n      state.lastIntValue = ch;\n      return true\n    }\n\n    state.pos = start;\n    return false\n  };\n  function isRegExpIdentifierStart(ch) {\n    return isIdentifierStart(ch, true) || ch === 0x24 /* $ */ || ch === 0x5F /* _ */\n  }\n\n  // RegExpIdentifierPart ::\n  //   UnicodeIDContinue\n  //   `$`\n  //   `_`\n  //   `\\` RegExpUnicodeEscapeSequence[+U]\n  //   <ZWNJ>\n  //   <ZWJ>\n  pp$1.regexp_eatRegExpIdentifierPart = function(state) {\n    var start = state.pos;\n    var forceU = this.options.ecmaVersion >= 11;\n    var ch = state.current(forceU);\n    state.advance(forceU);\n\n    if (ch === 0x5C /* \\ */ && this.regexp_eatRegExpUnicodeEscapeSequence(state, forceU)) {\n      ch = state.lastIntValue;\n    }\n    if (isRegExpIdentifierPart(ch)) {\n      state.lastIntValue = ch;\n      return true\n    }\n\n    state.pos = start;\n    return false\n  };\n  function isRegExpIdentifierPart(ch) {\n    return isIdentifierChar(ch, true) || ch === 0x24 /* $ */ || ch === 0x5F /* _ */ || ch === 0x200C /* <ZWNJ> */ || ch === 0x200D /* <ZWJ> */\n  }\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-AtomEscape\n  pp$1.regexp_eatAtomEscape = function(state) {\n    if (\n      this.regexp_eatBackReference(state) ||\n      this.regexp_eatCharacterClassEscape(state) ||\n      this.regexp_eatCharacterEscape(state) ||\n      (state.switchN && this.regexp_eatKGroupName(state))\n    ) {\n      return true\n    }\n    if (state.switchU) {\n      // Make the same message as V8.\n      if (state.current() === 0x63 /* c */) {\n        state.raise(\"Invalid unicode escape\");\n      }\n      state.raise(\"Invalid escape\");\n    }\n    return false\n  };\n  pp$1.regexp_eatBackReference = function(state) {\n    var start = state.pos;\n    if (this.regexp_eatDecimalEscape(state)) {\n      var n = state.lastIntValue;\n      if (state.switchU) {\n        // For SyntaxError in https://www.ecma-international.org/ecma-262/8.0/#sec-atomescape\n        if (n > state.maxBackReference) {\n          state.maxBackReference = n;\n        }\n        return true\n      }\n      if (n <= state.numCapturingParens) {\n        return true\n      }\n      state.pos = start;\n    }\n    return false\n  };\n  pp$1.regexp_eatKGroupName = function(state) {\n    if (state.eat(0x6B /* k */)) {\n      if (this.regexp_eatGroupName(state)) {\n        state.backReferenceNames.push(state.lastStringValue);\n        return true\n      }\n      state.raise(\"Invalid named reference\");\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-CharacterEscape\n  pp$1.regexp_eatCharacterEscape = function(state) {\n    return (\n      this.regexp_eatControlEscape(state) ||\n      this.regexp_eatCControlLetter(state) ||\n      this.regexp_eatZero(state) ||\n      this.regexp_eatHexEscapeSequence(state) ||\n      this.regexp_eatRegExpUnicodeEscapeSequence(state, false) ||\n      (!state.switchU && this.regexp_eatLegacyOctalEscapeSequence(state)) ||\n      this.regexp_eatIdentityEscape(state)\n    )\n  };\n  pp$1.regexp_eatCControlLetter = function(state) {\n    var start = state.pos;\n    if (state.eat(0x63 /* c */)) {\n      if (this.regexp_eatControlLetter(state)) {\n        return true\n      }\n      state.pos = start;\n    }\n    return false\n  };\n  pp$1.regexp_eatZero = function(state) {\n    if (state.current() === 0x30 /* 0 */ && !isDecimalDigit(state.lookahead())) {\n      state.lastIntValue = 0;\n      state.advance();\n      return true\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-ControlEscape\n  pp$1.regexp_eatControlEscape = function(state) {\n    var ch = state.current();\n    if (ch === 0x74 /* t */) {\n      state.lastIntValue = 0x09; /* \\t */\n      state.advance();\n      return true\n    }\n    if (ch === 0x6E /* n */) {\n      state.lastIntValue = 0x0A; /* \\n */\n      state.advance();\n      return true\n    }\n    if (ch === 0x76 /* v */) {\n      state.lastIntValue = 0x0B; /* \\v */\n      state.advance();\n      return true\n    }\n    if (ch === 0x66 /* f */) {\n      state.lastIntValue = 0x0C; /* \\f */\n      state.advance();\n      return true\n    }\n    if (ch === 0x72 /* r */) {\n      state.lastIntValue = 0x0D; /* \\r */\n      state.advance();\n      return true\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-ControlLetter\n  pp$1.regexp_eatControlLetter = function(state) {\n    var ch = state.current();\n    if (isControlLetter(ch)) {\n      state.lastIntValue = ch % 0x20;\n      state.advance();\n      return true\n    }\n    return false\n  };\n  function isControlLetter(ch) {\n    return (\n      (ch >= 0x41 /* A */ && ch <= 0x5A /* Z */) ||\n      (ch >= 0x61 /* a */ && ch <= 0x7A /* z */)\n    )\n  }\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-RegExpUnicodeEscapeSequence\n  pp$1.regexp_eatRegExpUnicodeEscapeSequence = function(state, forceU) {\n    if ( forceU === void 0 ) forceU = false;\n\n    var start = state.pos;\n    var switchU = forceU || state.switchU;\n\n    if (state.eat(0x75 /* u */)) {\n      if (this.regexp_eatFixedHexDigits(state, 4)) {\n        var lead = state.lastIntValue;\n        if (switchU && lead >= 0xD800 && lead <= 0xDBFF) {\n          var leadSurrogateEnd = state.pos;\n          if (state.eat(0x5C /* \\ */) && state.eat(0x75 /* u */) && this.regexp_eatFixedHexDigits(state, 4)) {\n            var trail = state.lastIntValue;\n            if (trail >= 0xDC00 && trail <= 0xDFFF) {\n              state.lastIntValue = (lead - 0xD800) * 0x400 + (trail - 0xDC00) + 0x10000;\n              return true\n            }\n          }\n          state.pos = leadSurrogateEnd;\n          state.lastIntValue = lead;\n        }\n        return true\n      }\n      if (\n        switchU &&\n        state.eat(0x7B /* { */) &&\n        this.regexp_eatHexDigits(state) &&\n        state.eat(0x7D /* } */) &&\n        isValidUnicode(state.lastIntValue)\n      ) {\n        return true\n      }\n      if (switchU) {\n        state.raise(\"Invalid unicode escape\");\n      }\n      state.pos = start;\n    }\n\n    return false\n  };\n  function isValidUnicode(ch) {\n    return ch >= 0 && ch <= 0x10FFFF\n  }\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-IdentityEscape\n  pp$1.regexp_eatIdentityEscape = function(state) {\n    if (state.switchU) {\n      if (this.regexp_eatSyntaxCharacter(state)) {\n        return true\n      }\n      if (state.eat(0x2F /* / */)) {\n        state.lastIntValue = 0x2F; /* / */\n        return true\n      }\n      return false\n    }\n\n    var ch = state.current();\n    if (ch !== 0x63 /* c */ && (!state.switchN || ch !== 0x6B /* k */)) {\n      state.lastIntValue = ch;\n      state.advance();\n      return true\n    }\n\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalEscape\n  pp$1.regexp_eatDecimalEscape = function(state) {\n    state.lastIntValue = 0;\n    var ch = state.current();\n    if (ch >= 0x31 /* 1 */ && ch <= 0x39 /* 9 */) {\n      do {\n        state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 /* 0 */);\n        state.advance();\n      } while ((ch = state.current()) >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */)\n      return true\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClassEscape\n  pp$1.regexp_eatCharacterClassEscape = function(state) {\n    var ch = state.current();\n\n    if (isCharacterClassEscape(ch)) {\n      state.lastIntValue = -1;\n      state.advance();\n      return true\n    }\n\n    if (\n      state.switchU &&\n      this.options.ecmaVersion >= 9 &&\n      (ch === 0x50 /* P */ || ch === 0x70 /* p */)\n    ) {\n      state.lastIntValue = -1;\n      state.advance();\n      if (\n        state.eat(0x7B /* { */) &&\n        this.regexp_eatUnicodePropertyValueExpression(state) &&\n        state.eat(0x7D /* } */)\n      ) {\n        return true\n      }\n      state.raise(\"Invalid property name\");\n    }\n\n    return false\n  };\n  function isCharacterClassEscape(ch) {\n    return (\n      ch === 0x64 /* d */ ||\n      ch === 0x44 /* D */ ||\n      ch === 0x73 /* s */ ||\n      ch === 0x53 /* S */ ||\n      ch === 0x77 /* w */ ||\n      ch === 0x57 /* W */\n    )\n  }\n\n  // UnicodePropertyValueExpression ::\n  //   UnicodePropertyName `=` UnicodePropertyValue\n  //   LoneUnicodePropertyNameOrValue\n  pp$1.regexp_eatUnicodePropertyValueExpression = function(state) {\n    var start = state.pos;\n\n    // UnicodePropertyName `=` UnicodePropertyValue\n    if (this.regexp_eatUnicodePropertyName(state) && state.eat(0x3D /* = */)) {\n      var name = state.lastStringValue;\n      if (this.regexp_eatUnicodePropertyValue(state)) {\n        var value = state.lastStringValue;\n        this.regexp_validateUnicodePropertyNameAndValue(state, name, value);\n        return true\n      }\n    }\n    state.pos = start;\n\n    // LoneUnicodePropertyNameOrValue\n    if (this.regexp_eatLoneUnicodePropertyNameOrValue(state)) {\n      var nameOrValue = state.lastStringValue;\n      this.regexp_validateUnicodePropertyNameOrValue(state, nameOrValue);\n      return true\n    }\n    return false\n  };\n  pp$1.regexp_validateUnicodePropertyNameAndValue = function(state, name, value) {\n    if (!hasOwn(state.unicodeProperties.nonBinary, name))\n      { state.raise(\"Invalid property name\"); }\n    if (!state.unicodeProperties.nonBinary[name].test(value))\n      { state.raise(\"Invalid property value\"); }\n  };\n  pp$1.regexp_validateUnicodePropertyNameOrValue = function(state, nameOrValue) {\n    if (!state.unicodeProperties.binary.test(nameOrValue))\n      { state.raise(\"Invalid property name\"); }\n  };\n\n  // UnicodePropertyName ::\n  //   UnicodePropertyNameCharacters\n  pp$1.regexp_eatUnicodePropertyName = function(state) {\n    var ch = 0;\n    state.lastStringValue = \"\";\n    while (isUnicodePropertyNameCharacter(ch = state.current())) {\n      state.lastStringValue += codePointToString(ch);\n      state.advance();\n    }\n    return state.lastStringValue !== \"\"\n  };\n  function isUnicodePropertyNameCharacter(ch) {\n    return isControlLetter(ch) || ch === 0x5F /* _ */\n  }\n\n  // UnicodePropertyValue ::\n  //   UnicodePropertyValueCharacters\n  pp$1.regexp_eatUnicodePropertyValue = function(state) {\n    var ch = 0;\n    state.lastStringValue = \"\";\n    while (isUnicodePropertyValueCharacter(ch = state.current())) {\n      state.lastStringValue += codePointToString(ch);\n      state.advance();\n    }\n    return state.lastStringValue !== \"\"\n  };\n  function isUnicodePropertyValueCharacter(ch) {\n    return isUnicodePropertyNameCharacter(ch) || isDecimalDigit(ch)\n  }\n\n  // LoneUnicodePropertyNameOrValue ::\n  //   UnicodePropertyValueCharacters\n  pp$1.regexp_eatLoneUnicodePropertyNameOrValue = function(state) {\n    return this.regexp_eatUnicodePropertyValue(state)\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClass\n  pp$1.regexp_eatCharacterClass = function(state) {\n    if (state.eat(0x5B /* [ */)) {\n      state.eat(0x5E /* ^ */);\n      this.regexp_classRanges(state);\n      if (state.eat(0x5D /* ] */)) {\n        return true\n      }\n      // Unreachable since it threw \"unterminated regular expression\" error before.\n      state.raise(\"Unterminated character class\");\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-ClassRanges\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRanges\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRangesNoDash\n  pp$1.regexp_classRanges = function(state) {\n    while (this.regexp_eatClassAtom(state)) {\n      var left = state.lastIntValue;\n      if (state.eat(0x2D /* - */) && this.regexp_eatClassAtom(state)) {\n        var right = state.lastIntValue;\n        if (state.switchU && (left === -1 || right === -1)) {\n          state.raise(\"Invalid character class\");\n        }\n        if (left !== -1 && right !== -1 && left > right) {\n          state.raise(\"Range out of order in character class\");\n        }\n      }\n    }\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtom\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtomNoDash\n  pp$1.regexp_eatClassAtom = function(state) {\n    var start = state.pos;\n\n    if (state.eat(0x5C /* \\ */)) {\n      if (this.regexp_eatClassEscape(state)) {\n        return true\n      }\n      if (state.switchU) {\n        // Make the same message as V8.\n        var ch$1 = state.current();\n        if (ch$1 === 0x63 /* c */ || isOctalDigit(ch$1)) {\n          state.raise(\"Invalid class escape\");\n        }\n        state.raise(\"Invalid escape\");\n      }\n      state.pos = start;\n    }\n\n    var ch = state.current();\n    if (ch !== 0x5D /* ] */) {\n      state.lastIntValue = ch;\n      state.advance();\n      return true\n    }\n\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassEscape\n  pp$1.regexp_eatClassEscape = function(state) {\n    var start = state.pos;\n\n    if (state.eat(0x62 /* b */)) {\n      state.lastIntValue = 0x08; /* <BS> */\n      return true\n    }\n\n    if (state.switchU && state.eat(0x2D /* - */)) {\n      state.lastIntValue = 0x2D; /* - */\n      return true\n    }\n\n    if (!state.switchU && state.eat(0x63 /* c */)) {\n      if (this.regexp_eatClassControlLetter(state)) {\n        return true\n      }\n      state.pos = start;\n    }\n\n    return (\n      this.regexp_eatCharacterClassEscape(state) ||\n      this.regexp_eatCharacterEscape(state)\n    )\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassControlLetter\n  pp$1.regexp_eatClassControlLetter = function(state) {\n    var ch = state.current();\n    if (isDecimalDigit(ch) || ch === 0x5F /* _ */) {\n      state.lastIntValue = ch % 0x20;\n      state.advance();\n      return true\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence\n  pp$1.regexp_eatHexEscapeSequence = function(state) {\n    var start = state.pos;\n    if (state.eat(0x78 /* x */)) {\n      if (this.regexp_eatFixedHexDigits(state, 2)) {\n        return true\n      }\n      if (state.switchU) {\n        state.raise(\"Invalid escape\");\n      }\n      state.pos = start;\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalDigits\n  pp$1.regexp_eatDecimalDigits = function(state) {\n    var start = state.pos;\n    var ch = 0;\n    state.lastIntValue = 0;\n    while (isDecimalDigit(ch = state.current())) {\n      state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 /* 0 */);\n      state.advance();\n    }\n    return state.pos !== start\n  };\n  function isDecimalDigit(ch) {\n    return ch >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */\n  }\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigits\n  pp$1.regexp_eatHexDigits = function(state) {\n    var start = state.pos;\n    var ch = 0;\n    state.lastIntValue = 0;\n    while (isHexDigit(ch = state.current())) {\n      state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n      state.advance();\n    }\n    return state.pos !== start\n  };\n  function isHexDigit(ch) {\n    return (\n      (ch >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */) ||\n      (ch >= 0x41 /* A */ && ch <= 0x46 /* F */) ||\n      (ch >= 0x61 /* a */ && ch <= 0x66 /* f */)\n    )\n  }\n  function hexToInt(ch) {\n    if (ch >= 0x41 /* A */ && ch <= 0x46 /* F */) {\n      return 10 + (ch - 0x41 /* A */)\n    }\n    if (ch >= 0x61 /* a */ && ch <= 0x66 /* f */) {\n      return 10 + (ch - 0x61 /* a */)\n    }\n    return ch - 0x30 /* 0 */\n  }\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-LegacyOctalEscapeSequence\n  // Allows only 0-377(octal) i.e. 0-255(decimal).\n  pp$1.regexp_eatLegacyOctalEscapeSequence = function(state) {\n    if (this.regexp_eatOctalDigit(state)) {\n      var n1 = state.lastIntValue;\n      if (this.regexp_eatOctalDigit(state)) {\n        var n2 = state.lastIntValue;\n        if (n1 <= 3 && this.regexp_eatOctalDigit(state)) {\n          state.lastIntValue = n1 * 64 + n2 * 8 + state.lastIntValue;\n        } else {\n          state.lastIntValue = n1 * 8 + n2;\n        }\n      } else {\n        state.lastIntValue = n1;\n      }\n      return true\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-OctalDigit\n  pp$1.regexp_eatOctalDigit = function(state) {\n    var ch = state.current();\n    if (isOctalDigit(ch)) {\n      state.lastIntValue = ch - 0x30; /* 0 */\n      state.advance();\n      return true\n    }\n    state.lastIntValue = 0;\n    return false\n  };\n  function isOctalDigit(ch) {\n    return ch >= 0x30 /* 0 */ && ch <= 0x37 /* 7 */\n  }\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-Hex4Digits\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigit\n  // And HexDigit HexDigit in https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence\n  pp$1.regexp_eatFixedHexDigits = function(state, length) {\n    var start = state.pos;\n    state.lastIntValue = 0;\n    for (var i = 0; i < length; ++i) {\n      var ch = state.current();\n      if (!isHexDigit(ch)) {\n        state.pos = start;\n        return false\n      }\n      state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n      state.advance();\n    }\n    return true\n  };\n\n  // Object type used to represent tokens. Note that normally, tokens\n  // simply exist as properties on the parser object. This is only\n  // used for the onToken callback and the external tokenizer.\n\n  var Token = function Token(p) {\n    this.type = p.type;\n    this.value = p.value;\n    this.start = p.start;\n    this.end = p.end;\n    if (p.options.locations)\n      { this.loc = new SourceLocation(p, p.startLoc, p.endLoc); }\n    if (p.options.ranges)\n      { this.range = [p.start, p.end]; }\n  };\n\n  // ## Tokenizer\n\n  var pp = Parser.prototype;\n\n  // Move to the next token\n\n  pp.next = function(ignoreEscapeSequenceInKeyword) {\n    if (!ignoreEscapeSequenceInKeyword && this.type.keyword && this.containsEsc)\n      { this.raiseRecoverable(this.start, \"Escape sequence in keyword \" + this.type.keyword); }\n    if (this.options.onToken)\n      { this.options.onToken(new Token(this)); }\n\n    this.lastTokEnd = this.end;\n    this.lastTokStart = this.start;\n    this.lastTokEndLoc = this.endLoc;\n    this.lastTokStartLoc = this.startLoc;\n    this.nextToken();\n  };\n\n  pp.getToken = function() {\n    this.next();\n    return new Token(this)\n  };\n\n  // If we're in an ES6 environment, make parsers iterable\n  if (typeof Symbol !== \"undefined\")\n    { pp[Symbol.iterator] = function() {\n      var this$1$1 = this;\n\n      return {\n        next: function () {\n          var token = this$1$1.getToken();\n          return {\n            done: token.type === types$1.eof,\n            value: token\n          }\n        }\n      }\n    }; }\n\n  // Toggle strict mode. Re-reads the next number or string to please\n  // pedantic tests (`\"use strict\"; 010;` should fail).\n\n  // Read a single token, updating the parser object's token-related\n  // properties.\n\n  pp.nextToken = function() {\n    var curContext = this.curContext();\n    if (!curContext || !curContext.preserveSpace) { this.skipSpace(); }\n\n    this.start = this.pos;\n    if (this.options.locations) { this.startLoc = this.curPosition(); }\n    if (this.pos >= this.input.length) { return this.finishToken(types$1.eof) }\n\n    if (curContext.override) { return curContext.override(this) }\n    else { this.readToken(this.fullCharCodeAtPos()); }\n  };\n\n  pp.readToken = function(code) {\n    // Identifier or keyword. '\\uXXXX' sequences are allowed in\n    // identifiers, so '\\' also dispatches to that.\n    if (isIdentifierStart(code, this.options.ecmaVersion >= 6) || code === 92 /* '\\' */)\n      { return this.readWord() }\n\n    return this.getTokenFromCode(code)\n  };\n\n  pp.fullCharCodeAtPos = function() {\n    var code = this.input.charCodeAt(this.pos);\n    if (code <= 0xd7ff || code >= 0xdc00) { return code }\n    var next = this.input.charCodeAt(this.pos + 1);\n    return next <= 0xdbff || next >= 0xe000 ? code : (code << 10) + next - 0x35fdc00\n  };\n\n  pp.skipBlockComment = function() {\n    var startLoc = this.options.onComment && this.curPosition();\n    var start = this.pos, end = this.input.indexOf(\"*/\", this.pos += 2);\n    if (end === -1) { this.raise(this.pos - 2, \"Unterminated comment\"); }\n    this.pos = end + 2;\n    if (this.options.locations) {\n      for (var nextBreak = (void 0), pos = start; (nextBreak = nextLineBreak(this.input, pos, this.pos)) > -1;) {\n        ++this.curLine;\n        pos = this.lineStart = nextBreak;\n      }\n    }\n    if (this.options.onComment)\n      { this.options.onComment(true, this.input.slice(start + 2, end), start, this.pos,\n                             startLoc, this.curPosition()); }\n  };\n\n  pp.skipLineComment = function(startSkip) {\n    var start = this.pos;\n    var startLoc = this.options.onComment && this.curPosition();\n    var ch = this.input.charCodeAt(this.pos += startSkip);\n    while (this.pos < this.input.length && !isNewLine(ch)) {\n      ch = this.input.charCodeAt(++this.pos);\n    }\n    if (this.options.onComment)\n      { this.options.onComment(false, this.input.slice(start + startSkip, this.pos), start, this.pos,\n                             startLoc, this.curPosition()); }\n  };\n\n  // Called at the start of the parse and after every token. Skips\n  // whitespace and comments, and.\n\n  pp.skipSpace = function() {\n    loop: while (this.pos < this.input.length) {\n      var ch = this.input.charCodeAt(this.pos);\n      switch (ch) {\n      case 32: case 160: // ' '\n        ++this.pos;\n        break\n      case 13:\n        if (this.input.charCodeAt(this.pos + 1) === 10) {\n          ++this.pos;\n        }\n      case 10: case 8232: case 8233:\n        ++this.pos;\n        if (this.options.locations) {\n          ++this.curLine;\n          this.lineStart = this.pos;\n        }\n        break\n      case 47: // '/'\n        switch (this.input.charCodeAt(this.pos + 1)) {\n        case 42: // '*'\n          this.skipBlockComment();\n          break\n        case 47:\n          this.skipLineComment(2);\n          break\n        default:\n          break loop\n        }\n        break\n      default:\n        if (ch > 8 && ch < 14 || ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {\n          ++this.pos;\n        } else {\n          break loop\n        }\n      }\n    }\n  };\n\n  // Called at the end of every token. Sets `end`, `val`, and\n  // maintains `context` and `exprAllowed`, and skips the space after\n  // the token, so that the next one's `start` will point at the\n  // right position.\n\n  pp.finishToken = function(type, val) {\n    this.end = this.pos;\n    if (this.options.locations) { this.endLoc = this.curPosition(); }\n    var prevType = this.type;\n    this.type = type;\n    this.value = val;\n\n    this.updateContext(prevType);\n  };\n\n  // ### Token reading\n\n  // This is the function that is called to fetch the next token. It\n  // is somewhat obscure, because it works in character codes rather\n  // than characters, and because operator parsing has been inlined\n  // into it.\n  //\n  // All in the name of speed.\n  //\n  pp.readToken_dot = function() {\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next >= 48 && next <= 57) { return this.readNumber(true) }\n    var next2 = this.input.charCodeAt(this.pos + 2);\n    if (this.options.ecmaVersion >= 6 && next === 46 && next2 === 46) { // 46 = dot '.'\n      this.pos += 3;\n      return this.finishToken(types$1.ellipsis)\n    } else {\n      ++this.pos;\n      return this.finishToken(types$1.dot)\n    }\n  };\n\n  pp.readToken_slash = function() { // '/'\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (this.exprAllowed) { ++this.pos; return this.readRegexp() }\n    if (next === 61) { return this.finishOp(types$1.assign, 2) }\n    return this.finishOp(types$1.slash, 1)\n  };\n\n  pp.readToken_mult_modulo_exp = function(code) { // '%*'\n    var next = this.input.charCodeAt(this.pos + 1);\n    var size = 1;\n    var tokentype = code === 42 ? types$1.star : types$1.modulo;\n\n    // exponentiation operator ** and **=\n    if (this.options.ecmaVersion >= 7 && code === 42 && next === 42) {\n      ++size;\n      tokentype = types$1.starstar;\n      next = this.input.charCodeAt(this.pos + 2);\n    }\n\n    if (next === 61) { return this.finishOp(types$1.assign, size + 1) }\n    return this.finishOp(tokentype, size)\n  };\n\n  pp.readToken_pipe_amp = function(code) { // '|&'\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === code) {\n      if (this.options.ecmaVersion >= 12) {\n        var next2 = this.input.charCodeAt(this.pos + 2);\n        if (next2 === 61) { return this.finishOp(types$1.assign, 3) }\n      }\n      return this.finishOp(code === 124 ? types$1.logicalOR : types$1.logicalAND, 2)\n    }\n    if (next === 61) { return this.finishOp(types$1.assign, 2) }\n    return this.finishOp(code === 124 ? types$1.bitwiseOR : types$1.bitwiseAND, 1)\n  };\n\n  pp.readToken_caret = function() { // '^'\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === 61) { return this.finishOp(types$1.assign, 2) }\n    return this.finishOp(types$1.bitwiseXOR, 1)\n  };\n\n  pp.readToken_plus_min = function(code) { // '+-'\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === code) {\n      if (next === 45 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 62 &&\n          (this.lastTokEnd === 0 || lineBreak.test(this.input.slice(this.lastTokEnd, this.pos)))) {\n        // A `-->` line comment\n        this.skipLineComment(3);\n        this.skipSpace();\n        return this.nextToken()\n      }\n      return this.finishOp(types$1.incDec, 2)\n    }\n    if (next === 61) { return this.finishOp(types$1.assign, 2) }\n    return this.finishOp(types$1.plusMin, 1)\n  };\n\n  pp.readToken_lt_gt = function(code) { // '<>'\n    var next = this.input.charCodeAt(this.pos + 1);\n    var size = 1;\n    if (next === code) {\n      size = code === 62 && this.input.charCodeAt(this.pos + 2) === 62 ? 3 : 2;\n      if (this.input.charCodeAt(this.pos + size) === 61) { return this.finishOp(types$1.assign, size + 1) }\n      return this.finishOp(types$1.bitShift, size)\n    }\n    if (next === 33 && code === 60 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 45 &&\n        this.input.charCodeAt(this.pos + 3) === 45) {\n      // `<!--`, an XML-style comment that should be interpreted as a line comment\n      this.skipLineComment(4);\n      this.skipSpace();\n      return this.nextToken()\n    }\n    if (next === 61) { size = 2; }\n    return this.finishOp(types$1.relational, size)\n  };\n\n  pp.readToken_eq_excl = function(code) { // '=!'\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === 61) { return this.finishOp(types$1.equality, this.input.charCodeAt(this.pos + 2) === 61 ? 3 : 2) }\n    if (code === 61 && next === 62 && this.options.ecmaVersion >= 6) { // '=>'\n      this.pos += 2;\n      return this.finishToken(types$1.arrow)\n    }\n    return this.finishOp(code === 61 ? types$1.eq : types$1.prefix, 1)\n  };\n\n  pp.readToken_question = function() { // '?'\n    var ecmaVersion = this.options.ecmaVersion;\n    if (ecmaVersion >= 11) {\n      var next = this.input.charCodeAt(this.pos + 1);\n      if (next === 46) {\n        var next2 = this.input.charCodeAt(this.pos + 2);\n        if (next2 < 48 || next2 > 57) { return this.finishOp(types$1.questionDot, 2) }\n      }\n      if (next === 63) {\n        if (ecmaVersion >= 12) {\n          var next2$1 = this.input.charCodeAt(this.pos + 2);\n          if (next2$1 === 61) { return this.finishOp(types$1.assign, 3) }\n        }\n        return this.finishOp(types$1.coalesce, 2)\n      }\n    }\n    return this.finishOp(types$1.question, 1)\n  };\n\n  pp.readToken_numberSign = function() { // '#'\n    var ecmaVersion = this.options.ecmaVersion;\n    var code = 35; // '#'\n    if (ecmaVersion >= 13) {\n      ++this.pos;\n      code = this.fullCharCodeAtPos();\n      if (isIdentifierStart(code, true) || code === 92 /* '\\' */) {\n        return this.finishToken(types$1.privateId, this.readWord1())\n      }\n    }\n\n    this.raise(this.pos, \"Unexpected character '\" + codePointToString(code) + \"'\");\n  };\n\n  pp.getTokenFromCode = function(code) {\n    switch (code) {\n    // The interpretation of a dot depends on whether it is followed\n    // by a digit or another two dots.\n    case 46: // '.'\n      return this.readToken_dot()\n\n    // Punctuation tokens.\n    case 40: ++this.pos; return this.finishToken(types$1.parenL)\n    case 41: ++this.pos; return this.finishToken(types$1.parenR)\n    case 59: ++this.pos; return this.finishToken(types$1.semi)\n    case 44: ++this.pos; return this.finishToken(types$1.comma)\n    case 91: ++this.pos; return this.finishToken(types$1.bracketL)\n    case 93: ++this.pos; return this.finishToken(types$1.bracketR)\n    case 123: ++this.pos; return this.finishToken(types$1.braceL)\n    case 125: ++this.pos; return this.finishToken(types$1.braceR)\n    case 58: ++this.pos; return this.finishToken(types$1.colon)\n\n    case 96: // '`'\n      if (this.options.ecmaVersion < 6) { break }\n      ++this.pos;\n      return this.finishToken(types$1.backQuote)\n\n    case 48: // '0'\n      var next = this.input.charCodeAt(this.pos + 1);\n      if (next === 120 || next === 88) { return this.readRadixNumber(16) } // '0x', '0X' - hex number\n      if (this.options.ecmaVersion >= 6) {\n        if (next === 111 || next === 79) { return this.readRadixNumber(8) } // '0o', '0O' - octal number\n        if (next === 98 || next === 66) { return this.readRadixNumber(2) } // '0b', '0B' - binary number\n      }\n\n    // Anything else beginning with a digit is an integer, octal\n    // number, or float.\n    case 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 57: // 1-9\n      return this.readNumber(false)\n\n    // Quotes produce strings.\n    case 34: case 39: // '\"', \"'\"\n      return this.readString(code)\n\n    // Operators are parsed inline in tiny state machines. '=' (61) is\n    // often referred to. `finishOp` simply skips the amount of\n    // characters it is given as second argument, and returns a token\n    // of the type given by its first argument.\n    case 47: // '/'\n      return this.readToken_slash()\n\n    case 37: case 42: // '%*'\n      return this.readToken_mult_modulo_exp(code)\n\n    case 124: case 38: // '|&'\n      return this.readToken_pipe_amp(code)\n\n    case 94: // '^'\n      return this.readToken_caret()\n\n    case 43: case 45: // '+-'\n      return this.readToken_plus_min(code)\n\n    case 60: case 62: // '<>'\n      return this.readToken_lt_gt(code)\n\n    case 61: case 33: // '=!'\n      return this.readToken_eq_excl(code)\n\n    case 63: // '?'\n      return this.readToken_question()\n\n    case 126: // '~'\n      return this.finishOp(types$1.prefix, 1)\n\n    case 35: // '#'\n      return this.readToken_numberSign()\n    }\n\n    this.raise(this.pos, \"Unexpected character '\" + codePointToString(code) + \"'\");\n  };\n\n  pp.finishOp = function(type, size) {\n    var str = this.input.slice(this.pos, this.pos + size);\n    this.pos += size;\n    return this.finishToken(type, str)\n  };\n\n  pp.readRegexp = function() {\n    var escaped, inClass, start = this.pos;\n    for (;;) {\n      if (this.pos >= this.input.length) { this.raise(start, \"Unterminated regular expression\"); }\n      var ch = this.input.charAt(this.pos);\n      if (lineBreak.test(ch)) { this.raise(start, \"Unterminated regular expression\"); }\n      if (!escaped) {\n        if (ch === \"[\") { inClass = true; }\n        else if (ch === \"]\" && inClass) { inClass = false; }\n        else if (ch === \"/\" && !inClass) { break }\n        escaped = ch === \"\\\\\";\n      } else { escaped = false; }\n      ++this.pos;\n    }\n    var pattern = this.input.slice(start, this.pos);\n    ++this.pos;\n    var flagsStart = this.pos;\n    var flags = this.readWord1();\n    if (this.containsEsc) { this.unexpected(flagsStart); }\n\n    // Validate pattern\n    var state = this.regexpState || (this.regexpState = new RegExpValidationState(this));\n    state.reset(start, pattern, flags);\n    this.validateRegExpFlags(state);\n    this.validateRegExpPattern(state);\n\n    // Create Literal#value property value.\n    var value = null;\n    try {\n      value = new RegExp(pattern, flags);\n    } catch (e) {\n      // ESTree requires null if it failed to instantiate RegExp object.\n      // https://github.com/estree/estree/blob/a27003adf4fd7bfad44de9cef372a2eacd527b1c/es5.md#regexpliteral\n    }\n\n    return this.finishToken(types$1.regexp, {pattern: pattern, flags: flags, value: value})\n  };\n\n  // Read an integer in the given radix. Return null if zero digits\n  // were read, the integer value otherwise. When `len` is given, this\n  // will return `null` unless the integer has exactly `len` digits.\n\n  pp.readInt = function(radix, len, maybeLegacyOctalNumericLiteral) {\n    // `len` is used for character escape sequences. In that case, disallow separators.\n    var allowSeparators = this.options.ecmaVersion >= 12 && len === undefined;\n\n    // `maybeLegacyOctalNumericLiteral` is true if it doesn't have prefix (0x,0o,0b)\n    // and isn't fraction part nor exponent part. In that case, if the first digit\n    // is zero then disallow separators.\n    var isLegacyOctalNumericLiteral = maybeLegacyOctalNumericLiteral && this.input.charCodeAt(this.pos) === 48;\n\n    var start = this.pos, total = 0, lastCode = 0;\n    for (var i = 0, e = len == null ? Infinity : len; i < e; ++i, ++this.pos) {\n      var code = this.input.charCodeAt(this.pos), val = (void 0);\n\n      if (allowSeparators && code === 95) {\n        if (isLegacyOctalNumericLiteral) { this.raiseRecoverable(this.pos, \"Numeric separator is not allowed in legacy octal numeric literals\"); }\n        if (lastCode === 95) { this.raiseRecoverable(this.pos, \"Numeric separator must be exactly one underscore\"); }\n        if (i === 0) { this.raiseRecoverable(this.pos, \"Numeric separator is not allowed at the first of digits\"); }\n        lastCode = code;\n        continue\n      }\n\n      if (code >= 97) { val = code - 97 + 10; } // a\n      else if (code >= 65) { val = code - 65 + 10; } // A\n      else if (code >= 48 && code <= 57) { val = code - 48; } // 0-9\n      else { val = Infinity; }\n      if (val >= radix) { break }\n      lastCode = code;\n      total = total * radix + val;\n    }\n\n    if (allowSeparators && lastCode === 95) { this.raiseRecoverable(this.pos - 1, \"Numeric separator is not allowed at the last of digits\"); }\n    if (this.pos === start || len != null && this.pos - start !== len) { return null }\n\n    return total\n  };\n\n  function stringToNumber(str, isLegacyOctalNumericLiteral) {\n    if (isLegacyOctalNumericLiteral) {\n      return parseInt(str, 8)\n    }\n\n    // `parseFloat(value)` stops parsing at the first numeric separator then returns a wrong value.\n    return parseFloat(str.replace(/_/g, \"\"))\n  }\n\n  function stringToBigInt(str) {\n    if (typeof BigInt !== \"function\") {\n      return null\n    }\n\n    // `BigInt(value)` throws syntax error if the string contains numeric separators.\n    return BigInt(str.replace(/_/g, \"\"))\n  }\n\n  pp.readRadixNumber = function(radix) {\n    var start = this.pos;\n    this.pos += 2; // 0x\n    var val = this.readInt(radix);\n    if (val == null) { this.raise(this.start + 2, \"Expected number in radix \" + radix); }\n    if (this.options.ecmaVersion >= 11 && this.input.charCodeAt(this.pos) === 110) {\n      val = stringToBigInt(this.input.slice(start, this.pos));\n      ++this.pos;\n    } else if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n    return this.finishToken(types$1.num, val)\n  };\n\n  // Read an integer, octal integer, or floating-point number.\n\n  pp.readNumber = function(startsWithDot) {\n    var start = this.pos;\n    if (!startsWithDot && this.readInt(10, undefined, true) === null) { this.raise(start, \"Invalid number\"); }\n    var octal = this.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n    if (octal && this.strict) { this.raise(start, \"Invalid number\"); }\n    var next = this.input.charCodeAt(this.pos);\n    if (!octal && !startsWithDot && this.options.ecmaVersion >= 11 && next === 110) {\n      var val$1 = stringToBigInt(this.input.slice(start, this.pos));\n      ++this.pos;\n      if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n      return this.finishToken(types$1.num, val$1)\n    }\n    if (octal && /[89]/.test(this.input.slice(start, this.pos))) { octal = false; }\n    if (next === 46 && !octal) { // '.'\n      ++this.pos;\n      this.readInt(10);\n      next = this.input.charCodeAt(this.pos);\n    }\n    if ((next === 69 || next === 101) && !octal) { // 'eE'\n      next = this.input.charCodeAt(++this.pos);\n      if (next === 43 || next === 45) { ++this.pos; } // '+-'\n      if (this.readInt(10) === null) { this.raise(start, \"Invalid number\"); }\n    }\n    if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n\n    var val = stringToNumber(this.input.slice(start, this.pos), octal);\n    return this.finishToken(types$1.num, val)\n  };\n\n  // Read a string value, interpreting backslash-escapes.\n\n  pp.readCodePoint = function() {\n    var ch = this.input.charCodeAt(this.pos), code;\n\n    if (ch === 123) { // '{'\n      if (this.options.ecmaVersion < 6) { this.unexpected(); }\n      var codePos = ++this.pos;\n      code = this.readHexChar(this.input.indexOf(\"}\", this.pos) - this.pos);\n      ++this.pos;\n      if (code > 0x10FFFF) { this.invalidStringToken(codePos, \"Code point out of bounds\"); }\n    } else {\n      code = this.readHexChar(4);\n    }\n    return code\n  };\n\n  pp.readString = function(quote) {\n    var out = \"\", chunkStart = ++this.pos;\n    for (;;) {\n      if (this.pos >= this.input.length) { this.raise(this.start, \"Unterminated string constant\"); }\n      var ch = this.input.charCodeAt(this.pos);\n      if (ch === quote) { break }\n      if (ch === 92) { // '\\'\n        out += this.input.slice(chunkStart, this.pos);\n        out += this.readEscapedChar(false);\n        chunkStart = this.pos;\n      } else if (ch === 0x2028 || ch === 0x2029) {\n        if (this.options.ecmaVersion < 10) { this.raise(this.start, \"Unterminated string constant\"); }\n        ++this.pos;\n        if (this.options.locations) {\n          this.curLine++;\n          this.lineStart = this.pos;\n        }\n      } else {\n        if (isNewLine(ch)) { this.raise(this.start, \"Unterminated string constant\"); }\n        ++this.pos;\n      }\n    }\n    out += this.input.slice(chunkStart, this.pos++);\n    return this.finishToken(types$1.string, out)\n  };\n\n  // Reads template string tokens.\n\n  var INVALID_TEMPLATE_ESCAPE_ERROR = {};\n\n  pp.tryReadTemplateToken = function() {\n    this.inTemplateElement = true;\n    try {\n      this.readTmplToken();\n    } catch (err) {\n      if (err === INVALID_TEMPLATE_ESCAPE_ERROR) {\n        this.readInvalidTemplateToken();\n      } else {\n        throw err\n      }\n    }\n\n    this.inTemplateElement = false;\n  };\n\n  pp.invalidStringToken = function(position, message) {\n    if (this.inTemplateElement && this.options.ecmaVersion >= 9) {\n      throw INVALID_TEMPLATE_ESCAPE_ERROR\n    } else {\n      this.raise(position, message);\n    }\n  };\n\n  pp.readTmplToken = function() {\n    var out = \"\", chunkStart = this.pos;\n    for (;;) {\n      if (this.pos >= this.input.length) { this.raise(this.start, \"Unterminated template\"); }\n      var ch = this.input.charCodeAt(this.pos);\n      if (ch === 96 || ch === 36 && this.input.charCodeAt(this.pos + 1) === 123) { // '`', '${'\n        if (this.pos === this.start && (this.type === types$1.template || this.type === types$1.invalidTemplate)) {\n          if (ch === 36) {\n            this.pos += 2;\n            return this.finishToken(types$1.dollarBraceL)\n          } else {\n            ++this.pos;\n            return this.finishToken(types$1.backQuote)\n          }\n        }\n        out += this.input.slice(chunkStart, this.pos);\n        return this.finishToken(types$1.template, out)\n      }\n      if (ch === 92) { // '\\'\n        out += this.input.slice(chunkStart, this.pos);\n        out += this.readEscapedChar(true);\n        chunkStart = this.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.pos);\n        ++this.pos;\n        switch (ch) {\n        case 13:\n          if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; }\n        case 10:\n          out += \"\\n\";\n          break\n        default:\n          out += String.fromCharCode(ch);\n          break\n        }\n        if (this.options.locations) {\n          ++this.curLine;\n          this.lineStart = this.pos;\n        }\n        chunkStart = this.pos;\n      } else {\n        ++this.pos;\n      }\n    }\n  };\n\n  // Reads a template token to search for the end, without validating any escape sequences\n  pp.readInvalidTemplateToken = function() {\n    for (; this.pos < this.input.length; this.pos++) {\n      switch (this.input[this.pos]) {\n      case \"\\\\\":\n        ++this.pos;\n        break\n\n      case \"$\":\n        if (this.input[this.pos + 1] !== \"{\") {\n          break\n        }\n\n      // falls through\n      case \"`\":\n        return this.finishToken(types$1.invalidTemplate, this.input.slice(this.start, this.pos))\n\n      // no default\n      }\n    }\n    this.raise(this.start, \"Unterminated template\");\n  };\n\n  // Used to read escaped characters\n\n  pp.readEscapedChar = function(inTemplate) {\n    var ch = this.input.charCodeAt(++this.pos);\n    ++this.pos;\n    switch (ch) {\n    case 110: return \"\\n\" // 'n' -> '\\n'\n    case 114: return \"\\r\" // 'r' -> '\\r'\n    case 120: return String.fromCharCode(this.readHexChar(2)) // 'x'\n    case 117: return codePointToString(this.readCodePoint()) // 'u'\n    case 116: return \"\\t\" // 't' -> '\\t'\n    case 98: return \"\\b\" // 'b' -> '\\b'\n    case 118: return \"\\u000b\" // 'v' -> '\\u000b'\n    case 102: return \"\\f\" // 'f' -> '\\f'\n    case 13: if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; } // '\\r\\n'\n    case 10: // ' \\n'\n      if (this.options.locations) { this.lineStart = this.pos; ++this.curLine; }\n      return \"\"\n    case 56:\n    case 57:\n      if (this.strict) {\n        this.invalidStringToken(\n          this.pos - 1,\n          \"Invalid escape sequence\"\n        );\n      }\n      if (inTemplate) {\n        var codePos = this.pos - 1;\n\n        this.invalidStringToken(\n          codePos,\n          \"Invalid escape sequence in template string\"\n        );\n      }\n    default:\n      if (ch >= 48 && ch <= 55) {\n        var octalStr = this.input.substr(this.pos - 1, 3).match(/^[0-7]+/)[0];\n        var octal = parseInt(octalStr, 8);\n        if (octal > 255) {\n          octalStr = octalStr.slice(0, -1);\n          octal = parseInt(octalStr, 8);\n        }\n        this.pos += octalStr.length - 1;\n        ch = this.input.charCodeAt(this.pos);\n        if ((octalStr !== \"0\" || ch === 56 || ch === 57) && (this.strict || inTemplate)) {\n          this.invalidStringToken(\n            this.pos - 1 - octalStr.length,\n            inTemplate\n              ? \"Octal literal in template string\"\n              : \"Octal literal in strict mode\"\n          );\n        }\n        return String.fromCharCode(octal)\n      }\n      if (isNewLine(ch)) {\n        // Unicode new line characters after \\ get removed from output in both\n        // template literals and strings\n        return \"\"\n      }\n      return String.fromCharCode(ch)\n    }\n  };\n\n  // Used to read character escape sequences ('\\x', '\\u', '\\U').\n\n  pp.readHexChar = function(len) {\n    var codePos = this.pos;\n    var n = this.readInt(16, len);\n    if (n === null) { this.invalidStringToken(codePos, \"Bad character escape sequence\"); }\n    return n\n  };\n\n  // Read an identifier, and return it as a string. Sets `this.containsEsc`\n  // to whether the word contained a '\\u' escape.\n  //\n  // Incrementally adds only escaped chars, adding other chunks as-is\n  // as a micro-optimization.\n\n  pp.readWord1 = function() {\n    this.containsEsc = false;\n    var word = \"\", first = true, chunkStart = this.pos;\n    var astral = this.options.ecmaVersion >= 6;\n    while (this.pos < this.input.length) {\n      var ch = this.fullCharCodeAtPos();\n      if (isIdentifierChar(ch, astral)) {\n        this.pos += ch <= 0xffff ? 1 : 2;\n      } else if (ch === 92) { // \"\\\"\n        this.containsEsc = true;\n        word += this.input.slice(chunkStart, this.pos);\n        var escStart = this.pos;\n        if (this.input.charCodeAt(++this.pos) !== 117) // \"u\"\n          { this.invalidStringToken(this.pos, \"Expecting Unicode escape sequence \\\\uXXXX\"); }\n        ++this.pos;\n        var esc = this.readCodePoint();\n        if (!(first ? isIdentifierStart : isIdentifierChar)(esc, astral))\n          { this.invalidStringToken(escStart, \"Invalid Unicode escape\"); }\n        word += codePointToString(esc);\n        chunkStart = this.pos;\n      } else {\n        break\n      }\n      first = false;\n    }\n    return word + this.input.slice(chunkStart, this.pos)\n  };\n\n  // Read an identifier or keyword token. Will check for reserved\n  // words when necessary.\n\n  pp.readWord = function() {\n    var word = this.readWord1();\n    var type = types$1.name;\n    if (this.keywords.test(word)) {\n      type = keywords[word];\n    }\n    return this.finishToken(type, word)\n  };\n\n  // Acorn is a tiny, fast JavaScript parser written in JavaScript.\n\n  var version = \"8.8.2\";\n\n  Parser.acorn = {\n    Parser: Parser,\n    version: version,\n    defaultOptions: defaultOptions,\n    Position: Position,\n    SourceLocation: SourceLocation,\n    getLineInfo: getLineInfo,\n    Node: Node,\n    TokenType: TokenType,\n    tokTypes: types$1,\n    keywordTypes: keywords,\n    TokContext: TokContext,\n    tokContexts: types,\n    isIdentifierChar: isIdentifierChar,\n    isIdentifierStart: isIdentifierStart,\n    Token: Token,\n    isNewLine: isNewLine,\n    lineBreak: lineBreak,\n    lineBreakG: lineBreakG,\n    nonASCIIwhitespace: nonASCIIwhitespace\n  };\n\n  // The main exported interface (under `self.acorn` when in the\n  // browser) is a `parse` function that takes a code string and\n  // returns an abstract syntax tree as specified by [Mozilla parser\n  // API][api].\n  //\n  // [api]: https://developer.mozilla.org/en-US/docs/SpiderMonkey/Parser_API\n\n  function parse(input, options) {\n    return Parser.parse(input, options)\n  }\n\n  // This function tries to parse a single expression at a given\n  // offset in a string. Useful for parsing mixed-language formats\n  // that embed JavaScript expressions.\n\n  function parseExpressionAt(input, pos, options) {\n    return Parser.parseExpressionAt(input, pos, options)\n  }\n\n  // Acorn is organized as a tokenizer and a recursive-descent parser.\n  // The `tokenizer` export provides an interface to the tokenizer.\n\n  function tokenizer(input, options) {\n    return Parser.tokenizer(input, options)\n  }\n\n  exports.Node = Node;\n  exports.Parser = Parser;\n  exports.Position = Position;\n  exports.SourceLocation = SourceLocation;\n  exports.TokContext = TokContext;\n  exports.Token = Token;\n  exports.TokenType = TokenType;\n  exports.defaultOptions = defaultOptions;\n  exports.getLineInfo = getLineInfo;\n  exports.isIdentifierChar = isIdentifierChar;\n  exports.isIdentifierStart = isIdentifierStart;\n  exports.isNewLine = isNewLine;\n  exports.keywordTypes = keywords;\n  exports.lineBreak = lineBreak;\n  exports.lineBreakG = lineBreakG;\n  exports.nonASCIIwhitespace = nonASCIIwhitespace;\n  exports.parse = parse;\n  exports.parseExpressionAt = parseExpressionAt;\n  exports.tokContexts = types;\n  exports.tokTypes = types$1;\n  exports.tokenizer = tokenizer;\n  exports.version = version;\n\n}));\n","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","//\n// format - printf-like string formatting for JavaScript\n// github.com/samsonjs/format\n// @_sjs\n//\n// Copyright 2010 - 2013 Sami Samhuri <sami@samhuri.net>\n//\n// MIT License\n// http://sjs.mit-license.org\n//\n\n;(function() {\n\n  //// Export the API\n  var namespace;\n\n  // CommonJS / Node module\n  if (typeof module !== 'undefined') {\n    namespace = module.exports = format;\n  }\n\n  // Browsers and other environments\n  else {\n    // Get the global object. Works in ES3, ES5, and ES5 strict mode.\n    namespace = (function(){ return this || (1,eval)('this') }());\n  }\n\n  namespace.format = format;\n  namespace.vsprintf = vsprintf;\n\n  if (typeof console !== 'undefined' && typeof console.log === 'function') {\n    namespace.printf = printf;\n  }\n\n  function printf(/* ... */) {\n    console.log(format.apply(null, arguments));\n  }\n\n  function vsprintf(fmt, replacements) {\n    return format.apply(null, [fmt].concat(replacements));\n  }\n\n  function format(fmt) {\n    var argIndex = 1 // skip initial format argument\n      , args = [].slice.call(arguments)\n      , i = 0\n      , n = fmt.length\n      , result = ''\n      , c\n      , escaped = false\n      , arg\n      , tmp\n      , leadingZero = false\n      , precision\n      , nextArg = function() { return args[argIndex++]; }\n      , slurpNumber = function() {\n          var digits = '';\n          while (/\\d/.test(fmt[i])) {\n            digits += fmt[i++];\n            c = fmt[i];\n          }\n          return digits.length > 0 ? parseInt(digits) : null;\n        }\n      ;\n    for (; i < n; ++i) {\n      c = fmt[i];\n      if (escaped) {\n        escaped = false;\n        if (c == '.') {\n          leadingZero = false;\n          c = fmt[++i];\n        }\n        else if (c == '0' && fmt[i + 1] == '.') {\n          leadingZero = true;\n          i += 2;\n          c = fmt[i];\n        }\n        else {\n          leadingZero = true;\n        }\n        precision = slurpNumber();\n        switch (c) {\n        case 'b': // number in binary\n          result += parseInt(nextArg(), 10).toString(2);\n          break;\n        case 'c': // character\n          arg = nextArg();\n          if (typeof arg === 'string' || arg instanceof String)\n            result += arg;\n          else\n            result += String.fromCharCode(parseInt(arg, 10));\n          break;\n        case 'd': // number in decimal\n          result += parseInt(nextArg(), 10);\n          break;\n        case 'f': // floating point number\n          tmp = String(parseFloat(nextArg()).toFixed(precision || 6));\n          result += leadingZero ? tmp : tmp.replace(/^0/, '');\n          break;\n        case 'j': // JSON\n          result += JSON.stringify(nextArg());\n          break;\n        case 'o': // number in octal\n          result += '0' + parseInt(nextArg(), 10).toString(8);\n          break;\n        case 's': // string\n          result += nextArg();\n          break;\n        case 'x': // lowercase hexadecimal\n          result += '0x' + parseInt(nextArg(), 10).toString(16);\n          break;\n        case 'X': // uppercase hexadecimal\n          result += '0x' + parseInt(nextArg(), 10).toString(16).toUpperCase();\n          break;\n        default:\n          result += c;\n          break;\n        }\n      } else if (c === '%') {\n        escaped = true;\n      } else {\n        result += c;\n      }\n    }\n    return result;\n  }\n\n}());\n","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function(style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function(node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","/**\n * @license React\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var b=Symbol.for(\"react.element\"),c=Symbol.for(\"react.portal\"),d=Symbol.for(\"react.fragment\"),e=Symbol.for(\"react.strict_mode\"),f=Symbol.for(\"react.profiler\"),g=Symbol.for(\"react.provider\"),h=Symbol.for(\"react.context\"),k=Symbol.for(\"react.server_context\"),l=Symbol.for(\"react.forward_ref\"),m=Symbol.for(\"react.suspense\"),n=Symbol.for(\"react.suspense_list\"),p=Symbol.for(\"react.memo\"),q=Symbol.for(\"react.lazy\"),t=Symbol.for(\"react.offscreen\"),u;u=Symbol.for(\"react.module.reference\");\nfunction v(a){if(\"object\"===typeof a&&null!==a){var r=a.$$typeof;switch(r){case b:switch(a=a.type,a){case d:case f:case e:case m:case n:return a;default:switch(a=a&&a.$$typeof,a){case k:case h:case l:case q:case p:case g:return a;default:return r}}case c:return r}}}exports.ContextConsumer=h;exports.ContextProvider=g;exports.Element=b;exports.ForwardRef=l;exports.Fragment=d;exports.Lazy=q;exports.Memo=p;exports.Portal=c;exports.Profiler=f;exports.StrictMode=e;exports.Suspense=m;\nexports.SuspenseList=n;exports.isAsyncMode=function(){return!1};exports.isConcurrentMode=function(){return!1};exports.isContextConsumer=function(a){return v(a)===h};exports.isContextProvider=function(a){return v(a)===g};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===b};exports.isForwardRef=function(a){return v(a)===l};exports.isFragment=function(a){return v(a)===d};exports.isLazy=function(a){return v(a)===q};exports.isMemo=function(a){return v(a)===p};\nexports.isPortal=function(a){return v(a)===c};exports.isProfiler=function(a){return v(a)===f};exports.isStrictMode=function(a){return v(a)===e};exports.isSuspense=function(a){return v(a)===m};exports.isSuspenseList=function(a){return v(a)===n};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===d||a===f||a===e||a===m||a===n||a===t||\"object\"===typeof a&&null!==a&&(a.$$typeof===q||a.$$typeof===p||a.$$typeof===g||a.$$typeof===h||a.$$typeof===l||a.$$typeof===u||void 0!==a.getModuleId)?!0:!1};exports.typeOf=v;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","var parse = require('inline-style-parser');\n\n/**\n * Parses inline style to object.\n *\n * @example\n * // returns { 'line-height': '42' }\n * StyleToObject('line-height: 42;');\n *\n * @param  {String}      style      - The inline style.\n * @param  {Function}    [iterator] - The iterator function.\n * @return {null|Object}\n */\nfunction StyleToObject(style, iterator) {\n  var output = null;\n  if (!style || typeof style !== 'string') {\n    return output;\n  }\n\n  var declaration;\n  var declarations = parse(style);\n  var hasIterator = typeof iterator === 'function';\n  var property;\n  var value;\n\n  for (var i = 0, len = declarations.length; i < len; i++) {\n    declaration = declarations[i];\n    property = declaration.property;\n    value = declaration.value;\n\n    if (hasIterator) {\n      iterator(property, value, declaration);\n    } else if (value) {\n      output || (output = {});\n      output[property] = value;\n    }\n  }\n\n  return output;\n}\n\nmodule.exports = StyleToObject;\nmodule.exports.default = StyleToObject; // ESM support\n","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nmodule.exports = _assertThisInitialized, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nmodule.exports = _classCallCheck, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nmodule.exports = _createClass, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var getPrototypeOf = require(\"./getPrototypeOf.js\");\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct.js\");\nvar possibleConstructorReturn = require(\"./possibleConstructorReturn.js\");\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return possibleConstructorReturn(this, result);\n  };\n}\nmodule.exports = _createSuper, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var superPropBase = require(\"./superPropBase.js\");\nfunction _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    module.exports = _get = Reflect.get.bind(), module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  } else {\n    module.exports = _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  }\n  return _get.apply(this, arguments);\n}\nmodule.exports = _get, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _getPrototypeOf(o);\n}\nmodule.exports = _getPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\nmodule.exports = _inherits, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nmodule.exports = _isNativeReflectConstruct, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar assertThisInitialized = require(\"./assertThisInitialized.js\");\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}\nmodule.exports = _possibleConstructorReturn, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _setPrototypeOf(o, p);\n}\nmodule.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var getPrototypeOf = require(\"./getPrototypeOf.js\");\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}\nmodule.exports = _superPropBase, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nmodule.exports = _toPrimitive, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar toPrimitive = require(\"./toPrimitive.js\");\nfunction _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nmodule.exports = _toPropertyKey, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(obj);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","/**\n * Count how often a character (or substring) is used in a string.\n *\n * @param {string} value\n *   Value to search in.\n * @param {string} character\n *   Character (or substring) to look for.\n * @return {number}\n *   Number of times `character` occurred in `value`.\n */\nexport function ccount(value, character) {\n  const source = String(value)\n\n  if (typeof character !== 'string') {\n    throw new TypeError('Expected character')\n  }\n\n  let count = 0\n  let index = source.indexOf(character)\n\n  while (index !== -1) {\n    count++\n    index = source.indexOf(character, index + character.length)\n  }\n\n  return count\n}\n","/// <reference lib=\"dom\" />\n\n/* eslint-env browser */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string|false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const char = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  if (char.charCodeAt(char.length - 1) === 59 /* `;` */ && value !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return char === characterReference ? false : char\n}\n","/**\n * @typedef {import('mdast').Parent} MdastParent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').Text} Text\n * @typedef {import('unist-util-visit-parents').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef {Content | Root} Node\n * @typedef {Extract<Node, MdastParent>} Parent\n * @typedef {Exclude<Parent, Root>} ContentParent\n *\n * @typedef RegExpMatchObject\n *   Info on the match.\n * @property {number} index\n *   The index of the search at which the result was found.\n * @property {string} input\n *   A copy of the search string in the text node.\n * @property {[Root, ...Array<ContentParent>, Text]} stack\n *   All ancestors of the text node, where the last node is the text itself.\n *\n * @callback ReplaceFunction\n *   Callback called when a search matches.\n * @param {...any} parameters\n *   The parameters are the result of corresponding search expression:\n *\n *   * `value` (`string`) — whole match\n *   * `...capture` (`Array<string>`) — matches from regex capture groups\n *   * `match` (`RegExpMatchObject`) — info on the match\n * @returns {Array<PhrasingContent> | PhrasingContent | string | false | undefined | null}\n *   Thing to replace with.\n *\n *   * when `null`, `undefined`, `''`, remove the match\n *   * …or when `false`, do not replace at all\n *   * …or when `string`, replace with a text node of that value\n *   * …or when `Node` or `Array<Node>`, replace with those nodes\n *\n * @typedef {string | RegExp} Find\n *   Pattern to find.\n *\n *   Strings are escaped and then turned into global expressions.\n *\n * @typedef {Array<FindAndReplaceTuple>} FindAndReplaceList\n *   Several find and replaces, in array form.\n * @typedef {Record<string, Replace>} FindAndReplaceSchema\n *   Several find and replaces, in object form.\n * @typedef {[Find, Replace]} FindAndReplaceTuple\n *   Find and replace in tuple form.\n * @typedef {string | ReplaceFunction} Replace\n *   Thing to replace with.\n * @typedef {[RegExp, ReplaceFunction]} Pair\n *   Normalized find and replace.\n * @typedef {Array<Pair>} Pairs\n *   All find and replaced.\n *\n * @typedef Options\n *   Configuration.\n * @property {Test | null | undefined} [ignore]\n *   Test for which nodes to ignore.\n */\n\nimport escape from 'escape-string-regexp'\nimport {visitParents} from 'unist-util-visit-parents'\nimport {convert} from 'unist-util-is'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Find patterns in a tree and replace them.\n *\n * The algorithm searches the tree in *preorder* for complete values in `Text`\n * nodes.\n * Partial matches are not supported.\n *\n * @param tree\n *   Tree to change.\n * @param find\n *   Patterns to find.\n * @param replace\n *   Things to replace with (when `find` is `Find`) or configuration.\n * @param options\n *   Configuration (when `find` is not `Find`).\n * @returns\n *   Given, modified, tree.\n */\n// To do: next major: remove `find` & `replace` combo, remove schema.\nexport const findAndReplace =\n  /**\n   * @type {(\n   *   (<Tree extends Node>(tree: Tree, find: Find, replace?: Replace | null | undefined, options?: Options | null | undefined) => Tree) &\n   *   (<Tree extends Node>(tree: Tree, schema: FindAndReplaceSchema | FindAndReplaceList, options?: Options | null | undefined) => Tree)\n   * )}\n   **/\n  (\n    /**\n     * @template {Node} Tree\n     * @param {Tree} tree\n     * @param {Find | FindAndReplaceSchema | FindAndReplaceList} find\n     * @param {Replace | Options | null | undefined} [replace]\n     * @param {Options | null | undefined} [options]\n     * @returns {Tree}\n     */\n    function (tree, find, replace, options) {\n      /** @type {Options | null | undefined} */\n      let settings\n      /** @type {FindAndReplaceSchema|FindAndReplaceList} */\n      let schema\n\n      if (typeof find === 'string' || find instanceof RegExp) {\n        // @ts-expect-error don’t expect options twice.\n        schema = [[find, replace]]\n        settings = options\n      } else {\n        schema = find\n        // @ts-expect-error don’t expect replace twice.\n        settings = replace\n      }\n\n      if (!settings) {\n        settings = {}\n      }\n\n      const ignored = convert(settings.ignore || [])\n      const pairs = toPairs(schema)\n      let pairIndex = -1\n\n      while (++pairIndex < pairs.length) {\n        visitParents(tree, 'text', visitor)\n      }\n\n      // To do next major: don’t return the given tree.\n      return tree\n\n      /** @type {import('unist-util-visit-parents/complex-types.js').BuildVisitor<Root, 'text'>} */\n      function visitor(node, parents) {\n        let index = -1\n        /** @type {Parent | undefined} */\n        let grandparent\n\n        while (++index < parents.length) {\n          const parent = parents[index]\n\n          if (\n            ignored(\n              parent,\n              // @ts-expect-error: TS doesn’t understand but it’s perfect.\n              grandparent ? grandparent.children.indexOf(parent) : undefined,\n              grandparent\n            )\n          ) {\n            return\n          }\n\n          grandparent = parent\n        }\n\n        if (grandparent) {\n          return handler(node, parents)\n        }\n      }\n\n      /**\n       * Handle a text node which is not in an ignored parent.\n       *\n       * @param {Text} node\n       *   Text node.\n       * @param {Array<Parent>} parents\n       *   Parents.\n       * @returns {VisitorResult}\n       *   Result.\n       */\n      function handler(node, parents) {\n        const parent = parents[parents.length - 1]\n        const find = pairs[pairIndex][0]\n        const replace = pairs[pairIndex][1]\n        let start = 0\n        // @ts-expect-error: TS is wrong, some of these children can be text.\n        const index = parent.children.indexOf(node)\n        let change = false\n        /** @type {Array<PhrasingContent>} */\n        let nodes = []\n\n        find.lastIndex = 0\n\n        let match = find.exec(node.value)\n\n        while (match) {\n          const position = match.index\n          /** @type {RegExpMatchObject} */\n          const matchObject = {\n            index: match.index,\n            input: match.input,\n            // @ts-expect-error: stack is fine.\n            stack: [...parents, node]\n          }\n          let value = replace(...match, matchObject)\n\n          if (typeof value === 'string') {\n            value = value.length > 0 ? {type: 'text', value} : undefined\n          }\n\n          // It wasn’t a match after all.\n          if (value !== false) {\n            if (start !== position) {\n              nodes.push({\n                type: 'text',\n                value: node.value.slice(start, position)\n              })\n            }\n\n            if (Array.isArray(value)) {\n              nodes.push(...value)\n            } else if (value) {\n              nodes.push(value)\n            }\n\n            start = position + match[0].length\n            change = true\n          }\n\n          if (!find.global) {\n            break\n          }\n\n          match = find.exec(node.value)\n        }\n\n        if (change) {\n          if (start < node.value.length) {\n            nodes.push({type: 'text', value: node.value.slice(start)})\n          }\n\n          parent.children.splice(index, 1, ...nodes)\n        } else {\n          nodes = [node]\n        }\n\n        return index + nodes.length\n      }\n    }\n  )\n\n/**\n * Turn a schema into pairs.\n *\n * @param {FindAndReplaceSchema | FindAndReplaceList} schema\n *   Schema.\n * @returns {Pairs}\n *   Clean pairs.\n */\nfunction toPairs(schema) {\n  /** @type {Pairs} */\n  const result = []\n\n  if (typeof schema !== 'object') {\n    throw new TypeError('Expected array or object as schema')\n  }\n\n  if (Array.isArray(schema)) {\n    let index = -1\n\n    while (++index < schema.length) {\n      result.push([\n        toExpression(schema[index][0]),\n        toFunction(schema[index][1])\n      ])\n    }\n  } else {\n    /** @type {string} */\n    let key\n\n    for (key in schema) {\n      if (own.call(schema, key)) {\n        result.push([toExpression(key), toFunction(schema[key])])\n      }\n    }\n  }\n\n  return result\n}\n\n/**\n * Turn a find into an expression.\n *\n * @param {Find} find\n *   Find.\n * @returns {RegExp}\n *   Expression.\n */\nfunction toExpression(find) {\n  return typeof find === 'string' ? new RegExp(escape(find), 'g') : find\n}\n\n/**\n * Turn a replace into a function.\n *\n * @param {Replace} replace\n *   Replace.\n * @returns {ReplaceFunction}\n *   Function.\n */\nfunction toFunction(replace) {\n  return typeof replace === 'function' ? replace : () => replace\n}\n","export default function escapeStringRegexp(string) {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\t// Escape characters with special meaning either inside or outside character sets.\n\t// Use a simple backslash escape when it’s always valid, and a `\\xnn` escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.\n\treturn string\n\t\t.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\n\t\t.replace(/-/g, '\\\\x2d');\n}\n","/**\n * @typedef {import('../types.js').FlowContent} FlowContent\n * @typedef {import('../types.js').Node} Node\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').TrackFields} TrackFields\n */\n\n/**\n * @param {Parent & {children: Array<FlowContent>}} parent\n *   Parent of flow nodes.\n * @param {State} state\n *   Info passed around about the current state.\n * @param {TrackFields} info\n *   Info on where we are in the document we are generating.\n * @returns {string}\n *   Serialized children, joined by (blank) lines.\n */\nexport function containerFlow(parent, state, info) {\n  const indexStack = state.indexStack\n  const children = parent.children || []\n  const tracker = state.createTracker(info)\n  /** @type {Array<string>} */\n  const results = []\n  let index = -1\n\n  indexStack.push(-1)\n\n  while (++index < children.length) {\n    const child = children[index]\n\n    indexStack[indexStack.length - 1] = index\n\n    results.push(\n      tracker.move(\n        state.handle(child, parent, state, {\n          before: '\\n',\n          after: '\\n',\n          ...tracker.current()\n        })\n      )\n    )\n\n    if (child.type !== 'list') {\n      state.bulletLastUsed = undefined\n    }\n\n    if (index < children.length - 1) {\n      results.push(\n        tracker.move(between(child, children[index + 1], parent, state))\n      )\n    }\n  }\n\n  indexStack.pop()\n\n  return results.join('')\n}\n\n/**\n * @param {Node} left\n * @param {Node} right\n * @param {Parent} parent\n * @param {State} state\n * @returns {string}\n */\nfunction between(left, right, parent, state) {\n  let index = state.join.length\n\n  while (index--) {\n    const result = state.join[index](left, right, parent, state)\n\n    if (result === true || result === 1) {\n      break\n    }\n\n    if (typeof result === 'number') {\n      return '\\n'.repeat(1 + result)\n    }\n\n    if (result === false) {\n      return '\\n\\n<!---->\\n\\n'\n    }\n  }\n\n  return '\\n\\n'\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').PhrasingContent} PhrasingContent\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * Serialize the children of a parent that contains phrasing children.\n *\n * These children will be joined flush together.\n *\n * @param {Parent & {children: Array<PhrasingContent>}} parent\n *   Parent of flow nodes.\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Info} info\n *   Info on where we are in the document we are generating.\n * @returns {string}\n *   Serialized children, joined together.\n */\nexport function containerPhrasing(parent, state, info) {\n  const indexStack = state.indexStack\n  const children = parent.children || []\n  /** @type {Array<string>} */\n  const results = []\n  let index = -1\n  let before = info.before\n\n  indexStack.push(-1)\n  let tracker = state.createTracker(info)\n\n  while (++index < children.length) {\n    const child = children[index]\n    /** @type {string} */\n    let after\n\n    indexStack[indexStack.length - 1] = index\n\n    if (index + 1 < children.length) {\n      /** @type {Handle} */\n      // @ts-expect-error: hush, it’s actually a `zwitch`.\n      let handle = state.handle.handlers[children[index + 1].type]\n      /** @type {Handle} */\n      // @ts-expect-error: hush, it’s actually a `zwitch`.\n      if (handle && handle.peek) handle = handle.peek\n      after = handle\n        ? handle(children[index + 1], parent, state, {\n            before: '',\n            after: '',\n            ...tracker.current()\n          }).charAt(0)\n        : ''\n    } else {\n      after = info.after\n    }\n\n    // In some cases, html (text) can be found in phrasing right after an eol.\n    // When we’d serialize that, in most cases that would be seen as html\n    // (flow).\n    // As we can’t escape or so to prevent it from happening, we take a somewhat\n    // reasonable approach: replace that eol with a space.\n    // See: <https://github.com/syntax-tree/mdast-util-to-markdown/issues/15>\n    if (\n      results.length > 0 &&\n      (before === '\\r' || before === '\\n') &&\n      child.type === 'html'\n    ) {\n      results[results.length - 1] = results[results.length - 1].replace(\n        /(\\r?\\n|\\r)$/,\n        ' '\n      )\n      before = ' '\n\n      // To do: does this work to reset tracker?\n      tracker = state.createTracker(info)\n      tracker.move(results.join(''))\n    }\n\n    results.push(\n      tracker.move(\n        state.handle(child, parent, state, {\n          ...tracker.current(),\n          before,\n          after\n        })\n      )\n    )\n\n    before = results[results.length - 1].slice(-1)\n  }\n\n  indexStack.pop()\n\n  return results.join('')\n}\n","/**\n * @typedef {import('../types.js').IndentLines} IndentLines\n */\n\nconst eol = /\\r?\\n|\\r/g\n\n/**\n * @type {IndentLines}\n */\nexport function indentLines(value, map) {\n  /** @type {Array<string>} */\n  const result = []\n  let start = 0\n  let line = 0\n  /** @type {RegExpExecArray | null} */\n  let match\n\n  while ((match = eol.exec(value))) {\n    one(value.slice(start, match.index))\n    result.push(match[0])\n    start = match.index + match[0].length\n    line++\n  }\n\n  one(value.slice(start))\n\n  return result.join('')\n\n  /**\n   * @param {string} value\n   */\n  function one(value) {\n    result.push(map(value, line, !value))\n  }\n}\n","/**\n * @typedef {import('../types.js').CreateTracker} CreateTracker\n * @typedef {import('../types.js').TrackCurrent} TrackCurrent\n * @typedef {import('../types.js').TrackMove} TrackMove\n * @typedef {import('../types.js').TrackShift} TrackShift\n */\n\n/**\n * Track positional info in the output.\n *\n * @type {CreateTracker}\n */\nexport function track(config) {\n  // Defaults are used to prevent crashes when older utilities somehow activate\n  // this code.\n  /* c8 ignore next 5 */\n  const options = config || {}\n  const now = options.now || {}\n  let lineShift = options.lineShift || 0\n  let line = now.line || 1\n  let column = now.column || 1\n\n  return {move, current, shift}\n\n  /**\n   * Get the current tracked info.\n   *\n   * @type {TrackCurrent}\n   */\n  function current() {\n    return {now: {line, column}, lineShift}\n  }\n\n  /**\n   * Define an increased line shift (the typical indent for lines).\n   *\n   * @type {TrackShift}\n   */\n  function shift(value) {\n    lineShift += value\n  }\n\n  /**\n   * Move past some generated markdown.\n   *\n   * @type {TrackMove}\n   */\n  function move(input) {\n    // eslint-disable-next-line unicorn/prefer-default-parameters\n    const value = input || ''\n    const chunks = value.split(/\\r?\\n|\\r/g)\n    const tail = chunks[chunks.length - 1]\n    line += chunks.length - 1\n    column =\n      chunks.length === 1 ? column + tail.length : 1 + tail.length + lineShift\n    return value\n  }\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Content} Node\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s.\n * @property {boolean | null | undefined} [includeHtml=true]\n *   Whether to use `value` of HTML.\n */\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node’s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} value\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const settings = options || emptyOptions\n  const includeImageAlt =\n    typeof settings.includeImageAlt === 'boolean'\n      ? settings.includeImageAlt\n      : true\n  const includeHtml =\n    typeof settings.includeHtml === 'boolean' ? settings.includeHtml : true\n\n  return one(value, includeImageAlt, includeHtml)\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt, includeHtml) {\n  if (node(value)) {\n    if ('value' in value) {\n      return value.type === 'html' && !includeHtml ? '' : value.value\n    }\n\n    if (includeImageAlt && 'alt' in value && value.alt) {\n      return value.alt\n    }\n\n    if ('children' in value) {\n      return all(value.children, includeImageAlt, includeHtml)\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return all(value, includeImageAlt, includeHtml)\n  }\n\n  return ''\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt, includeHtml) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt, includeHtml)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Node}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return factorySpace(effects, afterWhitespace, 'linePrefix')\n  /** @type {State} */\n\n  function afterWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownSpace} from 'micromark-util-character'\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {string} type\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n\n    return ok(code)\n  }\n}\n","// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\nexport const unicodePunctuationRegex =\n  /[!-/:-@[-`{-~\\u00A1\\u00A7\\u00AB\\u00B6\\u00B7\\u00BB\\u00BF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {unicodePunctuationRegex} from './lib/unicode-punctuation-regex.js'\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n */\n\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n */\n\nexport const asciiDigit = regexCheck(/\\d/)\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n */\n\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n */\n\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n */\n\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n */\n\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n\nexport const unicodeWhitespace = regexCheck(/\\s/)\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n\nexport const unicodePunctuation = regexCheck(unicodePunctuationRegex)\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => code is number}\n */\n\nfunction regexCheck(regex) {\n  return check\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code Character code\n   * @returns {code is number} Whether the character code matches the bound regex\n   */\n\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code))\n  }\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {number} start\n * @param {number} remove\n * @param {T[]} items\n * @returns {void}\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {unknown[]} */\n\n  let parameters // Make start between zero and `end` (included).\n\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n\n  remove = remove > 0 ? remove : 0 // No need to chunk the items if there’s only a couple (10k) items.\n\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove) // @ts-expect-error Hush, it’s fine.\n    ;[].splice.apply(list, parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) [].splice.apply(list, [start, remove]) // Insert the items in chunks to not cause stack overflows.\n\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0) // @ts-expect-error Hush, it’s fine.\n      ;[].splice.apply(list, parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {T[]} items\n * @returns {T[]}\n */\n\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n\n  return items\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n\n/**\n * Classify whether a character code represents whitespace, punctuation, or\n * something else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * Note that eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n * @returns {number|undefined}\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine several syntax extensions into one.\n *\n * @param {Extension[]} extensions List of syntax extensions.\n * @returns {NormalizedExtension} A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all Extension to merge into.\n * @param {Extension} extension Extension to merge.\n * @returns {void}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    for (code in right) {\n      if (!hasOwnProperty.call(left, code)) left[code] = []\n      const value = right[code]\n      constructs(\n        // @ts-expect-error Looks like a list.\n        left[code],\n        Array.isArray(value) ? value : value ? [value] : []\n      )\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {unknown[]} existing\n * @param {unknown[]} list\n * @returns {void}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {unknown[]} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine several HTML extensions into one.\n *\n * @param {HtmlExtension[]} htmlExtensions List of HTML extensions.\n * @returns {HtmlExtension} A single combined extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all Extension to merge into.\n * @param {HtmlExtension} extension Extension to merge.\n * @returns {void}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base)\n\n  if (\n    // C0 except for HT, LF, FF, CR, space\n    code < 9 ||\n    code === 11 ||\n    (code > 13 && code < 32) || // Control character (DEL) of the basic block and C1 controls.\n    (code > 126 && code < 160) || // Lone high surrogates and low surrogates.\n    (code > 55295 && code < 57344) || // Noncharacters.\n    (code > 64975 && code < 65008) ||\n    (code & 65535) === 65535 ||\n    (code & 65535) === 65534 || // Out of range\n    code > 1114111\n  ) {\n    return '\\uFFFD'\n  }\n\n  return String.fromCharCode(code)\n}\n","import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n/**\n * Utility to decode markdown strings (which occur in places such as fenced\n * code info strings, destinations, labels, and titles).\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n * @returns {string}\n */\n\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\n\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  } // Reference.\n\n  const head = $2.charCodeAt(0)\n\n  if (head === 35) {\n    const head = $2.charCodeAt(1)\n    const hex = head === 120 || head === 88\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10)\n  }\n\n  return decodeNamedCharacterReference($2) || $0\n}\n","/**\n * Normalize an identifier (such as used in definitions).\n *\n * @param {string} value\n * @returns {string}\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value // Collapse Markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ') // Trim.\n      .replace(/^ | $/g, '') // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {{resolveAll?: Resolver}[]} constructs\n * @param {Event[]} events\n * @param {TokenizeContext} context\n * @returns {Event[]}\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Resolver[]} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * List of legacy HTML named character references that don’t need a trailing semicolon.\n *\n * @type {Array<string>}\n */\nexport const characterEntitiesLegacy = [\n  'AElig',\n  'AMP',\n  'Aacute',\n  'Acirc',\n  'Agrave',\n  'Aring',\n  'Atilde',\n  'Auml',\n  'COPY',\n  'Ccedil',\n  'ETH',\n  'Eacute',\n  'Ecirc',\n  'Egrave',\n  'Euml',\n  'GT',\n  'Iacute',\n  'Icirc',\n  'Igrave',\n  'Iuml',\n  'LT',\n  'Ntilde',\n  'Oacute',\n  'Ocirc',\n  'Ograve',\n  'Oslash',\n  'Otilde',\n  'Ouml',\n  'QUOT',\n  'REG',\n  'THORN',\n  'Uacute',\n  'Ucirc',\n  'Ugrave',\n  'Uuml',\n  'Yacute',\n  'aacute',\n  'acirc',\n  'acute',\n  'aelig',\n  'agrave',\n  'amp',\n  'aring',\n  'atilde',\n  'auml',\n  'brvbar',\n  'ccedil',\n  'cedil',\n  'cent',\n  'copy',\n  'curren',\n  'deg',\n  'divide',\n  'eacute',\n  'ecirc',\n  'egrave',\n  'eth',\n  'euml',\n  'frac12',\n  'frac14',\n  'frac34',\n  'gt',\n  'iacute',\n  'icirc',\n  'iexcl',\n  'igrave',\n  'iquest',\n  'iuml',\n  'laquo',\n  'lt',\n  'macr',\n  'micro',\n  'middot',\n  'nbsp',\n  'not',\n  'ntilde',\n  'oacute',\n  'ocirc',\n  'ograve',\n  'ordf',\n  'ordm',\n  'oslash',\n  'otilde',\n  'ouml',\n  'para',\n  'plusmn',\n  'pound',\n  'quot',\n  'raquo',\n  'reg',\n  'sect',\n  'shy',\n  'sup1',\n  'sup2',\n  'sup3',\n  'szlig',\n  'thorn',\n  'times',\n  'uacute',\n  'ucirc',\n  'ugrave',\n  'uml',\n  'uuml',\n  'yacute',\n  'yen',\n  'yuml'\n]\n","/**\n * Map of invalid numeric character references to their replacements, according to HTML.\n *\n * @type {Record<number, string>}\n */\nexport const characterReferenceInvalid = {\n  0: '�',\n  128: '€',\n  130: '‚',\n  131: 'ƒ',\n  132: '„',\n  133: '…',\n  134: '†',\n  135: '‡',\n  136: 'ˆ',\n  137: '‰',\n  138: 'Š',\n  139: '‹',\n  140: 'Œ',\n  142: 'Ž',\n  145: '‘',\n  146: '’',\n  147: '“',\n  148: '”',\n  149: '•',\n  150: '–',\n  151: '—',\n  152: '˜',\n  153: '™',\n  154: 'š',\n  155: '›',\n  156: 'œ',\n  158: 'ž',\n  159: 'Ÿ'\n}\n","/**\n * Check if the given character code, or the character code at the first\n * character, is decimal.\n *\n * @param {string|number} character\n * @returns {boolean} Whether `character` is a decimal\n */\nexport function isDecimal(character) {\n  const code =\n    typeof character === 'string' ? character.charCodeAt(0) : character\n\n  return code >= 48 && code <= 57 /* 0-9 */\n}\n","/**\n * Check if the given character code, or the character code at the first\n * character, is hexadecimal.\n *\n * @param {string|number} character\n * @returns {boolean} Whether `character` is hexadecimal\n */\nexport function isHexadecimal(character) {\n  const code =\n    typeof character === 'string' ? character.charCodeAt(0) : character\n\n  return (\n    (code >= 97 /* a */ && code <= 102) /* z */ ||\n    (code >= 65 /* A */ && code <= 70) /* Z */ ||\n    (code >= 48 /* A */ && code <= 57) /* Z */\n  )\n}\n","import {isAlphabetical} from 'is-alphabetical'\nimport {isDecimal} from 'is-decimal'\n\n/**\n * Check if the given character code, or the character code at the first\n * character, is alphanumerical.\n *\n * @param {string|number} character\n * @returns {boolean} Whether `character` is alphanumerical.\n */\nexport function isAlphanumerical(character) {\n  return isAlphabetical(character) || isDecimal(character)\n}\n","/**\n * Check if the given character code, or the character code at the first\n * character, is alphabetical.\n *\n * @param {string|number} character\n * @returns {boolean} Whether `character` is alphabetical.\n */\nexport function isAlphabetical(character) {\n  const code =\n    typeof character === 'string' ? character.charCodeAt(0) : character\n\n  return (\n    (code >= 97 && code <= 122) /* a-z */ ||\n    (code >= 65 && code <= 90) /* A-Z */\n  )\n}\n","/**\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\nimport {characterEntitiesLegacy} from 'character-entities-legacy'\nimport {characterReferenceInvalid} from 'character-reference-invalid'\nimport {isDecimal} from 'is-decimal'\nimport {isHexadecimal} from 'is-hexadecimal'\nimport {isAlphanumerical} from 'is-alphanumerical'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\n\nconst fromCharCode = String.fromCharCode\n\n// Warning messages.\nconst messages = [\n  '',\n  /* 1: Non terminated (named) */\n  'Named character references must be terminated by a semicolon',\n  /* 2: Non terminated (numeric) */\n  'Numeric character references must be terminated by a semicolon',\n  /* 3: Empty (named) */\n  'Named character references cannot be empty',\n  /* 4: Empty (numeric) */\n  'Numeric character references cannot be empty',\n  /* 5: Unknown (named) */\n  'Named character references must be known',\n  /* 6: Disallowed (numeric) */\n  'Numeric character references cannot be disallowed',\n  /* 7: Prohibited (numeric) */\n  'Numeric character references cannot be outside the permissible Unicode range'\n]\n\n/**\n * Parse HTML character references.\n *\n * @param {string} value\n * @param {import('../index.js').Options} [options={}]\n */\nexport function parseEntities(value, options = {}) {\n  const additional =\n    typeof options.additional === 'string'\n      ? options.additional.charCodeAt(0)\n      : options.additional\n  /** @type {Array<string>} */\n  const result = []\n  let index = 0\n  let lines = -1\n  let queue = ''\n  /** @type {Point|undefined} */\n  let point\n  /** @type {Array<number>|undefined} */\n  let indent\n\n  if (options.position) {\n    if ('start' in options.position || 'indent' in options.position) {\n      // @ts-expect-error: points don’t have indent.\n      indent = options.position.indent\n      // @ts-expect-error: points don’t have indent.\n      point = options.position.start\n    } else {\n      point = options.position\n    }\n  }\n\n  let line = (point ? point.line : 0) || 1\n  let column = (point ? point.column : 0) || 1\n\n  // Cache the current point.\n  let previous = now()\n  /** @type {number|undefined} */\n  let character\n\n  // Ensure the algorithm walks over the first character (inclusive).\n  index--\n\n  while (++index <= value.length) {\n    // If the previous character was a newline.\n    if (character === 10 /* `\\n` */) {\n      column = (indent ? indent[lines] : 0) || 1\n    }\n\n    character = value.charCodeAt(index)\n\n    if (character === 38 /* `&` */) {\n      const following = value.charCodeAt(index + 1)\n\n      // The behavior depends on the identity of the next character.\n      if (\n        following === 9 /* `\\t` */ ||\n        following === 10 /* `\\n` */ ||\n        following === 12 /* `\\f` */ ||\n        following === 32 /* ` ` */ ||\n        following === 38 /* `&` */ ||\n        following === 60 /* `<` */ ||\n        Number.isNaN(following) ||\n        (additional && following === additional)\n      ) {\n        // Not a character reference.\n        // No characters are consumed, and nothing is returned.\n        // This is not an error, either.\n        queue += fromCharCode(character)\n        column++\n        continue\n      }\n\n      const start = index + 1\n      let begin = start\n      let end = start\n      /** @type {string} */\n      let type\n\n      if (following === 35 /* `#` */) {\n        // Numerical reference.\n        end = ++begin\n\n        // The behavior further depends on the next character.\n        const following = value.charCodeAt(end)\n\n        if (following === 88 /* `X` */ || following === 120 /* `x` */) {\n          // ASCII hexadecimal digits.\n          type = 'hexadecimal'\n          end = ++begin\n        } else {\n          // ASCII decimal digits.\n          type = 'decimal'\n        }\n      } else {\n        // Named reference.\n        type = 'named'\n      }\n\n      let characterReferenceCharacters = ''\n      let characterReference = ''\n      let characters = ''\n      // Each type of character reference accepts different characters.\n      // This test is used to detect whether a reference has ended (as the semicolon\n      // is not strictly needed).\n      const test =\n        type === 'named'\n          ? isAlphanumerical\n          : type === 'decimal'\n          ? isDecimal\n          : isHexadecimal\n\n      end--\n\n      while (++end <= value.length) {\n        const following = value.charCodeAt(end)\n\n        if (!test(following)) {\n          break\n        }\n\n        characters += fromCharCode(following)\n\n        // Check if we can match a legacy named reference.\n        // If so, we cache that as the last viable named reference.\n        // This ensures we do not need to walk backwards later.\n        if (type === 'named' && characterEntitiesLegacy.includes(characters)) {\n          characterReferenceCharacters = characters\n          // @ts-expect-error: always able to decode.\n          characterReference = decodeNamedCharacterReference(characters)\n        }\n      }\n\n      let terminated = value.charCodeAt(end) === 59 /* `;` */\n\n      if (terminated) {\n        end++\n\n        const namedReference =\n          type === 'named' ? decodeNamedCharacterReference(characters) : false\n\n        if (namedReference) {\n          characterReferenceCharacters = characters\n          characterReference = namedReference\n        }\n      }\n\n      let diff = 1 + end - start\n      let reference = ''\n\n      if (!terminated && options.nonTerminated === false) {\n        // Empty.\n      } else if (!characters) {\n        // An empty (possible) reference is valid, unless it’s numeric (thus an\n        // ampersand followed by an octothorp).\n        if (type !== 'named') {\n          warning(4 /* Empty (numeric) */, diff)\n        }\n      } else if (type === 'named') {\n        // An ampersand followed by anything unknown, and not terminated, is\n        // invalid.\n        if (terminated && !characterReference) {\n          warning(5 /* Unknown (named) */, 1)\n        } else {\n          // If there’s something after an named reference which is not known,\n          // cap the reference.\n          if (characterReferenceCharacters !== characters) {\n            end = begin + characterReferenceCharacters.length\n            diff = 1 + end - begin\n            terminated = false\n          }\n\n          // If the reference is not terminated, warn.\n          if (!terminated) {\n            const reason = characterReferenceCharacters\n              ? 1 /* Non terminated (named) */\n              : 3 /* Empty (named) */\n\n            if (options.attribute) {\n              const following = value.charCodeAt(end)\n\n              if (following === 61 /* `=` */) {\n                warning(reason, diff)\n                characterReference = ''\n              } else if (isAlphanumerical(following)) {\n                characterReference = ''\n              } else {\n                warning(reason, diff)\n              }\n            } else {\n              warning(reason, diff)\n            }\n          }\n        }\n\n        reference = characterReference\n      } else {\n        if (!terminated) {\n          // All nonterminated numeric references are not rendered, and emit a\n          // warning.\n          warning(2 /* Non terminated (numeric) */, diff)\n        }\n\n        // When terminated and numerical, parse as either hexadecimal or\n        // decimal.\n        let referenceCode = Number.parseInt(\n          characters,\n          type === 'hexadecimal' ? 16 : 10\n        )\n\n        // Emit a warning when the parsed number is prohibited, and replace with\n        // replacement character.\n        if (prohibited(referenceCode)) {\n          warning(7 /* Prohibited (numeric) */, diff)\n          reference = fromCharCode(65533 /* `�` */)\n        } else if (referenceCode in characterReferenceInvalid) {\n          // Emit a warning when the parsed number is disallowed, and replace by\n          // an alternative.\n          warning(6 /* Disallowed (numeric) */, diff)\n          reference = characterReferenceInvalid[referenceCode]\n        } else {\n          // Parse the number.\n          let output = ''\n\n          // Emit a warning when the parsed number should not be used.\n          if (disallowed(referenceCode)) {\n            warning(6 /* Disallowed (numeric) */, diff)\n          }\n\n          // Serialize the number.\n          if (referenceCode > 0xffff) {\n            referenceCode -= 0x10000\n            output += fromCharCode((referenceCode >>> (10 & 0x3ff)) | 0xd800)\n            referenceCode = 0xdc00 | (referenceCode & 0x3ff)\n          }\n\n          reference = output + fromCharCode(referenceCode)\n        }\n      }\n\n      // Found it!\n      // First eat the queued characters as normal text, then eat a reference.\n      if (reference) {\n        flush()\n\n        previous = now()\n        index = end - 1\n        column += end - start + 1\n        result.push(reference)\n        const next = now()\n        next.offset++\n\n        if (options.reference) {\n          options.reference.call(\n            options.referenceContext,\n            reference,\n            {start: previous, end: next},\n            value.slice(start - 1, end)\n          )\n        }\n\n        previous = next\n      } else {\n        // If we could not find a reference, queue the checked characters (as\n        // normal characters), and move the pointer to their end.\n        // This is possible because we can be certain neither newlines nor\n        // ampersands are included.\n        characters = value.slice(start - 1, end)\n        queue += characters\n        column += characters.length\n        index = end - 1\n      }\n    } else {\n      // Handle anything other than an ampersand, including newlines and EOF.\n      if (character === 10 /* `\\n` */) {\n        line++\n        lines++\n        column = 0\n      }\n\n      if (Number.isNaN(character)) {\n        flush()\n      } else {\n        queue += fromCharCode(character)\n        column++\n      }\n    }\n  }\n\n  // Return the reduced nodes.\n  return result.join('')\n\n  // Get current position.\n  function now() {\n    return {\n      line,\n      column,\n      offset: index + ((point ? point.offset : 0) || 0)\n    }\n  }\n\n  /**\n   * Handle the warning.\n   *\n   * @param {1|2|3|4|5|6|7} code\n   * @param {number} offset\n   */\n  function warning(code, offset) {\n    /** @type {ReturnType<now>} */\n    let position\n\n    if (options.warning) {\n      position = now()\n      position.column += offset\n      position.offset += offset\n\n      options.warning.call(\n        options.warningContext,\n        messages[code],\n        position,\n        code\n      )\n    }\n  }\n\n  /**\n   * Flush `queue` (normal text).\n   * Macro invoked before each reference and at the end of `value`.\n   * Does nothing when `queue` is empty.\n   */\n  function flush() {\n    if (queue) {\n      result.push(queue)\n\n      if (options.text) {\n        options.text.call(options.textContext, queue, {\n          start: previous,\n          end: now()\n        })\n      }\n\n      queue = ''\n    }\n  }\n}\n\n/**\n * Check if `character` is outside the permissible unicode range.\n *\n * @param {number} code\n * @returns {boolean}\n */\nfunction prohibited(code) {\n  return (code >= 0xd800 && code <= 0xdfff) || code > 0x10ffff\n}\n\n/**\n * Check if `character` is disallowed.\n *\n * @param {number} code\n * @returns {boolean}\n */\nfunction disallowed(code) {\n  return (\n    (code >= 0x0001 && code <= 0x0008) ||\n    code === 0x000b ||\n    (code >= 0x000d && code <= 0x001f) ||\n    (code >= 0x007f && code <= 0x009f) ||\n    (code >= 0xfdd0 && code <= 0xfdef) ||\n    (code & 0xffff) === 0xffff ||\n    (code & 0xffff) === 0xfffe\n  )\n}\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const path = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * Get the basename from a path.\n *\n * @param {string} path\n *   File path.\n * @param {string | undefined} [ext]\n *   Extension to strip.\n * @returns {string}\n *   Stem or basename.\n */\nfunction basename(path, ext) {\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let seenNonSlash\n\n  if (ext === undefined || ext.length === 0 || ext.length > path.length) {\n    while (index--) {\n      if (path.charCodeAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.charCodeAt(index) === ext.charCodeAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * Get the dirname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.charCodeAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.charCodeAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\n/**\n * Get an extname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   Extname.\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.charCodeAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * Join segments from a path.\n *\n * @param {Array<string>} segments\n *   Path segments.\n * @returns {string}\n *   File path.\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string | undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Normalize a basic file path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\n// Note: `normalize` is not exposed as `path.normalize`, so some code is\n// manually removed from it.\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.charCodeAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.charCodeAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n *   File path.\n * @param {boolean} allowAboveRoot\n *   Whether `..` can move above root.\n * @returns {string}\n *   File path.\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number | undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.charCodeAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.charCodeAt(result.length - 1) !== 46 /* `.` */ ||\n          result.charCodeAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * Make sure `path` is a string.\n *\n * @param {string} path\n *   File path.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const proc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * @typedef URL\n * @property {string} hash\n * @property {string} host\n * @property {string} hostname\n * @property {string} href\n * @property {string} origin\n * @property {string} password\n * @property {string} pathname\n * @property {string} port\n * @property {string} protocol\n * @property {string} search\n * @property {any} searchParams\n * @property {string} username\n * @property {() => string} toString\n * @property {() => string} toJSON\n */\n\n/**\n * Check if `fileUrlOrPath` looks like a URL.\n *\n * @param {unknown} fileUrlOrPath\n *   File path or URL.\n * @returns {fileUrlOrPath is URL}\n *   Whether it’s a URL.\n */\n// From: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js#L1501>\nexport function isUrl(fileUrlOrPath) {\n  return (\n    fileUrlOrPath !== null &&\n    typeof fileUrlOrPath === 'object' &&\n    // @ts-expect-error: indexable.\n    fileUrlOrPath.href &&\n    // @ts-expect-error: indexable.\n    fileUrlOrPath.origin\n  )\n}\n","/// <reference lib=\"dom\" />\n\nimport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js>\n\n/**\n * @param {string | URL} path\n *   File URL.\n * @returns {string}\n *   File URL.\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * Get a path from a POSIX URL.\n *\n * @param {URL} url\n *   URL.\n * @returns {string}\n *   File path.\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.charCodeAt(index) === 37 /* `%` */ &&\n      pathname.charCodeAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.charCodeAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n\nexport {isUrl} from './minurl.shared.js'\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {import('./minurl.shared.js').URL} URL\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Value} Value\n */\n\n/**\n * @typedef {Record<string, unknown> & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef {'ascii' | 'utf8' | 'utf-8' | 'utf16le' | 'ucs2' | 'ucs-2' | 'base64' | 'base64url' | 'latin1' | 'binary' | 'hex'} BufferEncoding\n *   Encodings supported by the buffer class.\n *\n *   This is a copy of the types from Node, copied to prevent Node globals from\n *   being needed.\n *   Copied from: <https://github.com/DefinitelyTyped/DefinitelyTyped/blob/90a4ec8/types/node/buffer.d.ts#L170>\n *\n * @typedef {Options | URL | Value | VFile} Compatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n *   Set multiple values.\n * @property {Value | null | undefined} [value]\n *   Set `value`.\n * @property {string | null | undefined} [cwd]\n *   Set `cwd`.\n * @property {Array<string> | null | undefined} [history]\n *   Set `history`.\n * @property {URL | string | null | undefined} [path]\n *   Set `path`.\n * @property {string | null | undefined} [basename]\n *   Set `basename`.\n * @property {string | null | undefined} [stem]\n *   Set `stem`.\n * @property {string | null | undefined} [extname]\n *   Set `extname`.\n * @property {string | null | undefined} [dirname]\n *   Set `dirname`.\n * @property {Data | null | undefined} [data]\n *   Set `data`.\n *\n * @typedef Map\n *   Raw source map.\n *\n *   See:\n *   <https://github.com/mozilla/source-map/blob/58819f0/source-map.d.ts#L15-L23>.\n * @property {number} version\n *   Which version of the source map spec this map is following.\n * @property {Array<string>} sources\n *   An array of URLs to the original source files.\n * @property {Array<string>} names\n *   An array of identifiers which can be referenced by individual mappings.\n * @property {string | undefined} [sourceRoot]\n *   The URL root from which all sources are relative.\n * @property {Array<string> | undefined} [sourcesContent]\n *   An array of contents of the original source files.\n * @property {string} mappings\n *   A string of base64 VLQs which contain the actual mappings.\n * @property {string} file\n *   The generated file this source map is associated with.\n *\n * @typedef {{[key: string]: unknown} & VFileCoreOptions} Options\n *   Configuration.\n *\n *   A bunch of keys that will be shallow copied over to the new file.\n *\n * @typedef {Record<string, unknown>} ReporterSettings\n *   Configuration for reporters.\n */\n\n/**\n * @template {ReporterSettings} Settings\n *   Options type.\n * @callback Reporter\n *   Type for a reporter.\n * @param {Array<VFile>} files\n *   Files to report.\n * @param {Settings} options\n *   Configuration.\n * @returns {string}\n *   Report.\n */\n\nimport bufferLike from 'is-buffer'\nimport {VFileMessage} from 'vfile-message'\nimport {path} from './minpath.js'\nimport {proc} from './minproc.js'\nimport {urlToPath, isUrl} from './minurl.js'\n\n/**\n * Order of setting (least specific to most), we need this because otherwise\n * `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n * stem can be set.\n *\n * @type {Array<'basename' | 'dirname' | 'extname' | 'history' | 'path' | 'stem'>}\n */\nconst order = ['history', 'path', 'basename', 'stem', 'extname', 'dirname']\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * `options` is treated as:\n   *\n   * *   `string` or `Buffer` — `{value: options}`\n   * *   `URL` — `{path: options}`\n   * *   `VFile` — shallow copies its data over to the new file\n   * *   `object` — all fields are shallow copied over to the new file\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * You cannot set `dirname` or `extname` without setting either `history`,\n   * `path`, `basename`, or `stem` too.\n   *\n   * @param {Compatible | null | undefined} [value]\n   *   File value.\n   * @returns\n   *   New instance.\n   */\n  constructor(value) {\n    /** @type {Options | VFile} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (typeof value === 'string' || buffer(value)) {\n      options = {value}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else {\n      options = value\n    }\n\n    /**\n     * Place to store custom information (default: `{}`).\n     *\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     *\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of messages associated with the file.\n     *\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * List of filepaths the file moved between.\n     *\n     * The first is the original path and the last is the current path.\n     *\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     *\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Raw value.\n     *\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n\n    /**\n     * Whether a file was saved to disk.\n     *\n     * This is used by vfile reporters.\n     *\n     * @type {boolean}\n     */\n    this.stored\n\n    /**\n     * Custom, non-string, compiled, representation.\n     *\n     * This is used by unified to store non-string results.\n     * One example is when turning markdown into React nodes.\n     *\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Source map.\n     *\n     * This type is equivalent to the `RawSourceMap` type from the `source-map`\n     * module.\n     *\n     * @type {Map | null | undefined}\n     */\n    this.map\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (\n        prop in options &&\n        options[prop] !== undefined &&\n        options[prop] !== null\n      ) {\n        // @ts-expect-error: TS doesn’t understand basic reality.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\n      }\n    }\n\n    /** @type {string} */\n    let prop\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) {\n        // @ts-expect-error: fine to set other things.\n        this[prop] = options[prop]\n      }\n    }\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   *\n   * @returns {string}\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   *\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   *\n   * @param {string | URL} path\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   *\n   * Cannot be set if there’s no `path` yet.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.charCodeAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * @param {BufferEncoding | null | undefined} [encoding='utf8']\n   *   Character encoding to understand `value` as when it’s a `Buffer`\n   *   (default: `'utf8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    return (this.value || '').toString(encoding || undefined)\n  }\n\n  /**\n   * Create a warning message associated with the file.\n   *\n   * Its `fatal` is set to `false` and `file` is set to the current file path.\n   * Its added to `file.messages`.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(reason, place, origin) {\n    const message = new VFileMessage(reason, place, origin)\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Create an info message associated with the file.\n   *\n   * Its `fatal` is set to `null` and `file` is set to the current file path.\n   * Its added to `file.messages`.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = null\n\n    return message\n  }\n\n  /**\n   * Create a fatal error associated with the file.\n   *\n   * Its `fatal` is set to `true` and `file` is set to the current file path.\n   * Its added to `file.messages`.\n   *\n   * > 👉 **Note**: a fatal error means that a file is no longer processable.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {never}\n   *   Message.\n   * @throws {VFileMessage}\n   *   Message.\n   */\n  fail(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string | null | undefined} part\n *   File path part.\n * @param {string} name\n *   Part name.\n * @returns {void}\n *   Nothing.\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string | undefined} part\n *   Thing.\n * @param {string} name\n *   Part name.\n * @returns {asserts part is string}\n *   Nothing.\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string | undefined} path\n *   Path.\n * @param {string} name\n *   Dependency name.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n\n/**\n * Assert `value` is a buffer.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Buffer}\n *   Whether `value` is a Node.js buffer.\n */\nfunction buffer(value) {\n  return bufferLike(value)\n}\n","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","/**\n * @typedef {(error?: Error|null|undefined, ...output: Array<any>) => void} Callback\n * @typedef {(...input: Array<any>) => any} Middleware\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add `fn` (middleware) to the list.\n * @typedef {{run: Run, use: Use}} Pipeline\n *   Middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error|null|undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware`.\n * Can be sync or async; return a promise, receive a callback, or return new\n * values and errors.\n *\n * @param {Middleware} middleware\n * @param {Callback} callback\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result instanceof Promise) {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('vfile').VFileCompatible} VFileCompatible\n * @typedef {import('vfile').VFileValue} VFileValue\n * @typedef {import('..').Processor} Processor\n * @typedef {import('..').Plugin} Plugin\n * @typedef {import('..').Preset} Preset\n * @typedef {import('..').Pluggable} Pluggable\n * @typedef {import('..').PluggableList} PluggableList\n * @typedef {import('..').Transformer} Transformer\n * @typedef {import('..').Parser} Parser\n * @typedef {import('..').Compiler} Compiler\n * @typedef {import('..').RunCallback} RunCallback\n * @typedef {import('..').ProcessCallback} ProcessCallback\n *\n * @typedef Context\n * @property {Node} tree\n * @property {VFile} file\n */\n\nimport {bail} from 'bail'\nimport isBuffer from 'is-buffer'\nimport extend from 'extend'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\n\n// Expose a frozen processor.\nexport const unified = base().freeze()\n\nconst own = {}.hasOwnProperty\n\n// Function to create the first processor.\n/**\n * @returns {Processor}\n */\nfunction base() {\n  const transformers = trough()\n  /** @type {Processor['attachers']} */\n  const attachers = []\n  /** @type {Record<string, unknown>} */\n  let namespace = {}\n  /** @type {boolean|undefined} */\n  let frozen\n  let freezeIndex = -1\n\n  // Data management.\n  // @ts-expect-error: overloads are handled.\n  processor.data = data\n  processor.Parser = undefined\n  processor.Compiler = undefined\n\n  // Lock.\n  processor.freeze = freeze\n\n  // Plugins.\n  processor.attachers = attachers\n  // @ts-expect-error: overloads are handled.\n  processor.use = use\n\n  // API.\n  processor.parse = parse\n  processor.stringify = stringify\n  // @ts-expect-error: overloads are handled.\n  processor.run = run\n  processor.runSync = runSync\n  // @ts-expect-error: overloads are handled.\n  processor.process = process\n  processor.processSync = processSync\n\n  // Expose.\n  return processor\n\n  // Create a new processor based on the processor in the current scope.\n  /** @type {Processor} */\n  function processor() {\n    const destination = base()\n    let index = -1\n\n    while (++index < attachers.length) {\n      destination.use(...attachers[index])\n    }\n\n    destination.data(extend(true, {}, namespace))\n\n    return destination\n  }\n\n  /**\n   * @param {string|Record<string, unknown>} [key]\n   * @param {unknown} [value]\n   * @returns {unknown}\n   */\n  function data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', frozen)\n        namespace[key] = value\n        return processor\n      }\n\n      // Get `key`.\n      return (own.call(namespace, key) && namespace[key]) || null\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', frozen)\n      namespace = key\n      return processor\n    }\n\n    // Get space.\n    return namespace\n  }\n\n  /** @type {Processor['freeze']} */\n  function freeze() {\n    if (frozen) {\n      return processor\n    }\n\n    while (++freezeIndex < attachers.length) {\n      const [attacher, ...options] = attachers[freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      /** @type {Transformer|void} */\n      const transformer = attacher.call(processor, ...options)\n\n      if (typeof transformer === 'function') {\n        transformers.use(transformer)\n      }\n    }\n\n    frozen = true\n    freezeIndex = Number.POSITIVE_INFINITY\n\n    return processor\n  }\n\n  /**\n   * @param {Pluggable|null|undefined} [value]\n   * @param {...unknown} options\n   * @returns {Processor}\n   */\n  function use(value, ...options) {\n    /** @type {Record<string, unknown>|undefined} */\n    let settings\n\n    assertUnfrozen('use', frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, ...options)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    if (settings) {\n      namespace.settings = Object.assign(namespace.settings || {}, settings)\n    }\n\n    return processor\n\n    /**\n     * @param {import('..').Pluggable<unknown[]>} value\n     * @returns {void}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value)\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...options] = value\n          addPlugin(plugin, ...options)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {void}\n     */\n    function addPreset(result) {\n      addList(result.plugins)\n\n      if (result.settings) {\n        settings = Object.assign(settings || {}, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList|null|undefined} [plugins]\n     * @returns {void}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {...unknown} [value]\n     * @returns {void}\n     */\n    function addPlugin(plugin, value) {\n      let index = -1\n      /** @type {Processor['attachers'][number]|undefined} */\n      let entry\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entry = attachers[index]\n          break\n        }\n      }\n\n      if (entry) {\n        if (isPlainObj(entry[1]) && isPlainObj(value)) {\n          value = extend(true, entry[1], value)\n        }\n\n        entry[1] = value\n      } else {\n        // @ts-expect-error: fine.\n        attachers.push([...arguments])\n      }\n    }\n  }\n\n  /** @type {Processor['parse']} */\n  function parse(doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Parser = processor.Parser\n    assertParser('parse', Parser)\n\n    if (newable(Parser, 'parse')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Parser(String(file), file).parse()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Parser(String(file), file) // eslint-disable-line new-cap\n  }\n\n  /** @type {Processor['stringify']} */\n  function stringify(node, doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Compiler = processor.Compiler\n    assertCompiler('stringify', Compiler)\n    assertNode(node)\n\n    if (newable(Compiler, 'compile')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Compiler(node, file).compile()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Compiler(node, file) // eslint-disable-line new-cap\n  }\n\n  /**\n   * @param {Node} node\n   * @param {VFileCompatible|RunCallback} [doc]\n   * @param {RunCallback} [callback]\n   * @returns {Promise<Node>|void}\n   */\n  function run(node, doc, callback) {\n    assertNode(node)\n    processor.freeze()\n\n    if (!callback && typeof doc === 'function') {\n      callback = doc\n      doc = undefined\n    }\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((node: Node) => void)} resolve\n     * @param {(error: Error) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      // @ts-expect-error: `doc` can’t be a callback anymore, we checked.\n      transformers.run(node, vfile(doc), done)\n\n      /**\n       * @param {Error|null} error\n       * @param {Node} tree\n       * @param {VFile} file\n       * @returns {void}\n       */\n      function done(error, tree, file) {\n        tree = tree || node\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(tree)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, tree, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['runSync']} */\n  function runSync(node, file) {\n    /** @type {Node|undefined} */\n    let result\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.run(node, file, done)\n\n    assertDone('runSync', 'run', complete)\n\n    // @ts-expect-error: we either bailed on an error or have a tree.\n    return result\n\n    /**\n     * @param {Error|null} [error]\n     * @param {Node} [tree]\n     * @returns {void}\n     */\n    function done(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * @param {VFileCompatible} doc\n   * @param {ProcessCallback} [callback]\n   * @returns {Promise<VFile>|undefined}\n   */\n  function process(doc, callback) {\n    processor.freeze()\n    assertParser('process', processor.Parser)\n    assertCompiler('process', processor.Compiler)\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((file: VFile) => void)} resolve\n     * @param {(error?: Error|null|undefined) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      const file = vfile(doc)\n\n      processor.run(processor.parse(file), file, (error, tree, file) => {\n        if (error || !tree || !file) {\n          done(error)\n        } else {\n          /** @type {unknown} */\n          const result = processor.stringify(tree, file)\n\n          if (result === undefined || result === null) {\n            // Empty.\n          } else if (looksLikeAVFileValue(result)) {\n            file.value = result\n          } else {\n            file.result = result\n          }\n\n          done(error, file)\n        }\n      })\n\n      /**\n       * @param {Error|null|undefined} [error]\n       * @param {VFile|undefined} [file]\n       * @returns {void}\n       */\n      function done(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['processSync']} */\n  function processSync(doc) {\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.freeze()\n    assertParser('processSync', processor.Parser)\n    assertCompiler('processSync', processor.Compiler)\n\n    const file = vfile(doc)\n\n    processor.process(file, done)\n\n    assertDone('processSync', 'process', complete)\n\n    return file\n\n    /**\n     * @param {Error|null|undefined} [error]\n     * @returns {void}\n     */\n    function done(error) {\n      complete = true\n      bail(error)\n    }\n  }\n}\n\n/**\n * Check if `value` is a constructor.\n *\n * @param {unknown} value\n * @param {string} name\n * @returns {boolean}\n */\nfunction newable(value, name) {\n  return (\n    typeof value === 'function' &&\n    // Prototypes do exist.\n    // type-coverage:ignore-next-line\n    value.prototype &&\n    // A function with keys in its prototype is probably a constructor.\n    // Classes’ prototype methods are not enumerable, so we check if some value\n    // exists in the prototype.\n    // type-coverage:ignore-next-line\n    (keys(value.prototype) || name in value.prototype)\n  )\n}\n\n/**\n * Check if `value` is an object with keys.\n *\n * @param {Record<string, unknown>} value\n * @returns {boolean}\n */\nfunction keys(value) {\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is VFileValue}\n */\nfunction looksLikeAVFileValue(value) {\n  return typeof value === 'string' || isBuffer(value)\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n}\n/** @type {Initializer} */\n\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n\n  let previous\n  return contentStart\n  /** @type {State} */\n\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n  /** @type {State} */\n\n  function lineStart(code) {\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n\n    if (previous) {\n      previous.next = token\n    }\n\n    previous = token\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Point} Point\n */\n\n/**\n * @typedef {Record<string, unknown>} StackState\n * @typedef {[Construct, StackState]} StackItem\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {InitialConstruct} */\n\nexport const document = {\n  tokenize: initializeDocument\n}\n/** @type {Construct} */\n\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n}\n/** @type {Initializer} */\n\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {Array<StackItem>} */\n\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext|undefined} */\n\n  let childFlow\n  /** @type {Token|undefined} */\n\n  let childToken\n  /** @type {number} */\n\n  let lineStartOffset\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    } // Done.\n\n    return checkNewContainers(code)\n  }\n  /** @type {State} */\n\n  function documentContinue(code) {\n    continued++ // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n\n      if (childFlow) {\n        closeFlow()\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point|undefined} */\n\n      let point // Find the flow chunk.\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      let index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n      return checkNewContainers(code)\n    }\n\n    return start(code)\n  }\n  /** @type {State} */\n\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      } // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      } // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    } // Check if there is a new container.\n\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n  /** @type {State} */\n\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n  /** @type {State} */\n\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n  /** @type {State} */\n\n  function containerContinue(code) {\n    continued++\n    stack.push([self.currentConstruct, self.containerState]) // Try another.\n\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n  /** @type {State} */\n\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit('chunkFlow'), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit('chunkFlow')) // Get ready for the next line.\n\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n\n    effects.consume(code)\n    return flowContinue\n  }\n  /**\n   * @param {Token} token\n   * @param {boolean} [eof]\n   * @returns {void}\n   */\n\n  function writeToChild(token, eof) {\n    const stream = self.sliceStream(token)\n    if (eof) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream) // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n\n      while (index--) {\n        if (\n          // The token starts before the line ending…\n          childFlow.events[index][1].start.offset < lineStartOffset && // …and either is not ended yet…\n          (!childFlow.events[index][1].end || // …or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return\n        }\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean|undefined} */\n\n      let seen\n      /** @type {Point|undefined} */\n\n      let point // Find the previous chunk (the one before the lazy line).\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n\n          seen = true\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n    }\n  }\n  /**\n   * @param {number} size\n   * @returns {void}\n   */\n\n  function exitContainers(size) {\n    let index = stack.length // Exit open containers.\n\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      entry[0].exit.call(self, effects)\n    }\n\n    stack.length = size\n  }\n\n  function closeFlow() {\n    childFlow.write([null])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContainer(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {splice} from 'micromark-util-chunked'\n\n/**\n * Tokenize subcontent.\n *\n * @param {Event[]} events\n * @returns {boolean}\n */\nexport function subtokenize(events) {\n  /** @type {Record<string, number>} */\n  const jumps = {}\n  let index = -1\n  /** @type {Event} */\n\n  let event\n  /** @type {number|undefined} */\n\n  let lineIndex\n  /** @type {number} */\n\n  let otherIndex\n  /** @type {Event} */\n\n  let otherEvent\n  /** @type {Event[]} */\n\n  let parameters\n  /** @type {Event[]} */\n\n  let subevents\n  /** @type {boolean|undefined} */\n\n  let more\n\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n\n    event = events[index] // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    } // Enter.\n\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    } // Exit.\n    else if (event[1]._container) {\n      otherIndex = index\n      lineIndex = undefined\n\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events[lineIndex][1].start) // Switch container exit w/ line endings.\n\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        splice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n\n  return !more\n}\n/**\n * Tokenize embedded tokens.\n *\n * @param {Event[]} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\n\nfunction subcontent(events, eventIndex) {\n  const token = events[eventIndex][1]\n  const context = events[eventIndex][2]\n  let startPosition = eventIndex - 1\n  /** @type {number[]} */\n\n  const startPositions = []\n  const tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  const childEvents = tokenizer.events\n  /** @type {[number, number][]} */\n\n  const jumps = []\n  /** @type {Record<string, number>} */\n\n  const gaps = {}\n  /** @type {Chunk[]} */\n\n  let stream\n  /** @type {Token|undefined} */\n\n  let previous\n  let index = -1\n  /** @type {Token|undefined} */\n\n  let current = token\n  let adjust = 0\n  let start = 0\n  const breaks = [start] // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n\n  while (current) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== current) {\n      // Empty.\n    }\n\n    startPositions.push(startPosition)\n\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current)\n\n      if (!current.next) {\n        stream.push(null)\n      }\n\n      if (previous) {\n        tokenizer.defineSkip(current.start)\n      }\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n\n      tokenizer.write(stream)\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    } // Unravel the next token.\n\n    previous = current\n    current = current.next\n  } // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n\n  current = token\n\n  while (++index < childEvents.length) {\n    if (\n      // Find a void token that includes a break.\n      childEvents[index][0] === 'exit' &&\n      childEvents[index - 1][0] === 'enter' &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      start = index + 1\n      breaks.push(start) // Help GC.\n\n      current._tokenizer = undefined\n      current.previous = undefined\n      current = current.next\n    }\n  } // Help GC.\n\n  tokenizer.events = [] // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined\n    current.previous = undefined\n  } else {\n    breaks.pop()\n  } // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n\n  index = breaks.length\n\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1])\n    const start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    splice(events, start, 2, slice)\n  }\n\n  index = -1\n\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n\n  return gaps\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent\n}\n/** @type {Construct} */\n\nconst continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n}\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\n\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token} */\n  let previous\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n  /** @type {State} */\n\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous\n    })\n    previous = previous.next\n    return data\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this\n  return startLookahead\n  /** @type {State} */\n\n  function startLookahead(code) {\n    effects.exit('chunkContent')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    const tail = self.events[self.events.length - 1]\n\n    if (\n      !self.parser.constructs.disable.null.includes('codeIndented') &&\n      tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n    ) {\n      return ok(code)\n    }\n\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n}\n/** @type {Initializer} */\n\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding, // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n  /** @type {State} */\n\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n  /** @type {State} */\n\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nexport const resolver = {\n  resolveAll: createResolver()\n}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n/**\n * @param {'string'|'text'} field\n * @returns {InitialConstruct}\n */\n\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n  /** @type {Initializer} */\n\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n    /** @type {State} */\n\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n    /** @type {State} */\n\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      } // Data.\n\n      effects.consume(code)\n      return data\n    }\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n\n    function atBreak(code) {\n      if (code === null) {\n        return true\n      }\n\n      const list = constructs[code]\n      let index = -1\n\n      if (list) {\n        while (++index < list.length) {\n          const item = list[index]\n\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n\n      return false\n    }\n  }\n}\n/**\n * @param {Resolver} [extraResolver]\n * @returns {Resolver}\n */\n\nfunction createResolver(extraResolver) {\n  return resolveAllText\n  /** @type {Resolver} */\n\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number|undefined} */\n\n    let enter // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n\n        enter = undefined\n      }\n    }\n\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\n\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean|undefined} */\n\n      let tabs\n\n      while (index--) {\n        const chunk = chunks[index]\n\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n\n          if (bufferIndex) break\n          bufferIndex = -1\n        } // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        }\n        data.end = Object.assign({}, token.start)\n\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n\n      eventIndex++\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n */\n\n/**\n * @typedef Info\n * @property {() => void} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {void}\n */\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_index'|'_bufferIndex'>} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(\n    from\n      ? Object.assign({}, from)\n      : {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n    {\n      _index: 0,\n      _bufferIndex: -1\n    }\n  )\n  /** @type {Record<string, number>} */\n\n  const columnStart = {}\n  /** @type {Array<Construct>} */\n\n  const resolveAllConstructs = []\n  /** @type {Array<Chunk>} */\n\n  let chunks = []\n  /** @type {Array<Token>} */\n\n  let stack = []\n  /** @type {boolean|undefined} */\n\n  let consumed = true\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  }\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n\n  const context = {\n    previous: null,\n    code: null,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  }\n  /**\n   * The state function.\n   *\n   * @type {State|void}\n   */\n\n  let state = initialize.tokenize.call(context, effects)\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n\n  let expectedCode\n\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n\n  return context\n  /** @type {TokenizeContext['write']} */\n\n  function write(slice) {\n    chunks = push(chunks, slice)\n    main() // Exit if we’re not done, resolve might change stuff.\n\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n\n    addResult(initialize, 0) // Otherwise, resolve, and exit.\n\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  } //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n  /** @type {TokenizeContext['sliceStream']} */\n\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n  /** @type {TokenizeContext['now']} */\n\n  function now() {\n    return Object.assign({}, point)\n  }\n  /** @type {TokenizeContext['defineSkip']} */\n\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  } //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {void}\n   */\n\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index] // If we’re in a buffer chunk, loop through it.\n\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {void}\n   */\n\n  function go(code) {\n    consumed = undefined\n    expectedCode = code\n    state = state(code)\n  }\n  /** @type {Effects['consume']} */\n\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    } // Not in a string chunk.\n\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++ // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    } // Expose the previous character.\n\n    context.previous = code // Mark as consumed.\n\n    consumed = true\n  }\n  /** @type {Effects['enter']} */\n\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  }\n  /** @type {Effects['exit']} */\n\n  function exit(type) {\n    const token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  }\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {Record<string, unknown>} [fields]\n   */\n\n  function constructFactory(onreturn, fields) {\n    return hook\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Construct|Array<Construct>|ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State} [bogusState]\n     * @returns {State}\n     */\n\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Array<Construct>} */\n      let listOfConstructs\n      /** @type {number} */\n\n      let constructIndex\n      /** @type {Construct} */\n\n      let currentConstruct\n      /** @type {Info} */\n\n      let info\n      return Array.isArray(constructs)\n        ? /* c8 ignore next 1 */\n          handleListOfConstructs(constructs)\n        : 'tokenize' in constructs // @ts-expect-error Looks like a construct.\n        ? handleListOfConstructs([constructs])\n        : handleMapOfConstructs(constructs)\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n\n      function handleMapOfConstructs(map) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          const def = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n\n            /* c8 ignore next 2 */\n            ...(Array.isArray(def) ? def : def ? [def] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n          return handleListOfConstructs(list)(code)\n        }\n      }\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Array<Construct>} list\n       * @returns {State}\n       */\n\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n\n        if (list.length === 0) {\n          return bogusState\n        }\n\n        return handleConstruct(list[constructIndex])\n      }\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n\n      function handleConstruct(construct) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a “live binding”, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n      /** @type {State} */\n\n      function ok(code) {\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n      /** @type {State} */\n\n      function nok(code) {\n        consumed = true\n        info.restore()\n\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n\n        return bogusState\n      }\n    }\n  }\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {void}\n   */\n\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n    return {\n      restore,\n      from: startEventsIndex\n    }\n    /**\n     * Restore state.\n     *\n     * @returns {void}\n     */\n\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {void}\n   */\n\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Array<Chunk>} chunks\n * @param {Pick<Token, 'start'|'end'>} token\n * @returns {Array<Chunk>}\n */\n\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Array<Chunk>} */\n\n  let view\n\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n\n    if (startBufferIndex > -1) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view[0] = view[0].slice(startBufferIndex)\n    }\n\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n\n  return view\n}\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Array<Chunk>} chunks\n * @param {boolean} [expandTabs=false]\n * @returns {string}\n */\n\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {Array<string>} */\n\n  const result = []\n  /** @type {boolean|undefined} */\n\n  let atTab\n\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n\n    let value\n\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case -5: {\n          value = '\\r'\n          break\n        }\n\n        case -4: {\n          value = '\\n'\n          break\n        }\n\n        case -3: {\n          value = '\\r' + '\\n'\n          break\n        }\n\n        case -2: {\n          value = expandTabs ? ' ' : '\\t'\n          break\n        }\n\n        case -1: {\n          if (!expandTabs && atTab) continue\n          value = ' '\n          break\n        }\n\n        default: {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n\n    atTab = chunk === -2\n    result.push(value)\n  }\n\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('thematicBreak')\n    marker = code\n    return atBreak(code)\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    if (size < 3 || (code !== null && !markdownLineEnding(code))) {\n      return nok(code)\n    }\n\n    effects.exit('thematicBreak')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n\n    effects.exit('thematicBreakSequence')\n    return atBreak(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @typedef {Record<string, unknown> & {marker: Code, type: string, size: number}} ListContainerState\n * @typedef {TokenizeContext & {containerState: ListContainerState}} TokenizeContextWithState\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {asciiDigit, markdownSpace} from 'micromark-util-character'\nimport {blankLine} from './blank-line.js'\nimport {thematicBreak} from './thematic-break.js'\n/** @type {Construct} */\n\nexport const list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\n/** @type {Construct} */\n\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\n/** @type {Construct} */\n\nconst indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this\n  const tail = self.events[self.events.length - 1]\n  let initialSize =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    const kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n\n    return nok(code)\n  }\n  /**\n   * @type {State}\n   **/\n\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      blankLine, // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n  /** @type {State} */\n\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize +\n      self.sliceSerialize(effects.exit('listItemPrefix'), true).length\n    return ok(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(blankLine, onBlank, notBlank)\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine // We have a blank line.\n    // Still, try to consume at most the items size.\n\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n  /** @type {State} */\n\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined\n      self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n\n    self.containerState.furtherBlankLines = undefined\n    self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n  /** @type {State} */\n\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true // As we’re closing flow, we’re no longer interrupting.\n\n    self.interrupt = undefined\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'listItemIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n/**\n * @type {Exiter}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : 4 + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return !markdownSpace(code) &&\n      tail &&\n      tail[1].type === 'listItemPrefixWhitespace'\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState\n\n      if (!state.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        state.open = true\n      }\n\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(blockQuote, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n/** @type {Exiter} */\n\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} literalType\n * @param {string} literalMarkerType\n * @param {string} rawType\n * @param {string} stringType\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return destinationEnclosedBefore\n    }\n\n    if (code === null || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationRaw(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return destinationEnclosedBefore(code)\n    }\n\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? destinationEnclosedEscape : destinationEnclosed\n  }\n  /** @type {State} */\n\n  function destinationEnclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return destinationEnclosed\n    }\n\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationRaw(code) {\n    if (code === 40) {\n      if (++balance > limit) return nok(code)\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === 41) {\n      if (!balance--) {\n        effects.exit('chunkString')\n        effects.exit(stringType)\n        effects.exit(rawType)\n        effects.exit(type)\n        return ok(code)\n      }\n\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      if (balance) return nok(code)\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n\n    if (asciiControl(code)) return nok(code)\n    effects.consume(code)\n    return code === 92 ? destinationRawEscape : destinationRaw\n  }\n  /** @type {State} */\n\n  function destinationRawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    return destinationRaw(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @this {TokenizeContext}\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      (code === 93 && !data) ||\n      /* To do: remove in the future once we’ve switched from\n       * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n       * which doesn’t need this */\n\n      /* Hidden footnotes hook */\n\n      /* c8 ignore next 3 */\n      (code === 94 &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs) ||\n      size > 999\n    ) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return label(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    data = data || !markdownSpace(code)\n    return code === 92 ? labelEscape : label\n  }\n  /** @type {State} */\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    marker = code === 40 ? 41 : code\n    return atFirstTitleBreak\n  }\n  /** @type {State} */\n\n  function atFirstTitleBreak(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    return atTitleBreak(code)\n  }\n  /** @type {State} */\n\n  function atTitleBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return atFirstTitleBreak(marker)\n    }\n\n    if (code === null) {\n      return nok(code)\n    } // Note: blank lines can’t exist in content.\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atTitleBreak, 'linePrefix')\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return title(code)\n  }\n  /** @type {State} */\n\n  function title(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atTitleBreak(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? titleEscape : title\n  }\n  /** @type {State} */\n\n  function titleEscape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return title\n    }\n\n    return title(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factorySpace} from 'micromark-factory-space'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\n/** @type {Construct} */\n\nconst titleConstruct = {\n  tokenize: tokenizeTitle,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this\n  /** @type {string} */\n\n  let identifier\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('definition')\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Note: blank lines can’t exist in content.\n\n      return factoryWhitespace(\n        effects,\n        factoryDestination(\n          effects,\n          effects.attempt(\n            titleConstruct,\n            factorySpace(effects, after, 'whitespace'),\n            factorySpace(effects, after, 'whitespace')\n          ),\n          nok,\n          'definitionDestination',\n          'definitionDestinationLiteral',\n          'definitionDestinationLiteralMarker',\n          'definitionDestinationRaw',\n          'definitionDestinationString'\n        )\n      )\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      if (!self.parser.defined.includes(identifier)) {\n        self.parser.defined.push(identifier)\n      }\n\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTitle(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, before)(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function before(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factorySpace(effects, after, 'whitespace'),\n        nok,\n        'definitionTitle',\n        'definitionTitleMarker',\n        'definitionTitleString'\n      )(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n}\n/** @type {Construct} */\n\nconst indentedContent = {\n  tokenize: tokenizeIndentedContent,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeIndented')\n    return factorySpace(effects, afterStartPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterStartPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? afterPrefix(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(indentedContent, afterPrefix, after)(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return content(code)\n  }\n  /** @type {State} */\n\n  function content(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return afterPrefix(code)\n    }\n\n    effects.consume(code)\n    return content\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeIndented')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeIndentedContent(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return start\n    }\n\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? ok(code)\n      : markdownLineEnding(code)\n      ? start(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n/** @type {Resolver} */\n\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2\n  let contentStart = 3\n  /** @type {Token} */\n\n  let content\n  /** @type {Token} */\n\n  let text // Prefix whitespace, part of the opening.\n\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  } // Suffix whitespace, part of the closing.\n\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      // @ts-expect-error Constants are fine to assign.\n      contentType: 'text'\n    }\n    splice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  const self = this\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('atxHeading')\n    effects.enter('atxHeadingSequence')\n    return fenceOpenInside(code)\n  }\n  /** @type {State} */\n\n  function fenceOpenInside(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return fenceOpenInside\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return self.interrupt ? ok(code) : headingBreak(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function headingBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequence(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      return ok(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headingBreak, 'whitespace')(code)\n    }\n\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequence\n    }\n\n    effects.exit('atxHeadingSequence')\n    return headingBreak(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return headingBreak(code)\n    }\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n/** @type {Resolver} */\n\nfunction resolveToSetextUnderline(events, context) {\n  let index = events.length\n  /** @type {number|undefined} */\n\n  let content\n  /** @type {number|undefined} */\n\n  let text\n  /** @type {number|undefined} */\n\n  let definition // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    } // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n\n  const heading = {\n    type: 'setextHeading',\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  } // Change the paragraph to setext heading text.\n\n  events[text][1].type = 'setextHeadingText' // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = Object.assign({}, events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  } // Add the heading exit at the end.\n\n  events.push(['exit', heading, context])\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  /** @type {boolean} */\n\n  let paragraph // Find an opening.\n\n  while (index--) {\n    // Skip enter/exit of line ending, line prefix, and content.\n    // We can now either have a definition or a paragraph.\n    if (\n      self.events[index][1].type !== 'lineEnding' &&\n      self.events[index][1].type !== 'linePrefix' &&\n      self.events[index][1].type !== 'content'\n    ) {\n      paragraph = self.events[index][1].type === 'paragraph'\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      effects.enter('setextHeadingLineSequence')\n      marker = code\n      return closingSequence(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function closingSequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return closingSequence\n    }\n\n    effects.exit('setextHeadingLineSequence')\n    return factorySpace(effects, closingSequenceEnd, 'lineSuffix')(code)\n  }\n  /** @type {State} */\n\n  function closingSequenceEnd(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result\n * in more relaxed rules (condition 6): because they are known blocks, the\n * HTML-like syntax doesn’t have to be strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result in\n * HTML that can include lines w/o exiting, until a closing tag also in this\n * list is found (condition 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * Note that `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {htmlBlockNames, htmlRawNames} from 'micromark-util-html-tag-name'\nimport {blankLine} from './blank-line.js'\n/** @type {Construct} */\n\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\n/** @type {Construct} */\n\nconst nextBlankConstruct = {\n  tokenize: tokenizeNextBlank,\n  partial: true\n}\n/** @type {Resolver} */\n\nfunction resolveToHtmlFlow(events) {\n  let index = events.length\n\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start // Add the prefix start to the HTML line token.\n\n    events[index + 1][1].start = events[index - 2][1].start // Remove the line prefix.\n\n    events.splice(index - 2, 2)\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this\n  /** @type {number} */\n\n  let kind\n  /** @type {boolean} */\n\n  let startTag\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {Code} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationStart\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      kind = 3 // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      startTag = true\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationStart(code) {\n    if (code === 45) {\n      effects.consume(code)\n      kind = 2\n      return commentOpenInside\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      kind = 5\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpenInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      kind = 4\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdataOpenInside(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length\n        ? self.interrupt\n          ? ok\n          : continuation\n        : cdataOpenInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      if (\n        code !== 47 &&\n        startTag &&\n        htmlRawNames.includes(buffer.toLowerCase())\n      ) {\n        kind = 1\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        kind = 6\n\n        if (code === 47) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      kind = 7 // Do not support complete HTML when interrupting\n\n      return self.interrupt && !self.parser.lazy[self.now().line]\n        ? nok(code)\n        : startTag\n        ? completeAttributeNameBefore(code)\n        : completeClosingTagAfter(code)\n    }\n\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuation\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    return completeAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n\n    return completeAttributeNameBefore(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return completeAttributeValueQuoted\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    marker = null\n    return completeAttributeValueUnquoted(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuoted(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    if (code === marker) {\n      effects.consume(code)\n      return completeAttributeValueQuotedAfter\n    }\n\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return code === null || markdownLineEnding(code)\n      ? continuation(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function continuation(code) {\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n\n    if (code === 60 && kind === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n\n    if (code === 62 && kind === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (code === 63 && kind === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    if (code === 93 && kind === 5) {\n      effects.consume(code)\n      return continuationCharacterDataInside\n    }\n\n    if (markdownLineEnding(code) && (kind === 6 || kind === 7)) {\n      return effects.check(\n        nextBlankConstruct,\n        continuationClose,\n        continuationAtLineEnding\n      )(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      return continuationAtLineEnding(code)\n    }\n\n    effects.consume(code)\n    return continuation\n  }\n  /** @type {State} */\n\n  function continuationAtLineEnding(code) {\n    effects.exit('htmlFlowData')\n    return htmlContinueStart(code)\n  }\n  /** @type {State} */\n\n  function htmlContinueStart(code) {\n    if (code === null) {\n      return done(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        {\n          tokenize: htmlLineEnd,\n          partial: true\n        },\n        htmlContinueStart,\n        done\n      )(code)\n    }\n\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n  /** @type {Tokenizer} */\n\n  function htmlLineEnd(effects, ok, nok) {\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {State} */\n\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawEndTag(code) {\n    if (code === 62 && htmlRawNames.includes(buffer.toLowerCase())) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationCharacterDataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    } // More dashes.\n\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return done(code)\n    }\n\n    effects.consume(code)\n    return continuationClose\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('htmlFlow')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNextBlank(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.exit('htmlFlowData')\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this\n  /** @type {Construct} */\n\n  const closingFenceConstruct = {\n    tokenize: tokenizeClosingFence,\n    partial: true\n  }\n  /** @type {Construct} */\n\n  const nonLazyLine = {\n    tokenize: tokenizeNonLazyLine,\n    partial: true\n  }\n  const tail = this.events[this.events.length - 1]\n  const initialPrefix =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let sizeOpen = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    marker = code\n    return sequenceOpen(code)\n  }\n  /** @type {State} */\n\n  function sequenceOpen(code) {\n    if (code === marker) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n\n    effects.exit('codeFencedFenceSequence')\n    return sizeOpen < 3\n      ? nok(code)\n      : factorySpace(effects, infoOpen, 'whitespace')(code)\n  }\n  /** @type {State} */\n\n  function infoOpen(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n  /** @type {State} */\n\n  function info(code) {\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, infoAfter, 'whitespace')(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return info\n  }\n  /** @type {State} */\n\n  function infoAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n  /** @type {State} */\n\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return openAfter(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return meta\n  }\n  /** @type {State} */\n\n  function openAfter(code) {\n    effects.exit('codeFencedFence')\n    return self.interrupt ? ok(code) : contentStart(code)\n  }\n  /** @type {State} */\n\n  function contentStart(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        nonLazyLine,\n        effects.attempt(\n          closingFenceConstruct,\n          after,\n          initialPrefix\n            ? factorySpace(\n                effects,\n                contentStart,\n                'linePrefix',\n                initialPrefix + 1\n              )\n            : contentStart\n        ),\n        after\n      )(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return contentContinue(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return contentStart(code)\n    }\n\n    effects.consume(code)\n    return contentContinue\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeNonLazyLine(effects, ok, nok) {\n    const self = this\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeClosingFence(effects, ok, nok) {\n    let size = 0\n    return factorySpace(\n      effects,\n      closingSequenceStart,\n      'linePrefix',\n      this.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n    /** @type {State} */\n\n    function closingSequenceStart(code) {\n      effects.enter('codeFencedFence')\n      effects.enter('codeFencedFenceSequence')\n      return closingSequence(code)\n    }\n    /** @type {State} */\n\n    function closingSequence(code) {\n      if (code === marker) {\n        effects.consume(code)\n        size++\n        return closingSequence\n      }\n\n      if (size < sizeOpen) return nok(code)\n      effects.exit('codeFencedFenceSequence')\n      return factorySpace(effects, closingSequenceEnd, 'whitespace')(code)\n    }\n    /** @type {State} */\n\n    function closingSequenceEnd(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n\n      return nok(code)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {\n  asciiAlphanumeric,\n  asciiDigit,\n  asciiHexDigit\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this\n  let size = 0\n  /** @type {number} */\n\n  let max\n  /** @type {(code: Code) => code is number} */\n\n  let test\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n  /** @type {State} */\n\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n  /** @type {State} */\n\n  function value(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === 59 && size) {\n      token = effects.exit('characterReferenceValue')\n\n      if (\n        test === asciiAlphanumeric &&\n        !decodeNamedCharacterReference(self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {asciiPunctuation} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\n/** @type {Construct} */\n\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n}\n/** @type {Construct} */\n\nconst fullReferenceConstruct = {\n  tokenize: tokenizeFullReference\n}\n/** @type {Construct} */\n\nconst collapsedReferenceConstruct = {\n  tokenize: tokenizeCollapsedReference\n}\n/** @type {Resolver} */\n\nfunction resolveAllLabelEnd(events) {\n  let index = -1\n  /** @type {Token} */\n\n  let token\n\n  while (++index < events.length) {\n    token = events[index][1]\n\n    if (\n      token.type === 'labelImage' ||\n      token.type === 'labelLink' ||\n      token.type === 'labelEnd'\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n\n  return events\n}\n/** @type {Resolver} */\n\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length\n  let offset = 0\n  /** @type {Token} */\n\n  let token\n  /** @type {number|undefined} */\n\n  let open\n  /** @type {number|undefined} */\n\n  let close\n  /** @type {Event[]} */\n\n  let media // Find an opening.\n\n  while (index--) {\n    token = events[index][1]\n\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      } // Mark other link openings as inactive, as we can’t have links in\n      // links.\n\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n\n  const group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  const label = {\n    type: 'label',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  }\n  const text = {\n    type: 'labelText',\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ] // Opening marker.\n\n  media = push(media, events.slice(open + 1, open + offset + 3)) // Text open.\n\n  media = push(media, [['enter', text, context]]) // Between.\n\n  media = push(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  ) // Text close, marker close, label close.\n\n  media = push(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ]) // Reference, resource, or so.\n\n  media = push(media, events.slice(close + 1)) // Media close.\n\n  media = push(media, [['exit', group, context]])\n  splice(events, open, events.length, media)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Token} */\n\n  let labelStart\n  /** @type {boolean} */\n\n  let defined // Find an opening.\n\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!labelStart) {\n      return nok(code)\n    } // It’s a balanced bracket, but contains a link.\n\n    if (labelStart._inactive) return balanced(code)\n    defined = self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize({\n          start: labelStart.end,\n          end: self.now()\n        })\n      )\n    )\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return afterLabelEnd\n  }\n  /** @type {State} */\n\n  function afterLabelEnd(code) {\n    // Resource: `[asd](fgh)`.\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        ok,\n        defined ? ok : balanced\n      )(code)\n    } // Collapsed (`[asd][]`) or full (`[asd][fgh]`) reference?\n\n    if (code === 91) {\n      return effects.attempt(\n        fullReferenceConstruct,\n        ok,\n        defined\n          ? effects.attempt(collapsedReferenceConstruct, ok, balanced)\n          : balanced\n      )(code)\n    } // Shortcut reference: `[asd]`?\n\n    return defined ? ok(code) : balanced(code)\n  }\n  /** @type {State} */\n\n  function balanced(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeResource(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return factoryWhitespace(effects, open)\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 41) {\n      return end(code)\n    }\n\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      nok,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      32\n    )(code)\n  }\n  /** @type {State} */\n\n  function destinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, between)(code)\n      : end(code)\n  }\n  /** @type {State} */\n\n  function between(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factoryWhitespace(effects, end),\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeFullReference(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      afterLabel,\n      nok,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function afterLabel(code) {\n    return self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    )\n      ? ok(code)\n      : nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCollapsedReference(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Point} Point\n */\nimport {push, splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n\nfunction resolveAllAttention(events, context) {\n  let index = -1\n  /** @type {number} */\n\n  let open\n  /** @type {Token} */\n\n  let group\n  /** @type {Token} */\n\n  let text\n  /** @type {Token} */\n\n  let openingSequence\n  /** @type {Token} */\n\n  let closingSequence\n  /** @type {number} */\n\n  let use\n  /** @type {Event[]} */\n\n  let nextEvents\n  /** @type {number} */\n\n  let offset // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index // Now walk back to find an opener.\n\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open && // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          } // Number of markers to use from the sequence.\n\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          const start = Object.assign({}, events[open][1].end)\n          const end = Object.assign({}, events[index][1].start)\n          movePoint(start, -use)\n          movePoint(end, use)\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start,\n            end: Object.assign({}, events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: Object.assign({}, events[index][1].start),\n            end\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          }\n          events[open][1].end = Object.assign({}, openingSequence.start)\n          events[index][1].start = Object.assign({}, closingSequence.end)\n          nextEvents = [] // If there are more markers in the opening, add them before.\n\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          } // Opening.\n\n          nextEvents = push(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ]) // Between.\n\n          nextEvents = push(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          ) // Closing.\n\n          nextEvents = push(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ]) // If there are more markers in the closing, add them after.\n\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = push(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n\n          splice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  } // Remove remaining sequences.\n\n  index = -1\n\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null\n  const previous = this.previous\n  const before = classifyCharacter(previous)\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('attentionSequence')\n    marker = code\n    return sequence(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return sequence\n    }\n\n    const token = effects.exit('attentionSequence')\n    const after = classifyCharacter(code)\n    const open =\n      !after || (after === 2 && before) || attentionMarkers.includes(code)\n    const close =\n      !before || (before === 2 && after) || attentionMarkers.includes(previous)\n    token._open = Boolean(marker === 42 ? open : open && (before || !close))\n    token._close = Boolean(marker === 42 ? close : close && (after || !open))\n    return ok(code)\n  }\n}\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {void}\n */\n\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiAtext,\n  asciiControl\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 1\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n\n    return asciiAtext(code) ? emailAtext(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function schemeOrEmailAtext(code) {\n    return code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)\n      ? schemeInsideOrEmailAtext(code)\n      : emailAtext(code)\n  }\n  /** @type {State} */\n\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return urlInside\n    }\n\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n\n    return emailAtext(code)\n  }\n  /** @type {State} */\n\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      return end(code)\n    }\n\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return urlInside\n  }\n  /** @type {State} */\n\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (code === 62) {\n      // Exit, then change the type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      return end(code)\n    }\n\n    return emailValue(code)\n  }\n  /** @type {State} */\n\n  function emailValue(code) {\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      effects.consume(code)\n      return code === 45 ? emailValue : emailLabel\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.exit('autolink')\n    return ok\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code>|undefined} */\n\n  let marker\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {State} */\n\n  let returnState\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpen\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpen\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentStart\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentStart(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentStartDash\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function commentStartDash(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return comment\n  }\n  /** @type {State} */\n\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return end\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function cdataOpen(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length ? cdata : cdataOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return cdata\n  }\n  /** @type {State} */\n\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return declaration\n  }\n  /** @type {State} */\n\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return instruction\n  }\n  /** @type {State} */\n\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagClose(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return tagCloseBetween(code)\n  }\n  /** @type {State} */\n\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpen(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    return tagOpenAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n\n    return tagOpenBetween(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    effects.consume(code)\n    marker = undefined\n    return tagOpenAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return tagOpenAttributeValueQuotedAfter\n    }\n\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 62 || code === 47 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  } // We can’t have blank lines in content, so no need to worry about empty\n  // tokens.\n\n  /** @type {State} */\n\n  function atLineEnding(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(\n      effects,\n      afterPrefix,\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook. */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('escapeMarker')\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous\n}\n/** @type {Resolver} */\n\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4\n  let headEnterIndex = 3\n  /** @type {number} */\n\n  let index\n  /** @type {number|undefined} */\n\n  let enter // If we start and end with an EOL or a space.\n\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex // And we have data.\n\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[headEnterIndex][1].type = 'codeTextPadding'\n        events[tailExitIndex][1].type = 'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  } // Merge adjacent spaces and data.\n\n  index = headEnterIndex - 1\n  tailExitIndex++\n\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n\n      enter = undefined\n    }\n  }\n\n  return events\n}\n/** @type {Previous} */\n\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this\n  let sizeOpen = 0\n  /** @type {number} */\n\n  let size\n  /** @type {Token} */\n\n  let token\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return openingSequence(code)\n  }\n  /** @type {State} */\n\n  function openingSequence(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return openingSequence\n    }\n\n    effects.exit('codeTextSequence')\n    return gap(code)\n  }\n  /** @type {State} */\n\n  function gap(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    } // Closing fence?\n    // Could also be data.\n\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return closingSequence(code)\n    } // Tabs don’t work, and virtual spaces don’t make sense.\n\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return gap\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return gap\n    } // Data.\n\n    effects.enter('codeTextData')\n    return data(code)\n  } // In code.\n\n  /** @type {State} */\n\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return gap(code)\n    }\n\n    effects.consume(code)\n    return data\n  } // Closing fence.\n\n  /** @type {State} */\n\n  function closingSequence(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return closingSequence\n    } // Done!\n\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    } // More or less accents: mark as data.\n\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {resolver as resolveText} from './initialize/text.js'\n/** @type {Extension['document']} */\n\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n}\n/** @type {Extension['contentInitial']} */\n\nexport const contentInitial = {\n  [91]: definition\n}\n/** @type {Extension['flowInitial']} */\n\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n}\n/** @type {Extension['flow']} */\n\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n}\n/** @type {Extension['string']} */\n\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n}\n/** @type {Extension['text']} */\n\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n}\n/** @type {Extension['insideSpan']} */\n\nexport const insideSpan = {\n  null: [attention, resolveText]\n}\n/** @type {Extension['attentionMarkers']} */\n\nexport const attentionMarkers = {\n  null: [42, 95]\n}\n/** @type {Extension['disable']} */\n\nexport const disable = {\n  null: []\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding} [encoding]\n * @param {boolean} [end=false]\n * @returns {Array<Chunk>}\n */\nconst search = /[\\0\\t\\n\\r]/g\n/**\n * @returns {Preprocessor}\n */\n\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean|undefined} */\n\n  let start = true\n  /** @type {boolean|undefined} */\n\n  let atCarriageReturn\n  return preprocessor\n  /** @type {Preprocessor} */\n\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = []\n    /** @type {RegExpMatchArray|null} */\n\n    let match\n    /** @type {number} */\n\n    let next\n    /** @type {number} */\n\n    let startPosition\n    /** @type {number} */\n\n    let endPosition\n    /** @type {Code} */\n\n    let code // @ts-expect-error `Buffer` does allow an encoding.\n\n    value = buffer + value.toString(encoding)\n    startPosition = 0\n    buffer = ''\n\n    if (start) {\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n\n      start = undefined\n    }\n\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n\n        switch (code) {\n          case 0: {\n            chunks.push(65533)\n            column++\n            break\n          }\n\n          case 9: {\n            next = Math.ceil(column / 4) * 4\n            chunks.push(-2)\n\n            while (column++ < next) chunks.push(-1)\n\n            break\n          }\n\n          case 10: {\n            chunks.push(-4)\n            column = 1\n            break\n          }\n\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n\n      startPosition = endPosition + 1\n    }\n\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n\n    return chunks\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n *\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist').Point} Point\n *\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').StaticPhrasingContent} StaticPhrasingContent\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('mdast').ReferenceType} ReferenceType\n * @typedef {import('../index.js').CompileData} CompileData\n */\n\n/**\n * @typedef {Root | Content} Node\n * @typedef {Extract<Node, UnistParent>} Parent\n *\n * @typedef {Omit<UnistParent, 'type' | 'children'> & {type: 'fragment', children: Array<PhrasingContent>}} Fragment\n */\n\n/**\n * @callback Transform\n *   Extra transform, to change the AST afterwards.\n * @param {Root} tree\n *   Tree to transform.\n * @returns {Root | undefined | null | void}\n *   New tree or nothing (in which case the current tree is used).\n *\n * @callback Handle\n *   Handle a token.\n * @param {CompileContext} this\n *   Context.\n * @param {Token} token\n *   Current token.\n * @returns {void}\n *   Nothing.\n *\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n *\n * @callback OnEnterError\n *   Handle the case where the `right` token is open, but it is closed (by the\n *   `left` token) or because we reached the end of the document.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token | undefined} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {void}\n *   Nothing.\n *\n * @callback OnExitError\n *   Handle the case where the `right` token is open but it is closed by\n *   exiting the `left` token.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {void}\n *   Nothing.\n *\n * @typedef {[Token, OnEnterError | undefined]} TokenTuple\n *   Open token on the stack, with an optional error handler for when\n *   that token isn’t closed properly.\n */\n\n/**\n * @typedef Config\n *   Configuration.\n *\n *   We have our defaults, but extensions will add more.\n * @property {Array<string>} canContainEols\n *   Token types where line endings are used.\n * @property {Handles} enter\n *   Opening handles.\n * @property {Handles} exit\n *   Closing handles.\n * @property {Array<Transform>} transforms\n *   Tree transforms.\n *\n * @typedef {Partial<Config>} Extension\n *   Change how markdown tokens from micromark are turned into mdast.\n *\n * @typedef CompileContext\n *   mdast compiler context.\n * @property {Array<Node | Fragment>} stack\n *   Stack of nodes.\n * @property {Array<TokenTuple>} tokenStack\n *   Stack of tokens.\n * @property {<Key extends keyof CompileData>(key: Key) => CompileData[Key]} getData\n *   Get data from the key/value store.\n * @property {<Key extends keyof CompileData>(key: Key, value?: CompileData[Key]) => void} setData\n *   Set data into the key/value store.\n * @property {(this: CompileContext) => void} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {<Kind extends Node>(this: CompileContext, node: Kind, token: Token, onError?: OnEnterError) => Kind} enter\n *   Enter a token.\n * @property {(this: CompileContext, token: Token, onError?: OnExitError) => Node} exit\n *   Exit a token.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {Config} config\n *   Configuration.\n *\n * @typedef FromMarkdownOptions\n *   Configuration for how to build mdast.\n * @property {Array<Extension | Array<Extension>> | null | undefined} [mdastExtensions]\n *   Extensions for this utility to change how tokens are turned into a tree.\n *\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n *   Configuration.\n */\n\n// To do: micromark: create a registry of tokens?\n// To do: next major: don’t return given `Node` from `enter`.\n// To do: next major: remove setter/getter.\n\nimport {toString} from 'mdast-util-to-string'\nimport {parse} from 'micromark/lib/parse.js'\nimport {preprocess} from 'micromark/lib/preprocess.js'\nimport {postprocess} from 'micromark/lib/postprocess.js'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {decodeString} from 'micromark-util-decode-string'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {stringifyPosition} from 'unist-util-stringify-position'\nconst own = {}.hasOwnProperty\n\n/**\n * @param value\n *   Markdown to parse.\n * @param encoding\n *   Character encoding for when `value` is `Buffer`.\n * @param options\n *   Configuration.\n * @returns\n *   mdast tree.\n */\nexport const fromMarkdown =\n  /**\n   * @type {(\n   *   ((value: Value, encoding: Encoding, options?: Options | null | undefined) => Root) &\n   *   ((value: Value, options?: Options | null | undefined) => Root)\n   * )}\n   */\n\n  /**\n   * @param {Value} value\n   * @param {Encoding | Options | null | undefined} [encoding]\n   * @param {Options | null | undefined} [options]\n   * @returns {Root}\n   */\n  function (value, encoding, options) {\n    if (typeof encoding !== 'string') {\n      options = encoding\n      encoding = undefined\n    }\n    return compiler(options)(\n      postprocess(\n        // @ts-expect-error: micromark types need to accept `null`.\n        parse(options).document().write(preprocess()(value, encoding, true))\n      )\n    )\n  }\n\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options | null | undefined} [options]\n */\nfunction compiler(options) {\n  /** @type {Config} */\n  const config = {\n    transforms: [],\n    canContainEols: ['emphasis', 'fragment', 'heading', 'paragraph', 'strong'],\n    enter: {\n      autolink: opener(link),\n      autolinkProtocol: onenterdata,\n      autolinkEmail: onenterdata,\n      atxHeading: opener(heading),\n      blockQuote: opener(blockQuote),\n      characterEscape: onenterdata,\n      characterReference: onenterdata,\n      codeFenced: opener(codeFlow),\n      codeFencedFenceInfo: buffer,\n      codeFencedFenceMeta: buffer,\n      codeIndented: opener(codeFlow, buffer),\n      codeText: opener(codeText, buffer),\n      codeTextData: onenterdata,\n      data: onenterdata,\n      codeFlowValue: onenterdata,\n      definition: opener(definition),\n      definitionDestinationString: buffer,\n      definitionLabelString: buffer,\n      definitionTitleString: buffer,\n      emphasis: opener(emphasis),\n      hardBreakEscape: opener(hardBreak),\n      hardBreakTrailing: opener(hardBreak),\n      htmlFlow: opener(html, buffer),\n      htmlFlowData: onenterdata,\n      htmlText: opener(html, buffer),\n      htmlTextData: onenterdata,\n      image: opener(image),\n      label: buffer,\n      link: opener(link),\n      listItem: opener(listItem),\n      listItemValue: onenterlistitemvalue,\n      listOrdered: opener(list, onenterlistordered),\n      listUnordered: opener(list),\n      paragraph: opener(paragraph),\n      reference: onenterreference,\n      referenceString: buffer,\n      resourceDestinationString: buffer,\n      resourceTitleString: buffer,\n      setextHeading: opener(heading),\n      strong: opener(strong),\n      thematicBreak: opener(thematicBreak)\n    },\n    exit: {\n      atxHeading: closer(),\n      atxHeadingSequence: onexitatxheadingsequence,\n      autolink: closer(),\n      autolinkEmail: onexitautolinkemail,\n      autolinkProtocol: onexitautolinkprotocol,\n      blockQuote: closer(),\n      characterEscapeValue: onexitdata,\n      characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n      characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n      characterReferenceValue: onexitcharacterreferencevalue,\n      codeFenced: closer(onexitcodefenced),\n      codeFencedFence: onexitcodefencedfence,\n      codeFencedFenceInfo: onexitcodefencedfenceinfo,\n      codeFencedFenceMeta: onexitcodefencedfencemeta,\n      codeFlowValue: onexitdata,\n      codeIndented: closer(onexitcodeindented),\n      codeText: closer(onexitcodetext),\n      codeTextData: onexitdata,\n      data: onexitdata,\n      definition: closer(),\n      definitionDestinationString: onexitdefinitiondestinationstring,\n      definitionLabelString: onexitdefinitionlabelstring,\n      definitionTitleString: onexitdefinitiontitlestring,\n      emphasis: closer(),\n      hardBreakEscape: closer(onexithardbreak),\n      hardBreakTrailing: closer(onexithardbreak),\n      htmlFlow: closer(onexithtmlflow),\n      htmlFlowData: onexitdata,\n      htmlText: closer(onexithtmltext),\n      htmlTextData: onexitdata,\n      image: closer(onexitimage),\n      label: onexitlabel,\n      labelText: onexitlabeltext,\n      lineEnding: onexitlineending,\n      link: closer(onexitlink),\n      listItem: closer(),\n      listOrdered: closer(),\n      listUnordered: closer(),\n      paragraph: closer(),\n      referenceString: onexitreferencestring,\n      resourceDestinationString: onexitresourcedestinationstring,\n      resourceTitleString: onexitresourcetitlestring,\n      resource: onexitresource,\n      setextHeading: closer(onexitsetextheading),\n      setextHeadingLineSequence: onexitsetextheadinglinesequence,\n      setextHeadingText: onexitsetextheadingtext,\n      strong: closer(),\n      thematicBreak: closer()\n    }\n  }\n  configure(config, (options || {}).mdastExtensions || [])\n\n  /** @type {CompileData} */\n  const data = {}\n  return compile\n\n  /**\n   * Turn micromark events into an mdast tree.\n   *\n   * @param {Array<Event>} events\n   *   Events.\n   * @returns {Root}\n   *   mdast tree.\n   */\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    }\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n    const context = {\n      stack: [tree],\n      tokenStack: [],\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      setData,\n      getData\n    }\n    /** @type {Array<number>} */\n    const listStack = []\n    let index = -1\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === 'listOrdered' ||\n        events[index][1].type === 'listUnordered'\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          const tail = listStack.pop()\n          index = prepareList(events, tail, index)\n        }\n      }\n    }\n    index = -1\n    while (++index < events.length) {\n      const handler = config[events[index][0]]\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          Object.assign(\n            {\n              sliceSerialize: events[index][2].sliceSerialize\n            },\n            context\n          ),\n          events[index][1]\n        )\n      }\n    }\n\n    // Handle tokens still being open.\n    if (context.tokenStack.length > 0) {\n      const tail = context.tokenStack[context.tokenStack.length - 1]\n      const handler = tail[1] || defaultOnError\n      handler.call(context, undefined, tail[0])\n    }\n\n    // Figure out `root` position.\n    tree.position = {\n      start: point(\n        events.length > 0\n          ? events[0][1].start\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      ),\n      end: point(\n        events.length > 0\n          ? events[events.length - 2][1].end\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      )\n    }\n\n    // Call transforms.\n    index = -1\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n    return tree\n  }\n\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n  function prepareList(events, start, length) {\n    let index = start - 1\n    let containerBalance = -1\n    let listSpread = false\n    /** @type {Token | undefined} */\n    let listItem\n    /** @type {number | undefined} */\n    let lineIndex\n    /** @type {number | undefined} */\n    let firstBlankLineIndex\n    /** @type {boolean | undefined} */\n    let atMarker\n    while (++index <= length) {\n      const event = events[index]\n      if (\n        event[1].type === 'listUnordered' ||\n        event[1].type === 'listOrdered' ||\n        event[1].type === 'blockQuote'\n      ) {\n        if (event[0] === 'enter') {\n          containerBalance++\n        } else {\n          containerBalance--\n        }\n        atMarker = undefined\n      } else if (event[1].type === 'lineEndingBlank') {\n        if (event[0] === 'enter') {\n          if (\n            listItem &&\n            !atMarker &&\n            !containerBalance &&\n            !firstBlankLineIndex\n          ) {\n            firstBlankLineIndex = index\n          }\n          atMarker = undefined\n        }\n      } else if (\n        event[1].type === 'linePrefix' ||\n        event[1].type === 'listItemValue' ||\n        event[1].type === 'listItemMarker' ||\n        event[1].type === 'listItemPrefix' ||\n        event[1].type === 'listItemPrefixWhitespace'\n      ) {\n        // Empty.\n      } else {\n        atMarker = undefined\n      }\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === 'listItemPrefix') ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === 'listUnordered' ||\n            event[1].type === 'listOrdered'))\n      ) {\n        if (listItem) {\n          let tailIndex = index\n          lineIndex = undefined\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex]\n            if (\n              tailEvent[1].type === 'lineEnding' ||\n              tailEvent[1].type === 'lineEndingBlank'\n            ) {\n              if (tailEvent[0] === 'exit') continue\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank'\n                listSpread = true\n              }\n              tailEvent[1].type = 'lineEnding'\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === 'linePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\n              tailEvent[1].type === 'blockQuoteMarker' ||\n              tailEvent[1].type === 'listItemIndent'\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            // @ts-expect-error Patched.\n            listItem._spread = true\n          }\n\n          // Fix position.\n          listItem.end = Object.assign(\n            {},\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        }\n\n        // Create a new list item.\n        if (event[1].type === 'listItemPrefix') {\n          listItem = {\n            type: 'listItem',\n            // @ts-expect-error Patched\n            _spread: false,\n            start: Object.assign({}, event[1].start)\n          }\n          // @ts-expect-error: `listItem` is most definitely defined, TS...\n          events.splice(index, 0, ['enter', listItem, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    }\n\n    // @ts-expect-error Patched.\n    events[start][1]._spread = listSpread\n    return length\n  }\n\n  /**\n   * Set data.\n   *\n   * @template {keyof CompileData} Key\n   *   Field type.\n   * @param {Key} key\n   *   Key of field.\n   * @param {CompileData[Key]} [value]\n   *   New value.\n   * @returns {void}\n   *   Nothing.\n   */\n  function setData(key, value) {\n    data[key] = value\n  }\n\n  /**\n   * Get data.\n   *\n   * @template {keyof CompileData} Key\n   *   Field type.\n   * @param {Key} key\n   *   Key of field.\n   * @returns {CompileData[Key]}\n   *   Value.\n   */\n  function getData(key) {\n    return data[key]\n  }\n\n  /**\n   * Create an opener handle.\n   *\n   * @param {(token: Token) => Node} create\n   *   Create a node.\n   * @param {Handle} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function opener(create, and) {\n    return open\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {void}\n   */\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    })\n  }\n\n  /**\n   * @template {Node} Kind\n   *   Node type.\n   * @this {CompileContext}\n   *   Context.\n   * @param {Kind} node\n   *   Node to enter.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnEnterError | undefined} [errorHandler]\n   *   Handle the case where this token is open, but it is closed by something else.\n   * @returns {Kind}\n   *   The given node.\n   */\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1]\n    // @ts-expect-error: Assume `Node` can exist as a child of `parent`.\n    parent.children.push(node)\n    this.stack.push(node)\n    this.tokenStack.push([token, errorHandler])\n    // @ts-expect-error: `end` will be patched later.\n    node.position = {\n      start: point(token.start)\n    }\n    return node\n  }\n\n  /**\n   * Create a closer handle.\n   *\n   * @param {Handle} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function closer(and) {\n    return close\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   *   Context.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnExitError | undefined} [onExitError]\n   *   Handle the case where another token is open.\n   * @returns {Node}\n   *   The closed node.\n   */\n  function exit(token, onExitError) {\n    const node = this.stack.pop()\n    const open = this.tokenStack.pop()\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({\n            start: token.start,\n            end: token.end\n          }) +\n          '): it’s not open'\n      )\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0])\n      } else {\n        const handler = open[1] || defaultOnError\n        handler.call(this, token, open[0])\n      }\n    }\n    node.position.end = point(token.end)\n    return node\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n  function resume() {\n    return toString(this.stack.pop())\n  }\n\n  //\n  // Handlers.\n  //\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistordered() {\n    setData('expectingFirstListItemValue', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistitemvalue(token) {\n    if (getData('expectingFirstListItemValue')) {\n      const ancestor = this.stack[this.stack.length - 2]\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10)\n      setData('expectingFirstListItemValue')\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.lang = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfencemeta() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.meta = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (getData('flowCodeInside')) return\n    this.buffer()\n    setData('flowCodeInside', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefenced() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n    setData('flowCodeInside')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodeindented() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitionlabelstring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiontitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitatxheadingsequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length\n      node.depth = depth\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadingtext() {\n    setData('setextHeadingSlurpLineEnding', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadinglinesequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    node.depth = this.sliceSerialize(token).charCodeAt(0) === 61 ? 1 : 2\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheading() {\n    setData('setextHeadingSlurpLineEnding')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterdata(token) {\n    const node = this.stack[this.stack.length - 1]\n    let tail = node.children[node.children.length - 1]\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text()\n      // @ts-expect-error: we’ll add `end` later.\n      tail.position = {\n        start: point(token.start)\n      }\n      // @ts-expect-error: Assume `parent` accepts `text`.\n      node.children.push(tail)\n    }\n    this.stack.push(tail)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop()\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1]\n    // If we’re at a hard break, include the line ending in there.\n    if (getData('atHardBreak')) {\n      const tail = context.children[context.children.length - 1]\n      tail.position.end = point(token.end)\n      setData('atHardBreak')\n      return\n    }\n    if (\n      !getData('setextHeadingSlurpLineEnding') &&\n      config.canContainEols.includes(context.type)\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithardbreak() {\n    setData('atHardBreak', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmlflow() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmltext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcodetext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlink() {\n    const node = this.stack[this.stack.length - 1]\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (getData('inReference')) {\n      /** @type {ReferenceType} */\n      const referenceType = getData('referenceType') || 'shortcut'\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n    setData('referenceType')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitimage() {\n    const node = this.stack[this.stack.length - 1]\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (getData('inReference')) {\n      /** @type {ReferenceType} */\n      const referenceType = getData('referenceType') || 'shortcut'\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n    setData('referenceType')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabeltext(token) {\n    const string = this.sliceSerialize(token)\n    const ancestor = this.stack[this.stack.length - 2]\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    ancestor.label = decodeString(string)\n    // @ts-expect-error: same as above.\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabel() {\n    const fragment = this.stack[this.stack.length - 1]\n    const value = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    // Assume a reference.\n    setData('inReference', true)\n    if (node.type === 'link') {\n      /** @type {Array<StaticPhrasingContent>} */\n      // @ts-expect-error: Assume static phrasing content.\n      const children = fragment.children\n      node.children = children\n    } else {\n      node.alt = value\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresource() {\n    setData('inReference')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterreference() {\n    setData('referenceType', 'collapsed')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitreferencestring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    node.label = label\n    // @ts-expect-error: same as above.\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    setData('referenceType', 'full')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcharacterreferencemarker(token) {\n    setData('characterReferenceType', token.type)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token)\n    const type = getData('characterReferenceType')\n    /** @type {string} */\n    let value\n    if (type) {\n      value = decodeNumericCharacterReference(\n        data,\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\n      )\n      setData('characterReferenceType')\n    } else {\n      const result = decodeNamedCharacterReference(data)\n      value = result\n    }\n    const tail = this.stack.pop()\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    node.url = this.sliceSerialize(token)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    node.url = 'mailto:' + this.sliceSerialize(token)\n  }\n\n  //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    }\n  }\n\n  /** @returns {Code} */\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    }\n  }\n\n  /** @returns {InlineCode} */\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    }\n  }\n\n  /** @returns {Definition} */\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n\n  /** @returns {Emphasis} */\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    }\n  }\n\n  /** @returns {Heading} */\n  function heading() {\n    // @ts-expect-error `depth` will be set later.\n    return {\n      type: 'heading',\n      depth: undefined,\n      children: []\n    }\n  }\n\n  /** @returns {Break} */\n  function hardBreak() {\n    return {\n      type: 'break'\n    }\n  }\n\n  /** @returns {HTML} */\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    }\n  }\n\n  /** @returns {Image} */\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    }\n  }\n\n  /** @returns {Link} */\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n\n  /** @returns {Paragraph} */\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    }\n  }\n\n  /** @returns {Strong} */\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    }\n  }\n\n  /** @returns {Text} */\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    }\n  }\n\n  /** @returns {ThematicBreak} */\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    }\n  }\n}\n\n/**\n * Copy a point-like value.\n *\n * @param {Point} d\n *   Point-like value.\n * @returns {Point}\n *   unist point.\n */\nfunction point(d) {\n  return {\n    line: d.line,\n    column: d.column,\n    offset: d.offset\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Array<Extension | Array<Extension>>} extensions\n * @returns {void}\n */\nfunction configure(combined, extensions) {\n  let index = -1\n  while (++index < extensions.length) {\n    const value = extensions[index]\n    if (Array.isArray(value)) {\n      configure(combined, value)\n    } else {\n      extension(combined, value)\n    }\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Extension} extension\n * @returns {void}\n */\nfunction extension(combined, extension) {\n  /** @type {keyof Extension} */\n  let key\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      if (key === 'canContainEols') {\n        const right = extension[key]\n        if (right) {\n          combined[key].push(...right)\n        }\n      } else if (key === 'transforms') {\n        const right = extension[key]\n        if (right) {\n          combined[key].push(...right)\n        }\n      } else if (key === 'enter' || key === 'exit') {\n        const right = extension[key]\n        if (right) {\n          Object.assign(combined[key], right)\n        }\n      }\n    }\n  }\n}\n\n/** @type {OnEnterError} */\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error(\n      'Cannot close `' +\n        left.type +\n        '` (' +\n        stringifyPosition({\n          start: left.start,\n          end: left.end\n        }) +\n        '): a different token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is open'\n    )\n  } else {\n    throw new Error(\n      'Cannot close document, a token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is still open'\n    )\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {subtokenize} from 'micromark-util-subtokenize'\n/**\n * @param {Array<Event>} events\n * @returns {Array<Event>}\n */\n\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Create} Create\n */\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {text, string} from './initialize/text.js'\nimport {createTokenizer} from './create-tokenizer.js'\nimport * as defaultConstructs from './constructs.js'\n/**\n * @param {ParseOptions} [options]\n * @returns {ParseContext}\n */\n\nexport function parse(options = {}) {\n  /** @type {FullNormalizedExtension} */\n  // @ts-expect-error `defaultConstructs` is full, so the result will be too.\n  const constructs = combineExtensions(\n    // @ts-expect-error Same as above.\n    [defaultConstructs].concat(options.extensions || [])\n  )\n  /** @type {ParseContext} */\n\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  }\n  return parser\n  /**\n   * @param {InitialConstruct} initial\n   */\n\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n","import remarkParse from './lib/index.js'\n\nexport default remarkParse\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/** @type {import('unified').Plugin<[Options?] | void[], string, Root>} */\nexport default function remarkParse(options) {\n  /** @type {import('unified').ParserFunction<Root>} */\n  const parser = (doc) => {\n    // Assume options.\n    const settings = /** @type {Options} */ (this.data('settings'))\n\n    return fromMarkdown(\n      doc,\n      Object.assign({}, settings, options, {\n        // Note: these options are not in the readme.\n        // The goal is for them to be set by plugins on `data` instead of being\n        // passed by users.\n        extensions: this.data('micromarkExtensions') || [],\n        mdastExtensions: this.data('fromMarkdownExtensions') || []\n      })\n    )\n  }\n\n  Object.assign(this, {Parser: parser})\n}\n","import {asciiAlphanumeric} from 'micromark-util-character'\nimport {encode} from 'micromark-util-encode'\n\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri` below).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * Then, a regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`,\n * or `/^https?$/i` for `img[src]`.\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string|undefined} url\n * @param {RegExp} [protocol]\n * @returns {string}\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''))\n\n  if (!protocol) {\n    return value\n  }\n\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 || // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) || // It is a protocol, it should be allowed.\n    protocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n/**\n * Normalize a URL (such as used in definitions).\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n * @returns {string}\n */\n\nexport function normalizeUri(value) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n  let start = 0\n  let skip = 0\n\n  while (++index < value.length) {\n    const code = value.charCodeAt(index)\n    /** @type {string} */\n\n    let replace = '' // A correct percent encoded value.\n\n    if (\n      code === 37 &&\n      asciiAlphanumeric(value.charCodeAt(index + 1)) &&\n      asciiAlphanumeric(value.charCodeAt(index + 2))\n    ) {\n      skip = 2\n    } // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code)\n      }\n    } // Astral.\n    else if (code > 55295 && code < 57344) {\n      const next = value.charCodeAt(index + 1) // A correct surrogate pair.\n\n      if (code < 56320 && next > 56319 && next < 57344) {\n        replace = String.fromCharCode(code, next)\n        skip = 1\n      } // Lone surrogate.\n      else {\n        replace = '\\uFFFD'\n      }\n    } // Unicode.\n    else {\n      replace = String.fromCharCode(code)\n    }\n\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace))\n      start = index + skip + 1\n      replace = ''\n    }\n\n    if (skip) {\n      index += skip\n      skip = 0\n    }\n  }\n\n  return result.join('') + value.slice(start)\n}\n","/**\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {NodeLike | Node | null | undefined} [node]\n *   Node.\n * @returns {Position}\n *   Position.\n */\nexport function position(node) {\n  return {start: pointStart(node), end: pointEnd(node)}\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'start' | 'end'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {NodeLike | Node | null | undefined} [node]\n   * @returns {Point}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    // To do: next major: don’t return points when invalid.\n    return {\n      // @ts-expect-error: in practice, null is allowed.\n      line: point.line || null,\n      // @ts-expect-error: in practice, null is allowed.\n      column: point.column || null,\n      // @ts-expect-error: in practice, null is allowed.\n      offset: point.offset > -1 ? point.offset : null\n    }\n  }\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Definition} Definition\n */\n\n/**\n * @typedef {Root | Content} Node\n *\n * @callback GetDefinition\n *   Get a definition by identifier.\n * @param {string | null | undefined} [identifier]\n *   Identifier of definition.\n * @returns {Definition | null}\n *   Definition corresponding to `identifier` or `null`.\n */\n\nimport {visit} from 'unist-util-visit'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Find definitions in `tree`.\n *\n * Uses CommonMark precedence, which means that earlier definitions are\n * preferred over duplicate later definitions.\n *\n * @param {Node} tree\n *   Tree to check.\n * @returns {GetDefinition}\n *   Getter.\n */\nexport function definitions(tree) {\n  /** @type {Record<string, Definition>} */\n  const cache = Object.create(null)\n\n  if (!tree || !tree.type) {\n    throw new Error('mdast-util-definitions expected node')\n  }\n\n  visit(tree, 'definition', (definition) => {\n    const id = clean(definition.identifier)\n    if (id && !own.call(cache, id)) {\n      cache[id] = definition\n    }\n  })\n\n  return definition\n\n  /** @type {GetDefinition} */\n  function definition(identifier) {\n    const id = clean(identifier)\n    // To do: next major: return `undefined` when not found.\n    return id && own.call(cache, id) ? cache[id] : null\n  }\n}\n\n/**\n * @param {string | null | undefined} [value]\n * @returns {string}\n */\nfunction clean(value) {\n  return String(value || '').toUpperCase()\n}\n","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('hast').Element} Element\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `footnoteReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {FootnoteReference} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnoteReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const safeId = normalizeUri(id.toLowerCase())\n  const index = state.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  if (index === -1) {\n    state.footnoteOrder.push(id)\n    state.footnoteCounts[id] = 1\n    counter = state.footnoteOrder.length\n  } else {\n    state.footnoteCounts[id]++\n    counter = index + 1\n  }\n\n  const reuseCounter = state.footnoteCounts[id]\n\n  /** @type {Element} */\n  const link = {\n    type: 'element',\n    tagName: 'a',\n    properties: {\n      href: '#' + state.clobberPrefix + 'fn-' + safeId,\n      id:\n        state.clobberPrefix +\n        'fnref-' +\n        safeId +\n        (reuseCounter > 1 ? '-' + reuseCounter : ''),\n      dataFootnoteRef: true,\n      ariaDescribedBy: ['footnote-label']\n    },\n    children: [{type: 'text', value: String(counter)}]\n  }\n  state.patch(node, link)\n\n  /** @type {Element} */\n  const sup = {\n    type: 'element',\n    tagName: 'sup',\n    properties: {},\n    children: [link]\n  }\n  state.patch(node, sup)\n  return state.applyData(node, sup)\n}\n","/**\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Reference} Reference\n * @typedef {import('mdast').Root} Root\n *\n * @typedef {import('./state.js').State} State\n */\n\n/**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Reference>} References\n */\n\n// To do: next major: always return array.\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @param {State} state\n *   Info passed around.\n * @param {References} node\n *   Reference node (image, link).\n * @returns {ElementContent | Array<ElementContent>}\n *   hast content.\n */\nexport function revert(state, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return {type: 'text', value: '![' + node.alt + suffix}\n  }\n\n  const contents = state.all(node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift({type: 'text', value: '['})\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push({type: 'text', value: suffix})\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Parent>} Parents\n */\n\n/**\n * Turn an mdast `listItem` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ListItem} node\n *   mdast node.\n * @param {Parents | null | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function listItem(state, node, parent) {\n  const results = state.all(node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const properties = {}\n  /** @type {Array<ElementContent>} */\n  const children = []\n\n  if (typeof node.checked === 'boolean') {\n    const head = results[0]\n    /** @type {Element} */\n    let paragraph\n\n    if (head && head.type === 'element' && head.tagName === 'p') {\n      paragraph = head\n    } else {\n      paragraph = {type: 'element', tagName: 'p', properties: {}, children: []}\n      results.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift({type: 'text', value: ' '})\n    }\n\n    paragraph.children.unshift({\n      type: 'element',\n      tagName: 'input',\n      properties: {type: 'checkbox', checked: node.checked, disabled: true},\n      children: []\n    })\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    properties.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < results.length) {\n    const child = results[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      children.push({type: 'text', value: '\\n'})\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      children.push(...child.children)\n    } else {\n      children.push(child)\n    }\n  }\n\n  const tail = results[results.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || tail.type !== 'element' || tail.tagName !== 'p')) {\n    children.push({type: 'text', value: '\\n'})\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'li', properties, children}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * @param {Parents} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = false\n  if (node.type === 'list') {\n    loose = node.spread || false\n    const children = node.children\n    let index = -1\n\n    while (!loose && ++index < children.length) {\n      loose = listItemLoose(children[index])\n    }\n  }\n\n  return loose\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === undefined || spread === null\n    ? node.children.length > 1\n    : spread\n}\n","const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {footnote} from './footnote.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {tableRow} from './table-row.js'\nimport {tableCell} from './table-cell.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default handlers for nodes.\n */\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  footnote,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  root,\n  strong,\n  table,\n  tableCell,\n  tableRow,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  // To do: next major: return `undefined`.\n  return null\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `blockquote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Blockquote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function blockquote(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'blockquote',\n    properties: {},\n    children: state.wrap(state.all(node), true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `break` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Break} node\n *   mdast node.\n * @returns {Array<Element | Text>}\n *   hast element content.\n */\nexport function hardBreak(state, node) {\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'br', properties: {}, children: []}\n  state.patch(node, result)\n  return [state.applyData(node, result), {type: 'text', value: '\\n'}]\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../state.js').State} State\n\n */\n\n/**\n * Turn an mdast `code` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Code} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function code(state, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  // To do: next major, use `node.lang` w/o regex, the splitting’s been going\n  // on for years in remark now.\n  const lang = node.lang ? node.lang.match(/^[^ \\t]+(?=[ \\t]|$)/) : null\n  /** @type {Properties} */\n  const properties = {}\n\n  if (lang) {\n    properties.className = ['language-' + lang]\n  }\n\n  // Create `<code>`.\n  /** @type {Element} */\n  let result = {\n    type: 'element',\n    tagName: 'code',\n    properties,\n    children: [{type: 'text', value}]\n  }\n\n  if (node.meta) {\n    result.data = {meta: node.meta}\n  }\n\n  state.patch(node, result)\n  result = state.applyData(node, result)\n\n  // Create `<pre>`.\n  result = {type: 'element', tagName: 'pre', properties: {}, children: [result]}\n  state.patch(node, result)\n  return result\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../state.js').State} State\n\n */\n\n/**\n * Turn an mdast `delete` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Delete} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strikethrough(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'del',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `emphasis` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Emphasis} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function emphasis(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'em',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Footnote} Footnote\n * @typedef {import('../state.js').State} State\n */\n\nimport {footnoteReference} from './footnote-reference.js'\n\n// To do: when both:\n// * <https://github.com/micromark/micromark-extension-footnote>\n// * <https://github.com/syntax-tree/mdast-util-footnote>\n// …are archived, remove this (also from mdast).\n// These inline notes are not used in GFM.\n\n/**\n * Turn an mdast `footnote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Footnote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnote(state, node) {\n  const footnoteById = state.footnoteById\n  let no = 1\n\n  while (no in footnoteById) no++\n\n  const identifier = String(no)\n\n  footnoteById[identifier] = {\n    type: 'footnoteDefinition',\n    identifier,\n    children: [{type: 'paragraph', children: node.children}],\n    position: node.position\n  }\n\n  return footnoteReference(state, {\n    type: 'footnoteReference',\n    identifier,\n    position: node.position\n  })\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `heading` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Heading} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function heading(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'h' + node.depth,\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').HTML} Html\n * @typedef {import('../state.js').State} State\n * @typedef {import('../../index.js').Raw} Raw\n */\n\n/**\n * Turn an mdast `html` node into hast (`raw` node in dangerous mode, otherwise\n * nothing).\n *\n * @param {State} state\n *   Info passed around.\n * @param {Html} node\n *   mdast node.\n * @returns {Raw | Element | null}\n *   hast node.\n */\nexport function html(state, node) {\n  if (state.dangerous) {\n    /** @type {Raw} */\n    const result = {type: 'raw', value: node.value}\n    state.patch(node, result)\n    return state.applyData(node, result)\n  }\n\n  // To do: next major: return `undefined`.\n  return null\n}\n","/**\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `imageReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ImageReference} node\n *   mdast node.\n * @returns {ElementContent | Array<ElementContent>}\n *   hast node.\n */\nexport function imageReference(state, node) {\n  const def = state.definition(node.identifier)\n\n  if (!def) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(def.url || ''), alt: node.alt}\n\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Image} Image\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `image` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Image} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function image(state, node) {\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(node.url)}\n\n  if (node.alt !== null && node.alt !== undefined) {\n    properties.alt = node.alt\n  }\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `inlineCode` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {InlineCode} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function inlineCode(state, node) {\n  /** @type {Text} */\n  const text = {type: 'text', value: node.value.replace(/\\r?\\n|\\r/g, ' ')}\n  state.patch(node, text)\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'code',\n    properties: {},\n    children: [text]\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `linkReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {LinkReference} node\n *   mdast node.\n * @returns {ElementContent | Array<ElementContent>}\n *   hast node.\n */\nexport function linkReference(state, node) {\n  const def = state.definition(node.identifier)\n\n  if (!def) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(def.url || '')}\n\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `link` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Link} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function link(state, node) {\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').List} List\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `list` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {List} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function list(state, node) {\n  /** @type {Properties} */\n  const properties = {}\n  const results = state.all(node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    properties.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < results.length) {\n    const child = results[index]\n\n    if (\n      child.type === 'element' &&\n      child.tagName === 'li' &&\n      child.properties &&\n      Array.isArray(child.properties.className) &&\n      child.properties.className.includes('task-list-item')\n    ) {\n      properties.className = ['contains-task-list']\n      break\n    }\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: node.ordered ? 'ol' : 'ul',\n    properties,\n    children: state.wrap(results, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `paragraph` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Paragraph} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function paragraph(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'p',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `root` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastRoot} node\n *   mdast node.\n * @returns {HastRoot | HastElement}\n *   hast node.\n */\nexport function root(state, node) {\n  /** @type {HastRoot} */\n  const result = {type: 'root', children: state.wrap(state.all(node))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `strong` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Strong} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strong(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'strong',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Table} Table\n * @typedef {import('../state.js').State} State\n */\n\nimport {pointStart, pointEnd} from 'unist-util-position'\n\n/**\n * Turn an mdast `table` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Table} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function table(state, node) {\n  const rows = state.all(node)\n  const firstRow = rows.shift()\n  /** @type {Array<Element>} */\n  const tableContent = []\n\n  if (firstRow) {\n    /** @type {Element} */\n    const head = {\n      type: 'element',\n      tagName: 'thead',\n      properties: {},\n      children: state.wrap([firstRow], true)\n    }\n    state.patch(node.children[0], head)\n    tableContent.push(head)\n  }\n\n  if (rows.length > 0) {\n    /** @type {Element} */\n    const body = {\n      type: 'element',\n      tagName: 'tbody',\n      properties: {},\n      children: state.wrap(rows, true)\n    }\n\n    const start = pointStart(node.children[1])\n    const end = pointEnd(node.children[node.children.length - 1])\n    if (start.line && end.line) body.position = {start, end}\n    tableContent.push(body)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'table',\n    properties: {},\n    children: state.wrap(tableContent, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `tableCell` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableCell} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function tableCell(state, node) {\n  // Note: this function is normally not called: see `table-row` for how rows\n  // and their cells are compiled.\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'td', // Assume body cell.\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * @typedef {Root | Content} Nodes\n * @typedef {Extract<Nodes, Parent>} Parents\n */\n\n/**\n * Turn an mdast `tableRow` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableRow} node\n *   mdast node.\n * @param {Parents | null | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function tableRow(state, node, parent) {\n  const siblings = parent ? parent.children : undefined\n  // Generate a body row when without parent.\n  const rowIndex = siblings ? siblings.indexOf(node) : 1\n  const tagName = rowIndex === 0 ? 'th' : 'td'\n  const align = parent && parent.type === 'table' ? parent.align : undefined\n  const length = align ? align.length : node.children.length\n  let cellIndex = -1\n  /** @type {Array<ElementContent>} */\n  const cells = []\n\n  while (++cellIndex < length) {\n    // Note: can also be undefined.\n    const cell = node.children[cellIndex]\n    /** @type {Properties} */\n    const properties = {}\n    const alignValue = align ? align[cellIndex] : undefined\n\n    if (alignValue) {\n      properties.align = alignValue\n    }\n\n    /** @type {Element} */\n    let result = {type: 'element', tagName, properties, children: []}\n\n    if (cell) {\n      result.children = state.all(cell)\n      state.patch(cell, result)\n      result = state.applyData(node, result)\n    }\n\n    cells.push(result)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'tr',\n    properties: {},\n    children: state.wrap(cells, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').Text} HastText\n * @typedef {import('mdast').Text} MdastText\n * @typedef {import('../state.js').State} State\n */\n\nimport {trimLines} from 'trim-lines'\n\n/**\n * Turn an mdast `text` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastText} node\n *   mdast node.\n * @returns {HastText | HastElement}\n *   hast node.\n */\nexport function text(state, node) {\n  /** @type {HastText} */\n  const result = {type: 'text', value: trimLines(String(node.value))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('../state.js').State} State\n */\n\n/**\n * Turn an mdast `thematicBreak` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ThematicBreak} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function thematicBreak(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'hr',\n    properties: {},\n    children: []\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Content} HastContent\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').ElementContent} HastElementContent\n * @typedef {import('hast').Properties} HastProperties\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('hast').Text} HastText\n *\n * @typedef {import('mdast').Content} MdastContent\n * @typedef {import('mdast').Definition} MdastDefinition\n * @typedef {import('mdast').FootnoteDefinition} MdastFootnoteDefinition\n * @typedef {import('mdast').Parent} MdastParent\n * @typedef {import('mdast').Root} MdastRoot\n */\n\n/**\n * @typedef {HastRoot | HastContent} HastNodes\n * @typedef {MdastRoot | MdastContent} MdastNodes\n * @typedef {Extract<MdastNodes, MdastParent>} MdastParents\n *\n * @typedef EmbeddedHastFields\n *   hast fields.\n * @property {string | null | undefined} [hName]\n *   Generate a specific element with this tag name instead.\n * @property {HastProperties | null | undefined} [hProperties]\n *   Generate an element with these properties instead.\n * @property {Array<HastElementContent> | null | undefined} [hChildren]\n *   Generate an element with this content instead.\n *\n * @typedef {Record<string, unknown> & EmbeddedHastFields} MdastData\n *   mdast data with embedded hast fields.\n *\n * @typedef {MdastNodes & {data?: MdastData | null | undefined}} MdastNodeWithData\n *   mdast node with embedded hast data.\n *\n * @typedef PointLike\n *   Point-like value.\n * @property {number | null | undefined} [line]\n *   Line.\n * @property {number | null | undefined} [column]\n *   Column.\n * @property {number | null | undefined} [offset]\n *   Offset.\n *\n * @typedef PositionLike\n *   Position-like value.\n * @property {PointLike | null | undefined} [start]\n *   Point-like value.\n * @property {PointLike | null | undefined} [end]\n *   Point-like value.\n *\n * @callback Handler\n *   Handle a node.\n * @param {State} state\n *   Info passed around.\n * @param {any} node\n *   mdast node to handle.\n * @param {MdastParents | null | undefined} parent\n *   Parent of `node`.\n * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n *   hast node.\n *\n * @callback HFunctionProps\n *   Signature of `state` for when props are passed.\n * @param {MdastNodes | PositionLike | null | undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {HastProperties} props\n *   Properties.\n * @param {Array<HastElementContent> | null | undefined} [children]\n *   hast content.\n * @returns {HastElement}\n *   Compiled element.\n *\n * @callback HFunctionNoProps\n *   Signature of `state` for when no props are passed.\n * @param {MdastNodes | PositionLike | null | undefined} node\n *   mdast node or unist position.\n * @param {string} tagName\n *   HTML tag name.\n * @param {Array<HastElementContent> | null | undefined} [children]\n *   hast content.\n * @returns {HastElement}\n *   Compiled element.\n *\n * @typedef HFields\n *   Info on `state`.\n * @property {boolean} dangerous\n *   Whether HTML is allowed.\n * @property {string} clobberPrefix\n *   Prefix to use to prevent DOM clobbering.\n * @property {string} footnoteLabel\n *   Label to use to introduce the footnote section.\n * @property {string} footnoteLabelTagName\n *   HTML used for the footnote label.\n * @property {HastProperties} footnoteLabelProperties\n *   Properties on the HTML tag used for the footnote label.\n * @property {string} footnoteBackLabel\n *   Label to use from backreferences back to their footnote call.\n * @property {(identifier: string) => MdastDefinition | null} definition\n *   Definition cache.\n * @property {Record<string, MdastFootnoteDefinition>} footnoteById\n *   Footnote definitions by their identifier.\n * @property {Array<string>} footnoteOrder\n *   Identifiers of order when footnote calls first appear in tree order.\n * @property {Record<string, number>} footnoteCounts\n *   Counts for how often the same footnote was called.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {Handler} unknownHandler\n *   Handler for any none not in `passThrough` or otherwise handled.\n * @property {(from: MdastNodes, node: HastNodes) => void} patch\n *   Copy a node’s positional info.\n * @property {<Type extends HastNodes>(from: MdastNodes, to: Type) => Type | HastElement} applyData\n *   Honor the `data` of `from`, and generate an element instead of `node`.\n * @property {(node: MdastNodes, parent: MdastParents | null | undefined) => HastElementContent | Array<HastElementContent> | null | undefined} one\n *   Transform an mdast node to hast.\n * @property {(node: MdastNodes) => Array<HastElementContent>} all\n *   Transform the children of an mdast parent to hast.\n * @property {<Type extends HastContent>(nodes: Array<Type>, loose?: boolean | null | undefined) => Array<Type | HastText>} wrap\n *   Wrap `nodes` with line endings between each node, adds initial/final line endings when `loose`.\n * @property {(left: MdastNodeWithData | PositionLike | null | undefined, right: HastElementContent) => HastElementContent} augment\n *   Like `state` but lower-level and usable on non-elements.\n *   Deprecated: use `patch` and `applyData`.\n * @property {Array<string>} passThrough\n *   List of node types to pass through untouched (except for their children).\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [allowDangerousHtml=false]\n *   Whether to persist raw HTML in markdown in the hast tree.\n * @property {string | null | undefined} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` attribute on footnotes to prevent it from\n *   *clobbering*.\n * @property {string | null | undefined} [footnoteBackLabel='Back to content']\n *   Label to use from backreferences back to their footnote call (affects\n *   screen readers).\n * @property {string | null | undefined} [footnoteLabel='Footnotes']\n *   Label to use for the footnotes section (affects screen readers).\n * @property {HastProperties | null | undefined} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label (note that `id: 'footnote-label'`\n *   is always added as footnote calls use it with `aria-describedby` to\n *   provide an accessible label).\n * @property {string | null | undefined} [footnoteLabelTagName='h2']\n *   Tag name to use for the footnote label.\n * @property {Handlers | null | undefined} [handlers]\n *   Extra handlers for nodes.\n * @property {Array<string> | null | undefined} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast (note that\n *   the node itself is passed, but eventual children are transformed).\n * @property {Handler | null | undefined} [unknownHandler]\n *   Handler for all unknown nodes.\n *\n * @typedef {Record<string, Handler>} Handlers\n *   Handle nodes.\n *\n * @typedef {HFunctionProps & HFunctionNoProps & HFields} State\n *   Info passed around.\n */\n\nimport {visit} from 'unist-util-visit'\nimport {position, pointStart, pointEnd} from 'unist-util-position'\nimport {generated} from 'unist-util-generated'\nimport {definitions} from 'mdast-util-definitions'\nimport {handlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Create `state` from an mdast tree.\n *\n * @param {MdastNodes} tree\n *   mdast node to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {State}\n *   `state` function.\n */\nexport function createState(tree, options) {\n  const settings = options || {}\n  const dangerous = settings.allowDangerousHtml || false\n  /** @type {Record<string, MdastFootnoteDefinition>} */\n  const footnoteById = {}\n\n  // To do: next major: add `options` to state, remove:\n  // `dangerous`, `clobberPrefix`, `footnoteLabel`, `footnoteLabelTagName`,\n  // `footnoteLabelProperties`, `footnoteBackLabel`, `passThrough`,\n  // `unknownHandler`.\n\n  // To do: next major: move to `state.options.allowDangerousHtml`.\n  state.dangerous = dangerous\n  // To do: next major: move to `state.options`.\n  state.clobberPrefix =\n    settings.clobberPrefix === undefined || settings.clobberPrefix === null\n      ? 'user-content-'\n      : settings.clobberPrefix\n  // To do: next major: move to `state.options`.\n  state.footnoteLabel = settings.footnoteLabel || 'Footnotes'\n  // To do: next major: move to `state.options`.\n  state.footnoteLabelTagName = settings.footnoteLabelTagName || 'h2'\n  // To do: next major: move to `state.options`.\n  state.footnoteLabelProperties = settings.footnoteLabelProperties || {\n    className: ['sr-only']\n  }\n  // To do: next major: move to `state.options`.\n  state.footnoteBackLabel = settings.footnoteBackLabel || 'Back to content'\n  // To do: next major: move to `state.options`.\n  state.unknownHandler = settings.unknownHandler\n  // To do: next major: move to `state.options`.\n  state.passThrough = settings.passThrough\n\n  state.handlers = {...handlers, ...settings.handlers}\n\n  // To do: next major: replace utility with `definitionById` object, so we\n  // only walk once (as we need footnotes too).\n  state.definition = definitions(tree)\n  state.footnoteById = footnoteById\n  /** @type {Array<string>} */\n  state.footnoteOrder = []\n  /** @type {Record<string, number>} */\n  state.footnoteCounts = {}\n\n  state.patch = patch\n  state.applyData = applyData\n  state.one = oneBound\n  state.all = allBound\n  state.wrap = wrap\n  // To do: next major: remove `augment`.\n  state.augment = augment\n\n  visit(tree, 'footnoteDefinition', (definition) => {\n    const id = String(definition.identifier).toUpperCase()\n\n    // Mimick CM behavior of link definitions.\n    // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/8290999/index.js#L26>.\n    if (!own.call(footnoteById, id)) {\n      footnoteById[id] = definition\n    }\n  })\n\n  // @ts-expect-error Hush, it’s fine!\n  return state\n\n  /**\n   * Finalise the created `right`, a hast node, from `left`, an mdast node.\n   *\n   * @param {MdastNodeWithData | PositionLike | null | undefined} left\n   * @param {HastElementContent} right\n   * @returns {HastElementContent}\n   */\n  /* c8 ignore start */\n  // To do: next major: remove.\n  function augment(left, right) {\n    // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n    if (left && 'data' in left && left.data) {\n      /** @type {MdastData} */\n      const data = left.data\n\n      if (data.hName) {\n        if (right.type !== 'element') {\n          right = {\n            type: 'element',\n            tagName: '',\n            properties: {},\n            children: []\n          }\n        }\n\n        right.tagName = data.hName\n      }\n\n      if (right.type === 'element' && data.hProperties) {\n        right.properties = {...right.properties, ...data.hProperties}\n      }\n\n      if ('children' in right && right.children && data.hChildren) {\n        right.children = data.hChildren\n      }\n    }\n\n    if (left) {\n      const ctx = 'type' in left ? left : {position: left}\n\n      if (!generated(ctx)) {\n        // @ts-expect-error: fine.\n        right.position = {start: pointStart(ctx), end: pointEnd(ctx)}\n      }\n    }\n\n    return right\n  }\n  /* c8 ignore stop */\n\n  /**\n   * Create an element for `node`.\n   *\n   * @type {HFunctionProps}\n   */\n  /* c8 ignore start */\n  // To do: next major: remove.\n  function state(node, tagName, props, children) {\n    if (Array.isArray(props)) {\n      children = props\n      props = {}\n    }\n\n    // @ts-expect-error augmenting an element yields an element.\n    return augment(node, {\n      type: 'element',\n      tagName,\n      properties: props || {},\n      children: children || []\n    })\n  }\n  /* c8 ignore stop */\n\n  /**\n   * Transform an mdast node into a hast node.\n   *\n   * @param {MdastNodes} node\n   *   mdast node.\n   * @param {MdastParents | null | undefined} [parent]\n   *   Parent of `node`.\n   * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n   *   Resulting hast node.\n   */\n  function oneBound(node, parent) {\n    // @ts-expect-error: that’s a state :)\n    return one(state, node, parent)\n  }\n\n  /**\n   * Transform the children of an mdast node into hast nodes.\n   *\n   * @param {MdastNodes} parent\n   *   mdast node to compile\n   * @returns {Array<HastElementContent>}\n   *   Resulting hast nodes.\n   */\n  function allBound(parent) {\n    // @ts-expect-error: that’s a state :)\n    return all(state, parent)\n  }\n}\n\n/**\n * Copy a node’s positional info.\n *\n * @param {MdastNodes} from\n *   mdast node to copy from.\n * @param {HastNodes} to\n *   hast node to copy into.\n * @returns {void}\n *   Nothing.\n */\nfunction patch(from, to) {\n  if (from.position) to.position = position(from)\n}\n\n/**\n * Honor the `data` of `from` and maybe generate an element instead of `to`.\n *\n * @template {HastNodes} Type\n *   Node type.\n * @param {MdastNodes} from\n *   mdast node to use data from.\n * @param {Type} to\n *   hast node to change.\n * @returns {Type | HastElement}\n *   Nothing.\n */\nfunction applyData(from, to) {\n  /** @type {Type | HastElement} */\n  let result = to\n\n  // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n  if (from && from.data) {\n    const hName = from.data.hName\n    const hChildren = from.data.hChildren\n    const hProperties = from.data.hProperties\n\n    if (typeof hName === 'string') {\n      // Transforming the node resulted in an element with a different name\n      // than wanted:\n      if (result.type === 'element') {\n        result.tagName = hName\n      }\n      // Transforming the node resulted in a non-element, which happens for\n      // raw, text, and root nodes (unless custom handlers are passed).\n      // The intent is likely to keep the content around (otherwise: pass\n      // `hChildren`).\n      else {\n        result = {\n          type: 'element',\n          tagName: hName,\n          properties: {},\n          children: []\n        }\n\n        // To do: next major: take the children from the `root`, or inject the\n        // raw/text/comment or so into the element?\n        // if ('children' in node) {\n        //   // @ts-expect-error: assume `children` are allowed in elements.\n        //   result.children = node.children\n        // } else {\n        //   // @ts-expect-error: assume `node` is allowed in elements.\n        //   result.children.push(node)\n        // }\n      }\n    }\n\n    if (result.type === 'element' && hProperties) {\n      result.properties = {...result.properties, ...hProperties}\n    }\n\n    if (\n      'children' in result &&\n      result.children &&\n      hChildren !== null &&\n      hChildren !== undefined\n    ) {\n      // @ts-expect-error: assume valid children are defined.\n      result.children = hChildren\n    }\n  }\n\n  return result\n}\n\n/**\n * Transform an mdast node into a hast node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   mdast node.\n * @param {MdastParents | null | undefined} [parent]\n *   Parent of `node`.\n * @returns {HastElementContent | Array<HastElementContent> | null | undefined}\n *   Resulting hast node.\n */\n// To do: next major: do not expose, keep bound.\nexport function one(state, node, parent) {\n  const type = node && node.type\n\n  // Fail on non-nodes.\n  if (!type) {\n    throw new Error('Expected node, got `' + node + '`')\n  }\n\n  if (own.call(state.handlers, type)) {\n    return state.handlers[type](state, node, parent)\n  }\n\n  if (state.passThrough && state.passThrough.includes(type)) {\n    // To do: next major: deep clone.\n    // @ts-expect-error: types of passed through nodes are expected to be added manually.\n    return 'children' in node ? {...node, children: all(state, node)} : node\n  }\n\n  if (state.unknownHandler) {\n    return state.unknownHandler(state, node, parent)\n  }\n\n  return defaultUnknownHandler(state, node)\n}\n\n/**\n * Transform the children of an mdast node into hast nodes.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} parent\n *   mdast node to compile\n * @returns {Array<HastElementContent>}\n *   Resulting hast nodes.\n */\n// To do: next major: do not expose, keep bound.\nexport function all(state, parent) {\n  /** @type {Array<HastElementContent>} */\n  const values = []\n\n  if ('children' in parent) {\n    const nodes = parent.children\n    let index = -1\n    while (++index < nodes.length) {\n      const result = one(state, nodes[index], parent)\n\n      // To do: see if we van clean this? Can we merge texts?\n      if (result) {\n        if (index && nodes[index - 1].type === 'break') {\n          if (!Array.isArray(result) && result.type === 'text') {\n            result.value = result.value.replace(/^\\s+/, '')\n          }\n\n          if (!Array.isArray(result) && result.type === 'element') {\n            const head = result.children[0]\n\n            if (head && head.type === 'text') {\n              head.value = head.value.replace(/^\\s+/, '')\n            }\n          }\n        }\n\n        if (Array.isArray(result)) {\n          values.push(...result)\n        } else {\n          values.push(result)\n        }\n      }\n    }\n  }\n\n  return values\n}\n\n/**\n * Transform an unknown node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   Unknown mdast node.\n * @returns {HastText | HastElement}\n *   Resulting hast node.\n */\nfunction defaultUnknownHandler(state, node) {\n  const data = node.data || {}\n  /** @type {HastText | HastElement} */\n  const result =\n    'value' in node &&\n    !(own.call(data, 'hProperties') || own.call(data, 'hChildren'))\n      ? {type: 'text', value: node.value}\n      : {\n          type: 'element',\n          tagName: 'div',\n          properties: {},\n          children: all(state, node)\n        }\n\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * Wrap `nodes` with line endings between each node.\n *\n * @template {HastContent} Type\n *   Node type.\n * @param {Array<Type>} nodes\n *   List of nodes to wrap.\n * @param {boolean | null | undefined} [loose=false]\n *   Whether to add line endings at start and end.\n * @returns {Array<Type | HastText>}\n *   Wrapped nodes.\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<Type | HastText>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push({type: 'text', value: '\\n'})\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  return result\n}\n","/**\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef NodeLike\n * @property {PositionLike | null | undefined} [position]\n */\n\n/**\n * Check if `node` is generated.\n *\n * @param {NodeLike | null | undefined} [node]\n *   Node to check.\n * @returns {boolean}\n *   Whether `node` is generated (does not have positional info).\n */\nexport function generated(node) {\n  return (\n    !node ||\n    !node.position ||\n    !node.position.start ||\n    !node.position.start.line ||\n    !node.position.start.column ||\n    !node.position.end ||\n    !node.position.end.line ||\n    !node.position.end.column\n  )\n}\n","/**\n * @typedef {import('hast').Content} HastContent\n * @typedef {import('hast').Root} HastRoot\n *\n * @typedef {import('mdast').Content} MdastContent\n * @typedef {import('mdast').Root} MdastRoot\n *\n * @typedef {import('./state.js').Options} Options\n */\n\n/**\n * @typedef {HastRoot | HastContent} HastNodes\n * @typedef {MdastRoot | MdastContent} MdastNodes\n */\n\nimport {footer} from './footer.js'\nimport {createState} from './state.js'\n\n/**\n * Transform mdast to hast.\n *\n * ##### Notes\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most utilities ignore `raw` nodes but two notable ones don’t:\n *\n * *   `hast-util-to-html` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful\n *     if you completely trust authors\n * *   `hast-util-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only\n *     way to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `mdast-util-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * Example: headings (DOM clobbering) in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @param {MdastNodes} tree\n *   mdast tree.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {HastNodes | null | undefined}\n *   hast tree.\n */\n// To do: next major: always return a single `root`.\nexport function toHast(tree, options) {\n  const state = createState(tree, options)\n  const node = state.one(tree, null)\n  const foot = footer(state)\n\n  if (foot) {\n    // @ts-expect-error If there’s a footer, there were definitions, meaning block\n    // content.\n    // So assume `node` is a parent node.\n    node.children.push({type: 'text', value: '\\n'}, foot)\n  }\n\n  // To do: next major: always return root?\n  return Array.isArray(node) ? {type: 'root', children: node} : node\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('./state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Generate a hast footer for called footnote definitions.\n *\n * @param {State} state\n *   Info passed around.\n * @returns {Element | undefined}\n *   `section` element or `undefined`.\n */\nexport function footer(state) {\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n  let index = -1\n\n  while (++index < state.footnoteOrder.length) {\n    const def = state.footnoteById[state.footnoteOrder[index]]\n\n    if (!def) {\n      continue\n    }\n\n    const content = state.all(def)\n    const id = String(def.identifier).toUpperCase()\n    const safeId = normalizeUri(id.toLowerCase())\n    let referenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n\n    while (++referenceIndex <= state.footnoteCounts[id]) {\n      /** @type {Element} */\n      const backReference = {\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            state.clobberPrefix +\n            'fnref-' +\n            safeId +\n            (referenceIndex > 1 ? '-' + referenceIndex : ''),\n          dataFootnoteBackref: true,\n          className: ['data-footnote-backref'],\n          ariaLabel: state.footnoteBackLabel\n        },\n        children: [{type: 'text', value: '↩'}]\n      }\n\n      if (referenceIndex > 1) {\n        backReference.children.push({\n          type: 'element',\n          tagName: 'sup',\n          children: [{type: 'text', value: String(referenceIndex)}]\n        })\n      }\n\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      backReferences.push(backReference)\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: state.clobberPrefix + 'fn-' + safeId},\n      children: state.wrap(content, true)\n    }\n\n    state.patch(def, listItem)\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: state.footnoteLabelTagName,\n        properties: {\n          // To do: use structured clone.\n          ...JSON.parse(JSON.stringify(state.footnoteLabelProperties)),\n          id: 'footnote-label'\n        },\n        children: [{type: 'text', value: state.footnoteLabel}]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: state.wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('mdast-util-to-hast').Options} Options\n * @typedef {import('unified').Processor<any, any, any, any>} Processor\n *\n * @typedef {import('mdast-util-to-hast')} DoNotTouchAsThisImportIncludesRawInTree\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n// Note: the `<MdastRoot, HastRoot>` overload doesn’t seem to work :'(\n\n/**\n * Plugin that turns markdown into HTML to support rehype.\n *\n * *   If a destination processor is given, that processor runs with a new HTML\n *     (hast) tree (bridge-mode).\n *     As the given processor runs with a hast tree, and rehype plugins support\n *     hast, that means rehype plugins can be used with the given processor.\n *     The hast tree is discarded in the end.\n *     It’s highly unlikely that you want to do this.\n * *   The common case is to not pass a destination processor, in which case the\n *     current processor continues running with a new HTML (hast) tree\n *     (mutate-mode).\n *     As the current processor continues with a hast tree, and rehype plugins\n *     support hast, that means rehype plugins can be used after\n *     `remark-rehype`.\n *     It’s likely that this is what you want to do.\n *\n * @param destination\n *   Optional unified processor.\n * @param options\n *   Options passed to `mdast-util-to-hast`.\n */\nconst remarkRehype =\n  /** @type {(import('unified').Plugin<[Processor, Options?]|[null|undefined, Options?]|[Options]|[], MdastRoot>)} */\n  (\n    function (destination, options) {\n      return destination && 'run' in destination\n        ? bridge(destination, options)\n        : mutate(destination || options)\n    }\n  )\n\nexport default remarkRehype\n\n/**\n * Bridge-mode.\n * Runs the destination with the new hast tree.\n *\n * @type {import('unified').Plugin<[Processor, Options?], MdastRoot>}\n */\nfunction bridge(destination, options) {\n  return (node, file, next) => {\n    destination.run(toHast(node, options), file, (error) => {\n      next(error)\n    })\n  }\n}\n\n/**\n * Mutate-mode.\n * Further plugins run on the hast tree.\n *\n * @type {import('unified').Plugin<[Options?]|void[], MdastRoot, HastRoot>}\n */\nfunction mutate(options) {\n  // @ts-expect-error: assume a corresponding node is returned by `toHast`.\n  return (node) => toHast(node, options)\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","import {visit} from 'unist-util-visit'\n\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n *\n * @callback AllowElement\n * @param {Element} element\n * @param {number} index\n * @param {Element|Root} parent\n * @returns {boolean|undefined}\n *\n * @typedef Options\n * @property {Array<string>} [allowedElements]\n * @property {Array<string>} [disallowedElements=[]]\n * @property {AllowElement} [allowElement]\n * @property {boolean} [unwrapDisallowed=false]\n */\n\n/**\n * @type {import('unified').Plugin<[Options], Root>}\n */\nexport default function rehypeFilter(options) {\n  if (options.allowedElements && options.disallowedElements) {\n    throw new TypeError(\n      'Only one of `allowedElements` and `disallowedElements` should be defined'\n    )\n  }\n\n  if (\n    options.allowedElements ||\n    options.disallowedElements ||\n    options.allowElement\n  ) {\n    return (tree) => {\n      visit(tree, 'element', (node, index, parent_) => {\n        const parent = /** @type {Element|Root} */ (parent_)\n        /** @type {boolean|undefined} */\n        let remove\n\n        if (options.allowedElements) {\n          remove = !options.allowedElements.includes(node.tagName)\n        } else if (options.disallowedElements) {\n          remove = options.disallowedElements.includes(node.tagName)\n        }\n\n        if (!remove && options.allowElement && typeof index === 'number') {\n          remove = !options.allowElement(node, index, parent)\n        }\n\n        if (remove && typeof index === 'number') {\n          if (options.unwrapDisallowed && node.children) {\n            parent.children.splice(index, 1, ...node.children)\n          } else {\n            parent.children.splice(index, 1)\n          }\n\n          return index\n        }\n\n        return undefined\n      })\n    }\n  }\n}\n","/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {unknown} thing\n *   Thing to check (typically `Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`).\n *   If a node is passed it must be a `Text` node, whose `value` field is\n *   checked.\n */\nexport function whitespace(thing) {\n  /** @type {string} */\n  const value =\n    // @ts-expect-error looks like a node.\n    thing && typeof thing === 'object' && thing.type === 'text'\n      ? // @ts-expect-error looks like a text.\n        thing.value || ''\n      : thing\n\n  // HTML whitespace expression.\n  // See <https://infra.spec.whatwg.org/#ascii-whitespace>.\n  return typeof value === 'string' && value.replace(/[ \\t\\n\\f\\r]/g, '') === ''\n}\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * `hast` is close to `React`, but differs in a couple of cases.\n *\n * To get a React property from a hast property, check if it is in\n * `hastToReact`, if it is, then use the corresponding value,\n * otherwise, use the hast property.\n *\n * @type {Record<string, string>}\n */\nexport const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","import StyleToObject from './index.js';\n\nexport default StyleToObject;\n","const protocols = ['http', 'https', 'mailto', 'tel']\n\n/**\n * @param {string} uri\n * @returns {string}\n */\nexport function uriTransformer(uri) {\n  const url = (uri || '').trim()\n  const first = url.charAt(0)\n\n  if (first === '#' || first === '/') {\n    return url\n  }\n\n  const colon = url.indexOf(':')\n  if (colon === -1) {\n    return url\n  }\n\n  let index = -1\n\n  while (++index < protocols.length) {\n    const protocol = protocols[index]\n\n    if (\n      colon === protocol.length &&\n      url.slice(0, protocol.length).toLowerCase() === protocol\n    ) {\n      return url\n    }\n  }\n\n  index = url.indexOf('?')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  index = url.indexOf('#')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  // eslint-disable-next-line no-script-url\n  return 'javascript:void(0)'\n}\n","/**\n * @template T\n * @typedef {import('react').ComponentType<T>} ComponentType<T>\n */\n\n/**\n * @template {import('react').ElementType} T\n * @typedef {import('react').ComponentPropsWithoutRef<T>} ComponentPropsWithoutRef<T>\n */\n\n/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('unist').Position} Position\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').DocType} Doctype\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n * @typedef {import('./complex-types.js').ReactMarkdownProps} ReactMarkdownProps\n *\n * @typedef Raw\n * @property {'raw'} type\n * @property {string} value\n *\n * @typedef Context\n * @property {Options} options\n * @property {Schema} schema\n * @property {number} listDepth\n *\n * @callback TransformLink\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {string}\n *\n * @callback TransformImage\n * @param {string} src\n * @param {string} alt\n * @param {string?} title\n * @returns {string}\n *\n * @typedef {import('react').HTMLAttributeAnchorTarget} TransformLinkTargetType\n *\n * @callback TransformLinkTarget\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {TransformLinkTargetType|undefined}\n *\n * @typedef {keyof JSX.IntrinsicElements} ReactMarkdownNames\n *\n * To do: is `data-sourcepos` typeable?\n *\n * @typedef {ComponentPropsWithoutRef<'code'> & ReactMarkdownProps & {inline?: boolean}} CodeProps\n * @typedef {ComponentPropsWithoutRef<'h1'> & ReactMarkdownProps & {level: number}} HeadingProps\n * @typedef {ComponentPropsWithoutRef<'li'> & ReactMarkdownProps & {checked: boolean|null, index: number, ordered: boolean}} LiProps\n * @typedef {ComponentPropsWithoutRef<'ol'> & ReactMarkdownProps & {depth: number, ordered: true}} OrderedListProps\n * @typedef {ComponentPropsWithoutRef<'td'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: false}} TableDataCellProps\n * @typedef {ComponentPropsWithoutRef<'th'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: true}} TableHeaderCellProps\n * @typedef {ComponentPropsWithoutRef<'tr'> & ReactMarkdownProps & {isHeader: boolean}} TableRowProps\n * @typedef {ComponentPropsWithoutRef<'ul'> & ReactMarkdownProps & {depth: number, ordered: false}} UnorderedListProps\n *\n * @typedef {ComponentType<CodeProps>} CodeComponent\n * @typedef {ComponentType<HeadingProps>} HeadingComponent\n * @typedef {ComponentType<LiProps>} LiComponent\n * @typedef {ComponentType<OrderedListProps>} OrderedListComponent\n * @typedef {ComponentType<TableDataCellProps>} TableDataCellComponent\n * @typedef {ComponentType<TableHeaderCellProps>} TableHeaderCellComponent\n * @typedef {ComponentType<TableRowProps>} TableRowComponent\n * @typedef {ComponentType<UnorderedListProps>} UnorderedListComponent\n *\n * @typedef SpecialComponents\n * @property {CodeComponent|ReactMarkdownNames} code\n * @property {HeadingComponent|ReactMarkdownNames} h1\n * @property {HeadingComponent|ReactMarkdownNames} h2\n * @property {HeadingComponent|ReactMarkdownNames} h3\n * @property {HeadingComponent|ReactMarkdownNames} h4\n * @property {HeadingComponent|ReactMarkdownNames} h5\n * @property {HeadingComponent|ReactMarkdownNames} h6\n * @property {LiComponent|ReactMarkdownNames} li\n * @property {OrderedListComponent|ReactMarkdownNames} ol\n * @property {TableDataCellComponent|ReactMarkdownNames} td\n * @property {TableHeaderCellComponent|ReactMarkdownNames} th\n * @property {TableRowComponent|ReactMarkdownNames} tr\n * @property {UnorderedListComponent|ReactMarkdownNames} ul\n *\n * @typedef {Partial<Omit<import('./complex-types.js').NormalComponents, keyof SpecialComponents> & SpecialComponents>} Components\n *\n * @typedef Options\n * @property {boolean} [sourcePos=false]\n * @property {boolean} [rawSourcePos=false]\n * @property {boolean} [skipHtml=false]\n * @property {boolean} [includeElementIndex=false]\n * @property {null|false|TransformLink} [transformLinkUri]\n * @property {TransformImage} [transformImageUri]\n * @property {TransformLinkTargetType|TransformLinkTarget} [linkTarget]\n * @property {Components} [components]\n */\n\nimport React from 'react'\nimport ReactIs from 'react-is'\nimport {whitespace} from 'hast-util-whitespace'\nimport {svg, find, hastToReact} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {stringify as commas} from 'comma-separated-tokens'\nimport style from 'style-to-object'\nimport {uriTransformer} from './uri-transformer.js'\n\nconst own = {}.hasOwnProperty\n\n// The table-related elements that must not contain whitespace text according\n// to React.\nconst tableElements = new Set(['table', 'thead', 'tbody', 'tfoot', 'tr'])\n\n/**\n * @param {Context} context\n * @param {Element|Root} node\n */\nexport function childrenToReact(context, node) {\n  /** @type {Array<ReactNode>} */\n  const children = []\n  let childIndex = -1\n  /** @type {Comment|Doctype|Element|Raw|Text} */\n  let child\n\n  while (++childIndex < node.children.length) {\n    child = node.children[childIndex]\n\n    if (child.type === 'element') {\n      children.push(toReact(context, child, childIndex, node))\n    } else if (child.type === 'text') {\n      // Currently, a warning is triggered by react for *any* white space in\n      // tables.\n      // So we drop it.\n      // See: <https://github.com/facebook/react/pull/7081>.\n      // See: <https://github.com/facebook/react/pull/7515>.\n      // See: <https://github.com/remarkjs/remark-react/issues/64>.\n      // See: <https://github.com/remarkjs/react-markdown/issues/576>.\n      if (\n        node.type !== 'element' ||\n        !tableElements.has(node.tagName) ||\n        !whitespace(child)\n      ) {\n        children.push(child.value)\n      }\n    } else if (child.type === 'raw' && !context.options.skipHtml) {\n      // Default behavior is to show (encoded) HTML.\n      children.push(child.value)\n    }\n  }\n\n  return children\n}\n\n/**\n * @param {Context} context\n * @param {Element} node\n * @param {number} index\n * @param {Element|Root} parent\n */\nfunction toReact(context, node, index, parent) {\n  const options = context.options\n  const transform =\n    options.transformLinkUri === undefined\n      ? uriTransformer\n      : options.transformLinkUri\n  const parentSchema = context.schema\n  /** @type {ReactMarkdownNames} */\n  // @ts-expect-error assume a known HTML/SVG element.\n  const name = node.tagName\n  /** @type {Record<string, unknown>} */\n  const properties = {}\n  let schema = parentSchema\n  /** @type {string} */\n  let property\n\n  if (parentSchema.space === 'html' && name === 'svg') {\n    schema = svg\n    context.schema = schema\n  }\n\n  if (node.properties) {\n    for (property in node.properties) {\n      if (own.call(node.properties, property)) {\n        addProperty(properties, property, node.properties[property], context)\n      }\n    }\n  }\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth++\n  }\n\n  const children = childrenToReact(context, node)\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth--\n  }\n\n  // Restore parent schema.\n  context.schema = parentSchema\n\n  // Nodes created by plugins do not have positional info, in which case we use\n  // an object that matches the position interface.\n  const position = node.position || {\n    start: {line: null, column: null, offset: null},\n    end: {line: null, column: null, offset: null}\n  }\n  const component =\n    options.components && own.call(options.components, name)\n      ? options.components[name]\n      : name\n  const basic = typeof component === 'string' || component === React.Fragment\n\n  if (!ReactIs.isValidElementType(component)) {\n    throw new TypeError(\n      `Component for name \\`${name}\\` not defined or is not renderable`\n    )\n  }\n\n  properties.key = index\n\n  if (name === 'a' && options.linkTarget) {\n    properties.target =\n      typeof options.linkTarget === 'function'\n        ? options.linkTarget(\n            String(properties.href || ''),\n            node.children,\n            typeof properties.title === 'string' ? properties.title : null\n          )\n        : options.linkTarget\n  }\n\n  if (name === 'a' && transform) {\n    properties.href = transform(\n      String(properties.href || ''),\n      node.children,\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (\n    !basic &&\n    name === 'code' &&\n    parent.type === 'element' &&\n    parent.tagName !== 'pre'\n  ) {\n    properties.inline = true\n  }\n\n  if (\n    !basic &&\n    (name === 'h1' ||\n      name === 'h2' ||\n      name === 'h3' ||\n      name === 'h4' ||\n      name === 'h5' ||\n      name === 'h6')\n  ) {\n    properties.level = Number.parseInt(name.charAt(1), 10)\n  }\n\n  if (name === 'img' && options.transformImageUri) {\n    properties.src = options.transformImageUri(\n      String(properties.src || ''),\n      String(properties.alt || ''),\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (!basic && name === 'li' && parent.type === 'element') {\n    const input = getInputElement(node)\n    properties.checked =\n      input && input.properties ? Boolean(input.properties.checked) : null\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.ordered = parent.tagName === 'ol'\n  }\n\n  if (!basic && (name === 'ol' || name === 'ul')) {\n    properties.ordered = name === 'ol'\n    properties.depth = context.listDepth\n  }\n\n  if (name === 'td' || name === 'th') {\n    if (properties.align) {\n      if (!properties.style) properties.style = {}\n      // @ts-expect-error assume `style` is an object\n      properties.style.textAlign = properties.align\n      delete properties.align\n    }\n\n    if (!basic) {\n      properties.isHeader = name === 'th'\n    }\n  }\n\n  if (!basic && name === 'tr' && parent.type === 'element') {\n    properties.isHeader = Boolean(parent.tagName === 'thead')\n  }\n\n  // If `sourcePos` is given, pass source information (line/column info from markdown source).\n  if (options.sourcePos) {\n    properties['data-sourcepos'] = flattenPosition(position)\n  }\n\n  if (!basic && options.rawSourcePos) {\n    properties.sourcePosition = node.position\n  }\n\n  // If `includeElementIndex` is given, pass node index info to components.\n  if (!basic && options.includeElementIndex) {\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.siblingCount = getElementsBeforeCount(parent)\n  }\n\n  if (!basic) {\n    properties.node = node\n  }\n\n  // Ensure no React warnings are emitted for void elements w/ children.\n  return children.length > 0\n    ? React.createElement(component, properties, children)\n    : React.createElement(component, properties)\n}\n\n/**\n * @param {Element|Root} node\n * @returns {Element?}\n */\nfunction getInputElement(node) {\n  let index = -1\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n\n    if (child.type === 'element' && child.tagName === 'input') {\n      return child\n    }\n  }\n\n  return null\n}\n\n/**\n * @param {Element|Root} parent\n * @param {Element} [node]\n * @returns {number}\n */\nfunction getElementsBeforeCount(parent, node) {\n  let index = -1\n  let count = 0\n\n  while (++index < parent.children.length) {\n    if (parent.children[index] === node) break\n    if (parent.children[index].type === 'element') count++\n  }\n\n  return count\n}\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string} prop\n * @param {unknown} value\n * @param {Context} ctx\n */\nfunction addProperty(props, prop, value, ctx) {\n  const info = find(ctx.schema, prop)\n  let result = value\n\n  // Ignore nullish and `NaN` values.\n  // eslint-disable-next-line no-self-compare\n  if (result === null || result === undefined || result !== result) {\n    return\n  }\n\n  // Accept `array`.\n  // Most props are space-separated.\n  if (Array.isArray(result)) {\n    result = info.commaSeparated ? commas(result) : spaces(result)\n  }\n\n  if (info.property === 'style' && typeof result === 'string') {\n    result = parseStyle(result)\n  }\n\n  if (info.space && info.property) {\n    props[\n      own.call(hastToReact, info.property)\n        ? hastToReact[info.property]\n        : info.property\n    ] = result\n  } else if (info.attribute) {\n    props[info.attribute] = result\n  }\n}\n\n/**\n * @param {string} value\n * @returns {Record<string, string>}\n */\nfunction parseStyle(value) {\n  /** @type {Record<string, string>} */\n  const result = {}\n\n  try {\n    style(value, iterator)\n  } catch {\n    // Silent.\n  }\n\n  return result\n\n  /**\n   * @param {string} name\n   * @param {string} v\n   */\n  function iterator(name, v) {\n    const k = name.slice(0, 4) === '-ms-' ? `ms-${name.slice(4)}` : name\n    result[k.replace(/-([a-z])/g, styleReplacer)] = v\n  }\n}\n\n/**\n * @param {unknown} _\n * @param {string} $1\n */\nfunction styleReplacer(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * @param {Position|{start: {line: null, column: null, offset: null}, end: {line: null, column: null, offset: null}}} pos\n * @returns {string}\n */\nfunction flattenPosition(pos) {\n  return [\n    pos.start.line,\n    ':',\n    pos.start.column,\n    '-',\n    pos.end.line,\n    ':',\n    pos.end.column\n  ]\n    .map(String)\n    .join('')\n}\n","/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('react').ReactElement<{}>} ReactElement\n * @typedef {import('unified').PluggableList} PluggableList\n * @typedef {import('hast').Root} Root\n * @typedef {import('./rehype-filter.js').Options} FilterOptions\n * @typedef {import('./ast-to-react.js').Options} TransformOptions\n *\n * @typedef CoreOptions\n * @property {string} children\n *\n * @typedef PluginOptions\n * @property {PluggableList} [remarkPlugins=[]]\n * @property {PluggableList} [rehypePlugins=[]]\n * @property {import('remark-rehype').Options | undefined} [remarkRehypeOptions={}]\n *\n * @typedef LayoutOptions\n * @property {string} [className]\n *\n * @typedef {CoreOptions & PluginOptions & LayoutOptions & FilterOptions & TransformOptions} ReactMarkdownOptions\n *\n * @typedef Deprecation\n * @property {string} id\n * @property {string} [to]\n */\n\nimport React from 'react'\nimport {VFile} from 'vfile'\nimport {unified} from 'unified'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport PropTypes from 'prop-types'\nimport {html} from 'property-information'\nimport rehypeFilter from './rehype-filter.js'\nimport {childrenToReact} from './ast-to-react.js'\n\nconst own = {}.hasOwnProperty\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {Record<string, Deprecation>} */\nconst deprecated = {\n  plugins: {to: 'remarkPlugins', id: 'change-plugins-to-remarkplugins'},\n  renderers: {to: 'components', id: 'change-renderers-to-components'},\n  astPlugins: {id: 'remove-buggy-html-in-markdown-parser'},\n  allowDangerousHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  escapeHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  source: {to: 'children', id: 'change-source-to-children'},\n  allowNode: {\n    to: 'allowElement',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  allowedTypes: {\n    to: 'allowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  disallowedTypes: {\n    to: 'disallowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  includeNodeIndex: {\n    to: 'includeElementIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  }\n}\n\n/**\n * React component to render markdown.\n *\n * @param {ReactMarkdownOptions} options\n * @returns {ReactElement}\n */\nexport function ReactMarkdown(options) {\n  for (const key in deprecated) {\n    if (own.call(deprecated, key) && own.call(options, key)) {\n      const deprecation = deprecated[key]\n      console.warn(\n        `[react-markdown] Warning: please ${\n          deprecation.to ? `use \\`${deprecation.to}\\` instead of` : 'remove'\n        } \\`${key}\\` (see <${changelog}#${deprecation.id}> for more info)`\n      )\n      delete deprecated[key]\n    }\n  }\n\n  const processor = unified()\n    .use(remarkParse)\n    .use(options.remarkPlugins || [])\n    .use(remarkRehype, {\n      ...options.remarkRehypeOptions,\n      allowDangerousHtml: true\n    })\n    .use(options.rehypePlugins || [])\n    .use(rehypeFilter, options)\n\n  const file = new VFile()\n\n  if (typeof options.children === 'string') {\n    file.value = options.children\n  } else if (options.children !== undefined && options.children !== null) {\n    console.warn(\n      `[react-markdown] Warning: please pass a string as \\`children\\` (not: \\`${options.children}\\`)`\n    )\n  }\n\n  const hastNode = processor.runSync(processor.parse(file), file)\n\n  if (hastNode.type !== 'root') {\n    throw new TypeError('Expected a `root` node')\n  }\n\n  /** @type {ReactElement} */\n  let result = React.createElement(\n    React.Fragment,\n    {},\n    childrenToReact({options, schema: html, listDepth: 0}, hastNode)\n  )\n\n  if (options.className) {\n    result = React.createElement('div', {className: options.className}, result)\n  }\n\n  return result\n}\n\nReactMarkdown.propTypes = {\n  // Core options:\n  children: PropTypes.string,\n  // Layout options:\n  className: PropTypes.string,\n  // Filter options:\n  allowElement: PropTypes.func,\n  allowedElements: PropTypes.arrayOf(PropTypes.string),\n  disallowedElements: PropTypes.arrayOf(PropTypes.string),\n  unwrapDisallowed: PropTypes.bool,\n  // Plugin options:\n  remarkPlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  rehypePlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  // Transform options:\n  sourcePos: PropTypes.bool,\n  rawSourcePos: PropTypes.bool,\n  skipHtml: PropTypes.bool,\n  includeElementIndex: PropTypes.bool,\n  transformLinkUri: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  linkTarget: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  transformImageUri: PropTypes.func,\n  components: PropTypes.object\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n */\n\nimport {visit} from 'unist-util-visit'\n\nconst find = /[\\t ]*(?:\\r?\\n|\\r)/g\n\n/**\n * Plugin to support hard breaks without needing spaces or escapes (turns enters\n * into `<br>`s).\n *\n * @type {import('unified').Plugin<void[], Root>}\n */\nexport default function remarkBreaks() {\n  return (tree) => {\n    visit(tree, 'text', (node, index, parent) => {\n      /** @type {PhrasingContent[]} */\n      const result = []\n      let start = 0\n\n      find.lastIndex = 0\n\n      let match = find.exec(node.value)\n\n      while (match) {\n        const position = match.index\n\n        if (start !== position) {\n          result.push({type: 'text', value: node.value.slice(start, position)})\n        }\n\n        result.push({type: 'break'})\n        start = position + match[0].length\n        match = find.exec(node.value)\n      }\n\n      if (result.length > 0 && parent && typeof index === 'number') {\n        if (start < node.value.length) {\n          result.push({type: 'text', value: node.value.slice(start)})\n        }\n\n        parent.children.splice(index, 1, ...result)\n        return index + result.length\n      }\n    })\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} attributesType\n * @param {string} attributesMarkerType\n * @param {string} attributeType\n * @param {string} attributeIdType\n * @param {string} attributeClassType\n * @param {string} attributeNameType\n * @param {string} attributeInitializerType\n * @param {string} attributeValueLiteralType\n * @param {string} attributeValueType\n * @param {string} attributeValueMarker\n * @param {string} attributeValueData\n * @param {boolean} [disallowEol=false]\n */\n/* eslint-disable-next-line max-params */\nexport function factoryAttributes(\n  effects,\n  ok,\n  nok,\n  attributesType,\n  attributesMarkerType,\n  attributeType,\n  attributeIdType,\n  attributeClassType,\n  attributeNameType,\n  attributeInitializerType,\n  attributeValueLiteralType,\n  attributeValueType,\n  attributeValueMarker,\n  attributeValueData,\n  disallowEol\n) {\n  /** @type {string} */\n  let type\n  /** @type {Code|undefined} */\n  let marker\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    effects.enter(attributesType)\n    effects.enter(attributesMarkerType)\n    effects.consume(code)\n    effects.exit(attributesMarkerType)\n    return between\n  }\n\n  /** @type {State} */\n  function between(code) {\n    if (code === 35) {\n      type = attributeIdType\n      return shortcutStart(code)\n    }\n    if (code === 46) {\n      type = attributeClassType\n      return shortcutStart(code)\n    }\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.enter(attributeType)\n      effects.enter(attributeNameType)\n      effects.consume(code)\n      return name\n    }\n    if (disallowEol && markdownSpace(code)) {\n      return factorySpace(effects, between, 'whitespace')(code)\n    }\n    if (!disallowEol && markdownLineEndingOrSpace(code)) {\n      return factoryWhitespace(effects, between)(code)\n    }\n    return end(code)\n  }\n\n  /** @type {State} */\n  function shortcutStart(code) {\n    effects.enter(attributeType)\n    effects.enter(type)\n    effects.enter(type + 'Marker')\n    effects.consume(code)\n    effects.exit(type + 'Marker')\n    return shortcutStartAfter\n  }\n\n  /** @type {State} */\n  function shortcutStartAfter(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 35 ||\n      code === 39 ||\n      code === 46 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      code === 125 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return nok(code)\n    }\n    effects.enter(type + 'Value')\n    effects.consume(code)\n    return shortcut\n  }\n\n  /** @type {State} */\n  function shortcut(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n    if (\n      code === 35 ||\n      code === 46 ||\n      code === 125 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      effects.exit(type + 'Value')\n      effects.exit(type)\n      effects.exit(attributeType)\n      return between(code)\n    }\n    effects.consume(code)\n    return shortcut\n  }\n\n  /** @type {State} */\n  function name(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return name\n    }\n    effects.exit(attributeNameType)\n    if (disallowEol && markdownSpace(code)) {\n      return factorySpace(effects, nameAfter, 'whitespace')(code)\n    }\n    if (!disallowEol && markdownLineEndingOrSpace(code)) {\n      return factoryWhitespace(effects, nameAfter)(code)\n    }\n    return nameAfter(code)\n  }\n\n  /** @type {State} */\n  function nameAfter(code) {\n    if (code === 61) {\n      effects.enter(attributeInitializerType)\n      effects.consume(code)\n      effects.exit(attributeInitializerType)\n      return valueBefore\n    }\n\n    // Attribute w/o value.\n    effects.exit(attributeType)\n    return between(code)\n  }\n\n  /** @type {State} */\n  function valueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      code === 125 ||\n      (disallowEol && markdownLineEnding(code))\n    ) {\n      return nok(code)\n    }\n    if (code === 34 || code === 39) {\n      effects.enter(attributeValueLiteralType)\n      effects.enter(attributeValueMarker)\n      effects.consume(code)\n      effects.exit(attributeValueMarker)\n      marker = code\n      return valueQuotedStart\n    }\n    if (disallowEol && markdownSpace(code)) {\n      return factorySpace(effects, valueBefore, 'whitespace')(code)\n    }\n    if (!disallowEol && markdownLineEndingOrSpace(code)) {\n      return factoryWhitespace(effects, valueBefore)(code)\n    }\n    effects.enter(attributeValueType)\n    effects.enter(attributeValueData)\n    effects.consume(code)\n    marker = undefined\n    return valueUnquoted\n  }\n\n  /** @type {State} */\n  function valueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n    if (code === 125 || markdownLineEndingOrSpace(code)) {\n      effects.exit(attributeValueData)\n      effects.exit(attributeValueType)\n      effects.exit(attributeType)\n      return between(code)\n    }\n    effects.consume(code)\n    return valueUnquoted\n  }\n\n  /** @type {State} */\n  function valueQuotedStart(code) {\n    if (code === marker) {\n      effects.enter(attributeValueMarker)\n      effects.consume(code)\n      effects.exit(attributeValueMarker)\n      effects.exit(attributeValueLiteralType)\n      effects.exit(attributeType)\n      return valueQuotedAfter\n    }\n    effects.enter(attributeValueType)\n    return valueQuotedBetween(code)\n  }\n\n  /** @type {State} */\n  function valueQuotedBetween(code) {\n    if (code === marker) {\n      effects.exit(attributeValueType)\n      return valueQuotedStart(code)\n    }\n    if (code === null) {\n      return nok(code)\n    }\n\n    // Note: blank lines can’t exist in content.\n    if (markdownLineEnding(code)) {\n      return disallowEol\n        ? nok(code)\n        : factoryWhitespace(effects, valueQuotedBetween)(code)\n    }\n    effects.enter(attributeValueData)\n    effects.consume(code)\n    return valueQuoted\n  }\n\n  /** @type {State} */\n  function valueQuoted(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit(attributeValueData)\n      return valueQuotedBetween(code)\n    }\n    effects.consume(code)\n    return valueQuoted\n  }\n\n  /** @type {State} */\n  function valueQuotedAfter(code) {\n    return code === 125 || markdownLineEndingOrSpace(code)\n      ? between(code)\n      : end(code)\n  }\n\n  /** @type {State} */\n  function end(code) {\n    if (code === 125) {\n      effects.enter(attributesMarkerType)\n      effects.consume(code)\n      effects.exit(attributesMarkerType)\n      effects.exit(attributesType)\n      return ok\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\n// This is a fork of:\n// <https://github.com/micromark/micromark/tree/main/packages/micromark-factory-label>\n// to allow empty labels, balanced brackets (such as for nested directives),\n// text instead of strings, and optionally disallows EOLs.\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @param {boolean} [disallowEol=false]\n */\n// eslint-disable-next-line max-params\nexport function factoryLabel(\n  effects,\n  ok,\n  nok,\n  type,\n  markerType,\n  stringType,\n  disallowEol\n) {\n  let size = 0\n  let balance = 0\n  /** @type {Token|undefined} */\n  let previous\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    return afterStart\n  }\n\n  /** @type {State} */\n  function afterStart(code) {\n    if (code === 93) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n    effects.enter(stringType)\n    return lineStart(code)\n  }\n\n  /** @type {State} */\n  function lineStart(code) {\n    if (code === 93 && !balance) {\n      return atClosingBrace(code)\n    }\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n    if (previous) previous.next = token\n    previous = token\n    return data(code)\n  }\n\n  /** @type {State} */\n  function data(code) {\n    if (code === null || size > 999) {\n      return nok(code)\n    }\n    if (code === 91 && ++balance > 32) {\n      return nok(code)\n    }\n    if (code === 93 && !balance--) {\n      effects.exit('chunkText')\n      return atClosingBrace(code)\n    }\n    if (markdownLineEnding(code)) {\n      if (disallowEol) {\n        return nok(code)\n      }\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    }\n    effects.consume(code)\n    return code === 92 ? dataEscape : data\n  }\n\n  /** @type {State} */\n  function dataEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return data\n    }\n    return data(code)\n  }\n\n  /** @type {State} */\n  function atClosingBrace(code) {\n    effects.exit(stringType)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.exit(type)\n    return ok\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nimport {asciiAlpha, asciiAlphanumeric} from 'micromark-util-character'\n/**\n * @this {TokenizeContext}\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n */\nexport function factoryName(effects, ok, nok, type) {\n  const self = this\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    if (asciiAlpha(code)) {\n      effects.enter(type)\n      effects.consume(code)\n      return name\n    }\n    return nok(code)\n  }\n\n  /** @type {State} */\n  function name(code) {\n    if (code === 45 || code === 95 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return name\n    }\n    effects.exit(type)\n    return self.previous === 45 || self.previous === 95 ? nok(code) : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {factoryAttributes} from './factory-attributes.js'\nimport {factoryLabel} from './factory-label.js'\nimport {factoryName} from './factory-name.js'\n\n/** @type {Construct} */\nexport const directiveContainer = {\n  tokenize: tokenizeDirectiveContainer,\n  concrete: true\n}\nconst label = {\n  tokenize: tokenizeLabel,\n  partial: true\n}\nconst attributes = {\n  tokenize: tokenizeAttributes,\n  partial: true\n}\nconst nonLazyLine = {\n  tokenize: tokenizeNonLazyLine,\n  partial: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDirectiveContainer(effects, ok, nok) {\n  const self = this\n  const tail = self.events[self.events.length - 1]\n  const initialSize =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let sizeOpen = 0\n  /** @type {Token} */\n  let previous\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    effects.enter('directiveContainer')\n    effects.enter('directiveContainerFence')\n    effects.enter('directiveContainerSequence')\n    return sequenceOpen(code)\n  }\n\n  /** @type {State} */\n  function sequenceOpen(code) {\n    if (code === 58) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n    if (sizeOpen < 3) {\n      return nok(code)\n    }\n    effects.exit('directiveContainerSequence')\n    return factoryName.call(\n      self,\n      effects,\n      afterName,\n      nok,\n      'directiveContainerName'\n    )(code)\n  }\n\n  /** @type {State} */\n  function afterName(code) {\n    return code === 91\n      ? effects.attempt(label, afterLabel, afterLabel)(code)\n      : afterLabel(code)\n  }\n\n  /** @type {State} */\n  function afterLabel(code) {\n    return code === 123\n      ? effects.attempt(attributes, afterAttributes, afterAttributes)(code)\n      : afterAttributes(code)\n  }\n\n  /** @type {State} */\n  function afterAttributes(code) {\n    return factorySpace(effects, openAfter, 'whitespace')(code)\n  }\n\n  /** @type {State} */\n  function openAfter(code) {\n    effects.exit('directiveContainerFence')\n    if (code === null) {\n      return afterOpening(code)\n    }\n    if (markdownLineEnding(code)) {\n      if (self.interrupt) {\n        return ok(code)\n      }\n      return effects.attempt(nonLazyLine, contentStart, afterOpening)(code)\n    }\n    return nok(code)\n  }\n\n  /** @type {State} */\n  function afterOpening(code) {\n    effects.exit('directiveContainer')\n    return ok(code)\n  }\n\n  /** @type {State} */\n  function contentStart(code) {\n    if (code === null) {\n      effects.exit('directiveContainer')\n      return ok(code)\n    }\n    effects.enter('directiveContainerContent')\n    return lineStart(code)\n  }\n\n  /** @type {State} */\n  function lineStart(code) {\n    if (code === null) {\n      return after(code)\n    }\n    return effects.attempt(\n      {\n        tokenize: tokenizeClosingFence,\n        partial: true\n      },\n      after,\n      initialSize\n        ? factorySpace(effects, chunkStart, 'linePrefix', initialSize + 1)\n        : chunkStart\n    )(code)\n  }\n\n  /** @type {State} */\n  function chunkStart(code) {\n    if (code === null) {\n      return after(code)\n    }\n    const token = effects.enter('chunkDocument', {\n      contentType: 'document',\n      previous\n    })\n    if (previous) previous.next = token\n    previous = token\n    return contentContinue(code)\n  }\n\n  /** @type {State} */\n  function contentContinue(code) {\n    if (code === null) {\n      const t = effects.exit('chunkDocument')\n      self.parser.lazy[t.start.line] = false\n      return after(code)\n    }\n    if (markdownLineEnding(code)) {\n      return effects.check(nonLazyLine, nonLazyLineAfter, lineAfter)(code)\n    }\n    effects.consume(code)\n    return contentContinue\n  }\n\n  /** @type {State} */\n  function nonLazyLineAfter(code) {\n    effects.consume(code)\n    const t = effects.exit('chunkDocument')\n    self.parser.lazy[t.start.line] = false\n    return lineStart\n  }\n\n  /** @type {State} */\n  function lineAfter(code) {\n    const t = effects.exit('chunkDocument')\n    self.parser.lazy[t.start.line] = false\n    return after(code)\n  }\n\n  /** @type {State} */\n  function after(code) {\n    effects.exit('directiveContainerContent')\n    effects.exit('directiveContainer')\n    return ok(code)\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeClosingFence(effects, ok, nok) {\n    let size = 0\n    return factorySpace(effects, closingPrefixAfter, 'linePrefix', 4)\n\n    /** @type {State} */\n    function closingPrefixAfter(code) {\n      effects.enter('directiveContainerFence')\n      effects.enter('directiveContainerSequence')\n      return closingSequence(code)\n    }\n\n    /** @type {State} */\n    function closingSequence(code) {\n      if (code === 58) {\n        effects.consume(code)\n        size++\n        return closingSequence\n      }\n      if (size < sizeOpen) return nok(code)\n      effects.exit('directiveContainerSequence')\n      return factorySpace(effects, closingSequenceEnd, 'whitespace')(code)\n    }\n\n    /** @type {State} */\n    function closingSequenceEnd(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('directiveContainerFence')\n        return ok(code)\n      }\n      return nok(code)\n    }\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabel(effects, ok, nok) {\n  // Always a `[`\n  return factoryLabel(\n    effects,\n    ok,\n    nok,\n    'directiveContainerLabel',\n    'directiveContainerLabelMarker',\n    'directiveContainerLabelString',\n    true\n  )\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeAttributes(effects, ok, nok) {\n  // Always a `{`\n  return factoryAttributes(\n    effects,\n    ok,\n    nok,\n    'directiveContainerAttributes',\n    'directiveContainerAttributesMarker',\n    'directiveContainerAttribute',\n    'directiveContainerAttributeId',\n    'directiveContainerAttributeClass',\n    'directiveContainerAttributeName',\n    'directiveContainerAttributeInitializerMarker',\n    'directiveContainerAttributeValueLiteral',\n    'directiveContainerAttributeValue',\n    'directiveContainerAttributeValueMarker',\n    'directiveContainerAttributeValueData',\n    true\n  )\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyLine(effects, ok, nok) {\n  const self = this\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return lineStart\n  }\n\n  /** @type {State} */\n  function lineStart(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {factoryAttributes} from './factory-attributes.js'\nimport {factoryLabel} from './factory-label.js'\nimport {factoryName} from './factory-name.js'\n\n/** @type {Construct} */\nexport const directiveLeaf = {\n  tokenize: tokenizeDirectiveLeaf\n}\nconst label = {\n  tokenize: tokenizeLabel,\n  partial: true\n}\nconst attributes = {\n  tokenize: tokenizeAttributes,\n  partial: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDirectiveLeaf(effects, ok, nok) {\n  const self = this\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    effects.enter('directiveLeaf')\n    effects.enter('directiveLeafSequence')\n    effects.consume(code)\n    return inStart\n  }\n\n  /** @type {State} */\n  function inStart(code) {\n    if (code === 58) {\n      effects.consume(code)\n      effects.exit('directiveLeafSequence')\n      return factoryName.call(\n        self,\n        effects,\n        afterName,\n        nok,\n        'directiveLeafName'\n      )\n    }\n    return nok(code)\n  }\n\n  /** @type {State} */\n  function afterName(code) {\n    return code === 91\n      ? effects.attempt(label, afterLabel, afterLabel)(code)\n      : afterLabel(code)\n  }\n\n  /** @type {State} */\n  function afterLabel(code) {\n    return code === 123\n      ? effects.attempt(attributes, afterAttributes, afterAttributes)(code)\n      : afterAttributes(code)\n  }\n\n  /** @type {State} */\n  function afterAttributes(code) {\n    return factorySpace(effects, end, 'whitespace')(code)\n  }\n\n  /** @type {State} */\n  function end(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('directiveLeaf')\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabel(effects, ok, nok) {\n  // Always a `[`\n  return factoryLabel(\n    effects,\n    ok,\n    nok,\n    'directiveLeafLabel',\n    'directiveLeafLabelMarker',\n    'directiveLeafLabelString',\n    true\n  )\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeAttributes(effects, ok, nok) {\n  // Always a `{`\n  return factoryAttributes(\n    effects,\n    ok,\n    nok,\n    'directiveLeafAttributes',\n    'directiveLeafAttributesMarker',\n    'directiveLeafAttribute',\n    'directiveLeafAttributeId',\n    'directiveLeafAttributeClass',\n    'directiveLeafAttributeName',\n    'directiveLeafAttributeInitializerMarker',\n    'directiveLeafAttributeValueLiteral',\n    'directiveLeafAttributeValue',\n    'directiveLeafAttributeValueMarker',\n    'directiveLeafAttributeValueData',\n    true\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factoryAttributes} from './factory-attributes.js'\nimport {factoryLabel} from './factory-label.js'\nimport {factoryName} from './factory-name.js'\n\n/** @type {Construct} */\nexport const directiveText = {\n  tokenize: tokenizeDirectiveText,\n  previous\n}\nconst label = {\n  tokenize: tokenizeLabel,\n  partial: true\n}\nconst attributes = {\n  tokenize: tokenizeAttributes,\n  partial: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Previous}\n */\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 58 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDirectiveText(effects, ok, nok) {\n  const self = this\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    effects.enter('directiveText')\n    effects.enter('directiveTextMarker')\n    effects.consume(code)\n    effects.exit('directiveTextMarker')\n    return factoryName.call(self, effects, afterName, nok, 'directiveTextName')\n  }\n\n  /** @type {State} */\n  function afterName(code) {\n    return code === 58\n      ? nok(code)\n      : code === 91\n      ? effects.attempt(label, afterLabel, afterLabel)(code)\n      : afterLabel(code)\n  }\n\n  /** @type {State} */\n  function afterLabel(code) {\n    return code === 123\n      ? effects.attempt(attributes, afterAttributes, afterAttributes)(code)\n      : afterAttributes(code)\n  }\n\n  /** @type {State} */\n  function afterAttributes(code) {\n    effects.exit('directiveText')\n    return ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabel(effects, ok, nok) {\n  // Always a `[`\n  return factoryLabel(\n    effects,\n    ok,\n    nok,\n    'directiveTextLabel',\n    'directiveTextLabelMarker',\n    'directiveTextLabelString'\n  )\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeAttributes(effects, ok, nok) {\n  // Always a `{`\n  return factoryAttributes(\n    effects,\n    ok,\n    nok,\n    'directiveTextAttributes',\n    'directiveTextAttributesMarker',\n    'directiveTextAttribute',\n    'directiveTextAttributeId',\n    'directiveTextAttributeClass',\n    'directiveTextAttributeName',\n    'directiveTextAttributeInitializerMarker',\n    'directiveTextAttributeValueLiteral',\n    'directiveTextAttributeValue',\n    'directiveTextAttributeValueMarker',\n    'directiveTextAttributeValueData'\n  )\n}\n","/**\n * @typedef {import('mdast').BlockContent} BlockContent\n * @typedef {import('mdast').DefinitionContent} DefinitionContent\n * @typedef {import('mdast').Paragraph} Paragraph\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-from-markdown').Token} Token\n *\n * @typedef {import('mdast-util-to-markdown').ConstructName} ConstructName\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').State} State\n *\n * @typedef {import('../index.js').LeafDirective} LeafDirective\n * @typedef {import('../index.js').TextDirective} TextDirective\n * @typedef {import('../index.js').Directive} Directive\n */\n\nimport {parseEntities} from 'parse-entities'\nimport {stringifyEntitiesLight} from 'stringify-entities'\nimport {visitParents} from 'unist-util-visit-parents'\nimport {containerFlow} from 'mdast-util-to-markdown/lib/util/container-flow.js'\nimport {containerPhrasing} from 'mdast-util-to-markdown/lib/util/container-phrasing.js'\nimport {checkQuote} from 'mdast-util-to-markdown/lib/util/check-quote.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\n// To do: next major: replace `containerFlow`, `containerPhrasing`, `track`\n// with `state` methods.\n// To do: next major: expose functions.\n\nconst own = {}.hasOwnProperty\n\nconst shortcut = /^[^\\t\\n\\r \"#'.<=>`}]+$/\n\nhandleDirective.peek = peekDirective\n\n/**\n * Extension for `mdast-util-from-markdown` to enable directives.\n *\n * @type {FromMarkdownExtension}\n */\nexport const directiveFromMarkdown = {\n  canContainEols: ['textDirective'],\n  enter: {\n    directiveContainer: enterContainer,\n    directiveContainerAttributes: enterAttributes,\n    directiveContainerLabel: enterContainerLabel,\n\n    directiveLeaf: enterLeaf,\n    directiveLeafAttributes: enterAttributes,\n\n    directiveText: enterText,\n    directiveTextAttributes: enterAttributes\n  },\n  exit: {\n    directiveContainer: exit,\n    directiveContainerAttributeClassValue: exitAttributeClassValue,\n    directiveContainerAttributeIdValue: exitAttributeIdValue,\n    directiveContainerAttributeName: exitAttributeName,\n    directiveContainerAttributeValue: exitAttributeValue,\n    directiveContainerAttributes: exitAttributes,\n    directiveContainerLabel: exitContainerLabel,\n    directiveContainerName: exitName,\n\n    directiveLeaf: exit,\n    directiveLeafAttributeClassValue: exitAttributeClassValue,\n    directiveLeafAttributeIdValue: exitAttributeIdValue,\n    directiveLeafAttributeName: exitAttributeName,\n    directiveLeafAttributeValue: exitAttributeValue,\n    directiveLeafAttributes: exitAttributes,\n    directiveLeafName: exitName,\n\n    directiveText: exit,\n    directiveTextAttributeClassValue: exitAttributeClassValue,\n    directiveTextAttributeIdValue: exitAttributeIdValue,\n    directiveTextAttributeName: exitAttributeName,\n    directiveTextAttributeValue: exitAttributeValue,\n    directiveTextAttributes: exitAttributes,\n    directiveTextName: exitName\n  }\n}\n\n/**\n * Extension for `mdast-util-to-markdown` to enable directives.\n *\n * @type {ToMarkdownExtension}\n */\nexport const directiveToMarkdown = {\n  unsafe: [\n    {\n      character: '\\r',\n      inConstruct: ['leafDirectiveLabel', 'containerDirectiveLabel']\n    },\n    {\n      character: '\\n',\n      inConstruct: ['leafDirectiveLabel', 'containerDirectiveLabel']\n    },\n    {\n      before: '[^:]',\n      character: ':',\n      after: '[A-Za-z]',\n      inConstruct: ['phrasing']\n    },\n    {atBreak: true, character: ':', after: ':'}\n  ],\n  handlers: {\n    containerDirective: handleDirective,\n    leafDirective: handleDirective,\n    textDirective: handleDirective\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterContainer(token) {\n  enter.call(this, 'containerDirective', token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterLeaf(token) {\n  enter.call(this, 'leafDirective', token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterText(token) {\n  enter.call(this, 'textDirective', token)\n}\n\n/**\n * @this {CompileContext}\n * @param {Directive['type']} type\n * @param {Token} token\n */\nfunction enter(type, token) {\n  this.enter({type, name: '', attributes: {}, children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @param {Token} token\n */\nfunction exitName(token) {\n  const node = /** @type {Directive} */ (this.stack[this.stack.length - 1])\n  node.name = this.sliceSerialize(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterContainerLabel(token) {\n  this.enter(\n    {type: 'paragraph', data: {directiveLabel: true}, children: []},\n    token\n  )\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitContainerLabel(token) {\n  this.exit(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterAttributes() {\n  this.setData('directiveAttributes', [])\n  this.buffer() // Capture EOLs\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitAttributeIdValue(token) {\n  const list = /** @type {Array<[string, string]>} */ (\n    this.getData('directiveAttributes')\n  )\n  list.push([\n    'id',\n    parseEntities(this.sliceSerialize(token), {\n      attribute: true\n    })\n  ])\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitAttributeClassValue(token) {\n  const list = /** @type {Array<[string, string]>} */ (\n    this.getData('directiveAttributes')\n  )\n  list.push([\n    'class',\n    parseEntities(this.sliceSerialize(token), {\n      attribute: true\n    })\n  ])\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitAttributeValue(token) {\n  const list = /** @type {Array<[string, string]>} */ (\n    this.getData('directiveAttributes')\n  )\n  list[list.length - 1][1] = parseEntities(this.sliceSerialize(token), {\n    attribute: true\n  })\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitAttributeName(token) {\n  const list = /** @type {Array<[string, string]>} */ (\n    this.getData('directiveAttributes')\n  )\n\n  // Attribute names in CommonMark are significantly limited, so character\n  // references can’t exist.\n  list.push([this.sliceSerialize(token), ''])\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitAttributes() {\n  const list = /** @type {Array<[string, string]>} */ (\n    this.getData('directiveAttributes')\n  )\n  /** @type {Record<string, string>} */\n  const cleaned = {}\n  let index = -1\n\n  while (++index < list.length) {\n    const attribute = list[index]\n\n    if (attribute[0] === 'class' && cleaned.class) {\n      cleaned.class += ' ' + attribute[1]\n    } else {\n      cleaned[attribute[0]] = attribute[1]\n    }\n  }\n\n  this.setData('directiveAttributes')\n  this.resume() // Drop EOLs\n  const node = /** @type {Directive} */ (this.stack[this.stack.length - 1])\n  node.attributes = cleaned\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exit(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {Directive} node\n */\nfunction handleDirective(node, _, state, safeOptions) {\n  const tracker = track(safeOptions)\n  const sequence = fence(node)\n  const exit = state.enter(node.type)\n  let value = tracker.move(sequence + (node.name || ''))\n  /** @type {Paragraph | LeafDirective | TextDirective | undefined} */\n  let label\n\n  if (node.type === 'containerDirective') {\n    const head = (node.children || [])[0]\n    label = inlineDirectiveLabel(head) ? head : undefined\n  } else {\n    label = node\n  }\n\n  if (label && label.children && label.children.length > 0) {\n    const exit = state.enter('label')\n    /** @type {ConstructName} */\n    const labelType = `${node.type}Label`\n    const subexit = state.enter(labelType)\n    value += tracker.move('[')\n    value += tracker.move(\n      containerPhrasing(label, state, {\n        ...tracker.current(),\n        before: value,\n        after: ']'\n      })\n    )\n    value += tracker.move(']')\n    subexit()\n    exit()\n  }\n\n  value += tracker.move(attributes(node, state))\n\n  if (node.type === 'containerDirective') {\n    const head = (node.children || [])[0]\n    let shallow = node\n\n    if (inlineDirectiveLabel(head)) {\n      shallow = Object.assign({}, node, {children: node.children.slice(1)})\n    }\n\n    if (shallow && shallow.children && shallow.children.length > 0) {\n      value += tracker.move('\\n')\n      value += tracker.move(containerFlow(shallow, state, tracker.current()))\n    }\n\n    value += tracker.move('\\n' + sequence)\n  }\n\n  exit()\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction peekDirective() {\n  return ':'\n}\n\n/**\n * @param {Directive} node\n * @param {State} state\n * @returns {string}\n */\nfunction attributes(node, state) {\n  const quote = checkQuote(state)\n  const subset = node.type === 'textDirective' ? [quote] : [quote, '\\n', '\\r']\n  const attrs = node.attributes || {}\n  /** @type {Array<string>} */\n  const values = []\n  /** @type {string | undefined} */\n  let classesFull\n  /** @type {string | undefined} */\n  let classes\n  /** @type {string | undefined} */\n  let id\n  /** @type {string} */\n  let key\n\n  for (key in attrs) {\n    if (\n      own.call(attrs, key) &&\n      attrs[key] !== undefined &&\n      attrs[key] !== null\n    ) {\n      const value = String(attrs[key])\n\n      if (key === 'id') {\n        id = shortcut.test(value) ? '#' + value : quoted('id', value)\n      } else if (key === 'class') {\n        const list = value.split(/[\\t\\n\\r ]+/g)\n        /** @type {Array<string>} */\n        const classesFullList = []\n        /** @type {Array<string>} */\n        const classesList = []\n        let index = -1\n\n        while (++index < list.length) {\n          ;(shortcut.test(list[index]) ? classesList : classesFullList).push(\n            list[index]\n          )\n        }\n\n        classesFull =\n          classesFullList.length > 0\n            ? quoted('class', classesFullList.join(' '))\n            : ''\n        classes = classesList.length > 0 ? '.' + classesList.join('.') : ''\n      } else {\n        values.push(quoted(key, value))\n      }\n    }\n  }\n\n  if (classesFull) {\n    values.unshift(classesFull)\n  }\n\n  if (classes) {\n    values.unshift(classes)\n  }\n\n  if (id) {\n    values.unshift(id)\n  }\n\n  return values.length > 0 ? '{' + values.join(' ') + '}' : ''\n\n  /**\n   * @param {string} key\n   * @param {string} value\n   * @returns {string}\n   */\n  function quoted(key, value) {\n    return (\n      key +\n      (value\n        ? '=' + quote + stringifyEntitiesLight(value, {subset}) + quote\n        : '')\n    )\n  }\n}\n\n/**\n * @param {BlockContent | DefinitionContent} node\n * @returns {node is Paragraph & {data: {directiveLabel: boolean}}}\n */\nfunction inlineDirectiveLabel(node) {\n  return Boolean(\n    node && node.type === 'paragraph' && node.data && node.data.directiveLabel\n  )\n}\n\n/**\n * @param {Directive} node\n * @returns {string}\n */\nfunction fence(node) {\n  let size = 0\n\n  if (node.type === 'containerDirective') {\n    visitParents(node, function (node, parents) {\n      if (node.type === 'containerDirective') {\n        let index = parents.length\n        let nesting = 0\n\n        while (index--) {\n          if (parents[index].type === 'containerDirective') {\n            nesting++\n          }\n        }\n\n        if (nesting > size) size = nesting\n      }\n    })\n    size += 3\n  } else if (node.type === 'leafDirective') {\n    size = 2\n  } else {\n    size = 1\n  }\n\n  return ':'.repeat(size)\n}\n","/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['quote'], null | undefined>}\n */\nexport function checkQuote(state) {\n  const marker = state.options.quote || '\"'\n\n  if (marker !== '\"' && marker !== \"'\") {\n    throw new Error(\n      'Cannot serialize title with `' +\n        marker +\n        '` for `options.quote`, expected `\"`, or `\\'`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').Root} Root\n *\n * @typedef {import('mdast-util-directive')} DoNotTouchAsThisImportIncludesDirectivesInTree\n */\n\nimport {directive} from 'micromark-extension-directive'\nimport {directiveFromMarkdown, directiveToMarkdown} from 'mdast-util-directive'\n\n/**\n * Plugin to support the generic directives proposal (`:cite[smith04]`,\n * `::youtube[Video of a cat in a box]{v=01ab2cd3efg}`, and such).\n *\n * @type {import('unified').Plugin<void[], Root>}\n */\nexport default function remarkDirective() {\n  const data = this.data()\n\n  add('micromarkExtensions', directive())\n  add('fromMarkdownExtensions', directiveFromMarkdown)\n  add('toMarkdownExtensions', directiveToMarkdown)\n\n  /**\n   * @param {string} field\n   * @param {unknown} value\n   */\n  function add(field, value) {\n    const list = /** @type {unknown[]} */ (\n      // Other extensions\n      /* c8 ignore next 2 */\n      data[field] ? data[field] : (data[field] = [])\n    )\n\n    list.push(value)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\n\nimport {directiveContainer} from './directive-container.js'\nimport {directiveLeaf} from './directive-leaf.js'\nimport {directiveText} from './directive-text.js'\n\n/**\n * Create an extension for `micromark` to enable directive syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions`, to\n *   enable directive syntax.\n */\nexport function directive() {\n  return {\n    text: {\n      [58]: directiveText\n    },\n    flow: {\n      [58]: [directiveContainer, directiveLeaf]\n    }\n  }\n}\n","// @ts-expect-error\nimport formatter from 'format'\n\nexport const fault = Object.assign(create(Error), {\n  eval: create(EvalError),\n  range: create(RangeError),\n  reference: create(ReferenceError),\n  syntax: create(SyntaxError),\n  type: create(TypeError),\n  uri: create(URIError)\n})\n\n/**\n * Create a new `EConstructor`, with the formatted `format` as a first argument.\n *\n * @template {Error} Fault\n * @template {new (reason: string) => Fault} Class\n * @param {Class} Constructor\n */\nexport function create(Constructor) {\n  /** @type {string} */\n  // @ts-expect-error\n  FormattedError.displayName = Constructor.displayName || Constructor.name\n\n  return FormattedError\n\n  /**\n   * Create an error with a printf-like formatted message.\n   *\n   * @param {string|null} [format]\n   *   Template string.\n   * @param {...unknown} values\n   *   Values to render in `format`.\n   * @returns {Fault}\n   */\n  function FormattedError(format, ...values) {\n    /** @type {string} */\n    const reason = format ? formatter(format, ...values) : format\n    return new Constructor(reason)\n  }\n}\n","/**\n * @typedef {'toml' | 'yaml'} Preset\n *   Known name of a frontmatter style.\n *\n * @typedef Info\n *   Sequence.\n *\n *   Depending on how this structure is used, it reflects a marker or a fence.\n * @property {string} open\n *   Opening.\n * @property {string} close\n *   Closing.\n *\n * @typedef MatterProps\n *   Fields describing a kind of matter.\n * @property {string} type\n *   Node type to tokenize as.\n * @property {boolean | null | undefined} [anywhere=false]\n *   Whether matter can be found anywhere in the document, normally, only matter\n *   at the start of the document is recognized.\n *\n *   > 👉 **Note**: using this is a terrible idea.\n *   > It’s called frontmatter, not matter-in-the-middle or so.\n *   > This makes your markdown less portable.\n *\n * @typedef MarkerProps\n *   Marker configuration.\n * @property {Info | string} marker\n *   Character repeated 3 times, used as complete fences.\n *\n *   For example the character `'-'` will result in `'---'` being used as the\n *   fence\n *   Pass `open` and `close` to specify different characters for opening and\n *   closing fences.\n * @property {never} [fence]\n *   If `marker` is set, `fence` must not be set.\n *\n * @typedef FenceProps\n *   Fence configuration.\n * @property {Info | string} fence\n *   Complete fences.\n *\n *   This can be used when fences contain different characters or lengths\n *   other than 3.\n *   Pass `open` and `close` to interface to specify different characters for opening and\n *   closing fences.\n * @property {never} [marker]\n *   If `fence` is set, `marker` must not be set.\n *\n * @typedef {(MatterProps & FenceProps) | (MatterProps & MarkerProps)} Matter\n *   Fields describing a kind of matter.\n *\n *   > 👉 **Note**: using `anywhere` is a terrible idea.\n *   > It’s called frontmatter, not matter-in-the-middle or so.\n *   > This makes your markdown less portable.\n *\n *   > 👉 **Note**: `marker` and `fence` are mutually exclusive.\n *   > If `marker` is set, `fence` must not be set, and vice versa.\n *\n * @typedef {Matter | Preset | Array<Matter | Preset>} Options\n *   Configuration.\n */\n\nimport {fault} from 'fault'\nconst own = {}.hasOwnProperty\nconst markers = {\n  yaml: '-',\n  toml: '+'\n}\n\n/**\n * Simplify one or more options.\n *\n * @param {Options | null | undefined} [options='yaml']\n *   Configuration.\n * @returns {Array<Matter>}\n *   List of matters.\n */\nexport function matters(options) {\n  /** @type {Array<Matter>} */\n  const result = []\n  let index = -1\n\n  /** @type {Array<Matter | Preset>} */\n  const presetsOrMatters = Array.isArray(options)\n    ? options\n    : options\n    ? [options]\n    : ['yaml']\n  while (++index < presetsOrMatters.length) {\n    result[index] = matter(presetsOrMatters[index])\n  }\n  return result\n}\n\n/**\n * Simplify an option.\n *\n * @param {Matter | Preset} option\n *   Configuration.\n * @returns {Matter}\n *   Matters.\n */\nfunction matter(option) {\n  let result = option\n  if (typeof result === 'string') {\n    if (!own.call(markers, result)) {\n      throw fault('Missing matter definition for `%s`', result)\n    }\n    result = {\n      type: result,\n      marker: markers[result]\n    }\n  } else if (typeof result !== 'object') {\n    throw fault('Expected matter to be an object, not `%j`', result)\n  }\n  if (!own.call(result, 'type')) {\n    throw fault('Missing `type` in matter `%j`', result)\n  }\n  if (!own.call(result, 'fence') && !own.call(result, 'marker')) {\n    throw fault('Missing `marker` or `fence` in matter `%j`', result)\n  }\n  return result\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n *\n * @typedef {import('../matters.js').Info} Info\n * @typedef {import('../matters.js').Matter} Matter\n * @typedef {import('../matters.js').Options} Options\n */\n\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\nimport {matters} from '../matters.js'\n\n/**\n * Create an extension for `micromark` to enable frontmatter syntax.\n *\n * @param {Options | null | undefined} [options='yaml']\n *   Configuration.\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions`, to\n *   enable frontmatter syntax.\n */\nexport function frontmatter(options) {\n  const listOfMatters = matters(options)\n  /** @type {ConstructRecord} */\n  const flow = {}\n  let index = -1\n  while (++index < listOfMatters.length) {\n    const matter = listOfMatters[index]\n    const code = fence(matter, 'open').charCodeAt(0)\n    const construct = createConstruct(matter)\n    const existing = flow[code]\n    if (Array.isArray(existing)) {\n      existing.push(construct)\n    } else {\n      // Never a single object, always an array.\n      flow[code] = [construct]\n    }\n  }\n  return {\n    flow\n  }\n}\n\n/**\n * @param {Matter} matter\n * @returns {Construct}\n */\nfunction createConstruct(matter) {\n  const anywhere = matter.anywhere\n  const frontmatterType = matter.type\n  const fenceType = frontmatterType + 'Fence'\n  const sequenceType = fenceType + 'Sequence'\n  const valueType = frontmatterType + 'Value'\n  const closingFenceConstruct = {\n    tokenize: tokenizeClosingFence,\n    partial: true\n  }\n\n  /**\n   * Fence to look for.\n   *\n   * @type {string}\n   */\n  let buffer\n  let bufferIndex = 0\n  return {\n    tokenize: tokenizeFrontmatter,\n    concrete: true\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeFrontmatter(effects, ok, nok) {\n    const self = this\n    return start\n\n    /**\n     * Start of frontmatter.\n     *\n     * ```markdown\n     * > | ---\n     *     ^\n     *   | title: \"Venus\"\n     *   | ---\n     * ```\n     *\n     * @type {State}\n     */\n    function start(code) {\n      const position = self.now()\n      if (\n        // Indent not allowed.\n        position.column === 1 &&\n        // Normally, only allowed in first line.\n        (position.line === 1 || anywhere)\n      ) {\n        buffer = fence(matter, 'open')\n        bufferIndex = 0\n        if (code === buffer.charCodeAt(bufferIndex)) {\n          effects.enter(frontmatterType)\n          effects.enter(fenceType)\n          effects.enter(sequenceType)\n          return openSequence(code)\n        }\n      }\n      return nok(code)\n    }\n\n    /**\n     * In open sequence.\n     *\n     * ```markdown\n     * > | ---\n     *     ^\n     *   | title: \"Venus\"\n     *   | ---\n     * ```\n     *\n     * @type {State}\n     */\n    function openSequence(code) {\n      if (bufferIndex === buffer.length) {\n        effects.exit(sequenceType)\n        if (markdownSpace(code)) {\n          effects.enter('whitespace')\n          return openSequenceWhitespace(code)\n        }\n        return openAfter(code)\n      }\n      if (code === buffer.charCodeAt(bufferIndex++)) {\n        effects.consume(code)\n        return openSequence\n      }\n      return nok(code)\n    }\n\n    /**\n     * In whitespace after open sequence.\n     *\n     * ```markdown\n     * > | ---␠\n     *        ^\n     *   | title: \"Venus\"\n     *   | ---\n     * ```\n     *\n     * @type {State}\n     */\n    function openSequenceWhitespace(code) {\n      if (markdownSpace(code)) {\n        effects.consume(code)\n        return openSequenceWhitespace\n      }\n      effects.exit('whitespace')\n      return openAfter(code)\n    }\n\n    /**\n     * After open sequence.\n     *\n     * ```markdown\n     * > | ---\n     *        ^\n     *   | title: \"Venus\"\n     *   | ---\n     * ```\n     *\n     * @type {State}\n     */\n    function openAfter(code) {\n      if (markdownLineEnding(code)) {\n        effects.exit(fenceType)\n        effects.enter('lineEnding')\n        effects.consume(code)\n        effects.exit('lineEnding')\n        // Get ready for closing fence.\n        buffer = fence(matter, 'close')\n        bufferIndex = 0\n        return effects.attempt(closingFenceConstruct, after, contentStart)\n      }\n\n      // EOF is not okay.\n      return nok(code)\n    }\n\n    /**\n     * Start of content chunk.\n     *\n     * ```markdown\n     *   | ---\n     * > | title: \"Venus\"\n     *     ^\n     *   | ---\n     * ```\n     *\n     * @type {State}\n     */\n    function contentStart(code) {\n      if (code === null || markdownLineEnding(code)) {\n        return contentEnd(code)\n      }\n      effects.enter(valueType)\n      return contentInside(code)\n    }\n\n    /**\n     * In content chunk.\n     *\n     * ```markdown\n     *   | ---\n     * > | title: \"Venus\"\n     *     ^\n     *   | ---\n     * ```\n     *\n     * @type {State}\n     */\n    function contentInside(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit(valueType)\n        return contentEnd(code)\n      }\n      effects.consume(code)\n      return contentInside\n    }\n\n    /**\n     * End of content chunk.\n     *\n     * ```markdown\n     *   | ---\n     * > | title: \"Venus\"\n     *                   ^\n     *   | ---\n     * ```\n     *\n     * @type {State}\n     */\n    function contentEnd(code) {\n      // Require a closing fence.\n      if (code === null) {\n        return nok(code)\n      }\n\n      // Can only be an eol.\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return effects.attempt(closingFenceConstruct, after, contentStart)\n    }\n\n    /**\n     * After frontmatter.\n     *\n     * ```markdown\n     *   | ---\n     *   | title: \"Venus\"\n     * > | ---\n     *        ^\n     * ```\n     *\n     * @type {State}\n     */\n    function after(code) {\n      // `code` must be eol/eof.\n      effects.exit(frontmatterType)\n      return ok(code)\n    }\n  }\n\n  /** @type {Tokenizer} */\n  function tokenizeClosingFence(effects, ok, nok) {\n    let bufferIndex = 0\n    return closeStart\n\n    /**\n     * Start of close sequence.\n     *\n     * ```markdown\n     *   | ---\n     *   | title: \"Venus\"\n     * > | ---\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function closeStart(code) {\n      if (code === buffer.charCodeAt(bufferIndex)) {\n        effects.enter(fenceType)\n        effects.enter(sequenceType)\n        return closeSequence(code)\n      }\n      return nok(code)\n    }\n\n    /**\n     * In close sequence.\n     *\n     * ```markdown\n     *   | ---\n     *   | title: \"Venus\"\n     * > | ---\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function closeSequence(code) {\n      if (bufferIndex === buffer.length) {\n        effects.exit(sequenceType)\n        if (markdownSpace(code)) {\n          effects.enter('whitespace')\n          return closeSequenceWhitespace(code)\n        }\n        return closeAfter(code)\n      }\n      if (code === buffer.charCodeAt(bufferIndex++)) {\n        effects.consume(code)\n        return closeSequence\n      }\n      return nok(code)\n    }\n\n    /**\n     * In whitespace after close sequence.\n     *\n     * ```markdown\n     * > | ---\n     *   | title: \"Venus\"\n     *   | ---␠\n     *        ^\n     * ```\n     *\n     * @type {State}\n     */\n    function closeSequenceWhitespace(code) {\n      if (markdownSpace(code)) {\n        effects.consume(code)\n        return closeSequenceWhitespace\n      }\n      effects.exit('whitespace')\n      return closeAfter(code)\n    }\n\n    /**\n     * After close sequence.\n     *\n     * ```markdown\n     *   | ---\n     *   | title: \"Venus\"\n     * > | ---\n     *        ^\n     * ```\n     *\n     * @type {State}\n     */\n    function closeAfter(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit(fenceType)\n        return ok(code)\n      }\n      return nok(code)\n    }\n  }\n}\n\n/**\n * @param {Matter} matter\n * @param {'open' | 'close'} prop\n * @returns {string}\n */\nfunction fence(matter, prop) {\n  return matter.marker\n    ? pick(matter.marker, prop).repeat(3)\n    : // @ts-expect-error: They’re mutually exclusive.\n      pick(matter.fence, prop)\n}\n\n/**\n * @param {Info | string} schema\n * @param {'open' | 'close'} prop\n * @returns {string}\n */\nfunction pick(schema, prop) {\n  return typeof schema === 'string' ? schema : schema[prop]\n}\n","/**\n * @typedef {import('mdast').Literal} Literal\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n *\n * @typedef {import('micromark-extension-frontmatter').Options} Options\n * @typedef {import('micromark-extension-frontmatter/matters.js').Matter} Matter\n * @typedef {import('micromark-extension-frontmatter/matters.js').Info} Info\n */\n\nimport {matters} from 'micromark-extension-frontmatter/matters.js'\n\n/**\n * Create an extension for `mdast-util-from-markdown`.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown`.\n */\nexport function frontmatterFromMarkdown(options) {\n  // @ts-expect-error: `micromark-extension-frontmatter` should fix types to\n  // accept `null` as options.\n  const settings = matters(options)\n  /** @type {FromMarkdownExtension['enter']} */\n  const enter = {}\n  /** @type {FromMarkdownExtension['exit']} */\n  const exit = {}\n  let index = -1\n\n  while (++index < settings.length) {\n    const matter = settings[index]\n    enter[matter.type] = opener(matter)\n    exit[matter.type] = close\n    exit[matter.type + 'Value'] = value\n  }\n\n  return {enter, exit}\n}\n\n/**\n * @param {Matter} matter\n * @returns {FromMarkdownHandle} enter\n */\nfunction opener(matter) {\n  return open\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function open(token) {\n    // @ts-expect-error: custom.\n    this.enter({type: matter.type, value: ''}, token)\n    this.buffer()\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction close(token) {\n  const data = this.resume()\n  const node = /** @type {Literal} */ (this.exit(token))\n  // Remove the initial and final eol.\n  node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction value(token) {\n  this.config.enter.data.call(this, token)\n  this.config.exit.data.call(this, token)\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown`.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown`.\n */\nexport function frontmatterToMarkdown(options) {\n  // To do: use an extension object with `satisfies` later.\n  /** @type {ToMarkdownExtension['unsafe']} */\n  const unsafe = []\n  /** @type {ToMarkdownExtension['handlers']} */\n  const handlers = {}\n  // @ts-expect-error: `micromark-extension-frontmatter` should fix types to\n  // accept `null` as options.\n  const settings = matters(options)\n  let index = -1\n\n  while (++index < settings.length) {\n    const matter = settings[index]\n\n    // @ts-expect-error: this can add custom frontmatter nodes.\n    // Typing those is the responsibility of the end user.\n    handlers[matter.type] = handler(matter)\n\n    // To do: idea: perhaps make this smarter, with an `after` of the second char?\n    unsafe.push({atBreak: true, character: fence(matter, 'open').charAt(0)})\n  }\n\n  return {unsafe, handlers}\n}\n\n/**\n * Create a handle that can serialize a frontmatter node as markdown.\n *\n * @param {Matter} matter\n *   Structure.\n * @returns {(node: Literal) => string} enter\n *   Handler.\n */\nfunction handler(matter) {\n  const open = fence(matter, 'open')\n  const close = fence(matter, 'close')\n\n  return handle\n\n  /**\n   * Serialize a frontmatter node as markdown.\n   *\n   * @param {Literal} node\n   *   Node to serialize.\n   * @returns {string}\n   *   Serialized node.\n   */\n  function handle(node) {\n    return open + (node.value ? '\\n' + node.value : '') + '\\n' + close\n  }\n}\n\n/**\n * Get an `open` or `close` fence.\n *\n * @param {Matter} matter\n *   Structure.\n * @param {'open' | 'close'} prop\n *   Field to get.\n * @returns {string}\n *   Fence.\n */\nfunction fence(matter, prop) {\n  return matter.marker\n    ? pick(matter.marker, prop).repeat(3)\n    : // @ts-expect-error: They’re mutually exclusive.\n      pick(matter.fence, prop)\n}\n\n/**\n * Take `open` or `close` fields when schema is an info object, or use the\n * given value when it is a string.\n *\n * @param {Info | string} schema\n *   Info object or value.\n * @param {'open' | 'close'} prop\n *   Field to get.\n * @returns {string}\n *   Thing to use for the opening or closing.\n */\nfunction pick(schema, prop) {\n  return typeof schema === 'string' ? schema : schema[prop]\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('micromark-extension-frontmatter').Options} Options\n */\n\nimport {frontmatter} from 'micromark-extension-frontmatter'\nimport {\n  frontmatterFromMarkdown,\n  frontmatterToMarkdown\n} from 'mdast-util-frontmatter'\n\n/**\n * Plugin to add support for frontmatter.\n *\n * @type {import('unified').Plugin<[Options?]|void[], Root>}\n */\nexport default function remarkFrontmatter(options = 'yaml') {\n  const data = this.data()\n\n  add('micromarkExtensions', frontmatter(options))\n  add('fromMarkdownExtensions', frontmatterFromMarkdown(options))\n  add('toMarkdownExtensions', frontmatterToMarkdown(options))\n\n  /**\n   * @param {string} field\n   * @param {unknown} value\n   */\n  function add(field, value) {\n    const list = /** @type {unknown[]} */ (\n      // Other extensions\n      /* c8 ignore next 2 */\n      data[field] ? data[field] : (data[field] = [])\n    )\n\n    list.push(value)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiControl,\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\nconst wwwPrefix = {\n  tokenize: tokenizeWwwPrefix,\n  partial: true\n}\nconst domain = {\n  tokenize: tokenizeDomain,\n  partial: true\n}\nconst path = {\n  tokenize: tokenizePath,\n  partial: true\n}\nconst trail = {\n  tokenize: tokenizeTrail,\n  partial: true\n}\nconst emailDomainDotTrail = {\n  tokenize: tokenizeEmailDomainDotTrail,\n  partial: true\n}\nconst wwwAutolink = {\n  tokenize: tokenizeWwwAutolink,\n  previous: previousWww\n}\nconst protocolAutolink = {\n  tokenize: tokenizeProtocolAutolink,\n  previous: previousProtocol\n}\nconst emailAutolink = {\n  tokenize: tokenizeEmailAutolink,\n  previous: previousEmail\n}\n\n/** @type {ConstructRecord} */\nconst text = {}\n\n// To do: next major: expose functions that yields extension.\n\n/**\n * Extension for `micromark` that can be passed in `extensions` to enable GFM\n * autolink literal syntax.\n *\n * @type {Extension}\n */\nexport const gfmAutolinkLiteral = {\n  text\n}\nlet code = 48\n\n// Add alphanumerics.\nwhile (code < 123) {\n  text[code] = emailAutolink\n  code++\n  if (code === 58) code = 65\n  else if (code === 91) code = 97\n}\ntext[43] = emailAutolink\ntext[45] = emailAutolink\ntext[46] = emailAutolink\ntext[95] = emailAutolink\ntext[72] = [emailAutolink, protocolAutolink]\ntext[104] = [emailAutolink, protocolAutolink]\ntext[87] = [emailAutolink, wwwAutolink]\ntext[119] = [emailAutolink, wwwAutolink]\n\n// To do: perform email autolink literals on events, afterwards.\n// That’s where `markdown-rs` and `cmark-gfm` perform it.\n// It should look for `@`, then for atext backwards, and then for a label\n// forwards.\n// To do: `mailto:`, `xmpp:` protocol as prefix.\n\n/**\n * Email autolink literal.\n *\n * ```markdown\n * > | a contact@example.org b\n *       ^^^^^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeEmailAutolink(effects, ok, nok) {\n  const self = this\n  /** @type {boolean | undefined} */\n  let dot\n  /** @type {boolean} */\n  let data\n  return start\n\n  /**\n   * Start of email autolink literal.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (\n      !gfmAtext(code) ||\n      !previousEmail.call(self, self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkEmail')\n    return atext(code)\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atext(code) {\n    if (gfmAtext(code)) {\n      effects.consume(code)\n      return atext\n    }\n    if (code === 64) {\n      effects.consume(code)\n      return emailDomain\n    }\n    return nok(code)\n  }\n\n  /**\n   * In email domain.\n   *\n   * The reference code is a bit overly complex as it handles the `@`, of which\n   * there may be just one.\n   * Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L318>\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomain(code) {\n    // Dot followed by alphanumerical (not `-` or `_`).\n    if (code === 46) {\n      return effects.check(\n        emailDomainDotTrail,\n        emailDomainAfter,\n        emailDomainDot\n      )(code)\n    }\n\n    // Alphanumerical, `-`, and `_`.\n    if (code === 45 || code === 95 || asciiAlphanumeric(code)) {\n      data = true\n      effects.consume(code)\n      return emailDomain\n    }\n\n    // To do: `/` if xmpp.\n\n    // Note: normally we’d truncate trailing punctuation from the link.\n    // However, email autolink literals cannot contain any of those markers,\n    // except for `.`, but that can only occur if it isn’t trailing.\n    // So we can ignore truncating!\n    return emailDomainAfter(code)\n  }\n\n  /**\n   * In email domain, on dot that is not a trail.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *                      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomainDot(code) {\n    effects.consume(code)\n    dot = true\n    return emailDomain\n  }\n\n  /**\n   * After email domain.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomainAfter(code) {\n    // Domain must not be empty, must include a dot, and must end in alphabetical.\n    // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L332>.\n    if (data && dot && asciiAlpha(self.previous)) {\n      effects.exit('literalAutolinkEmail')\n      effects.exit('literalAutolink')\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n\n/**\n * `www` autolink literal.\n *\n * ```markdown\n * > | a www.example.org b\n *       ^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeWwwAutolink(effects, ok, nok) {\n  const self = this\n  return wwwStart\n\n  /**\n   * Start of www autolink literal.\n   *\n   * ```markdown\n   * > | www.example.com/a?b#c\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwStart(code) {\n    if (\n      (code !== 87 && code !== 119) ||\n      !previousWww.call(self, self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkWww')\n    // Note: we *check*, so we can discard the `www.` we parsed.\n    // If it worked, we consider it as a part of the domain.\n    return effects.check(\n      wwwPrefix,\n      effects.attempt(domain, effects.attempt(path, wwwAfter), nok),\n      nok\n    )(code)\n  }\n\n  /**\n   * After a www autolink literal.\n   *\n   * ```markdown\n   * > | www.example.com/a?b#c\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwAfter(code) {\n    effects.exit('literalAutolinkWww')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n\n/**\n * Protocol autolink literal.\n *\n * ```markdown\n * > | a https://example.org b\n *       ^^^^^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeProtocolAutolink(effects, ok, nok) {\n  const self = this\n  let buffer = ''\n  let seen = false\n  return protocolStart\n\n  /**\n   * Start of protocol autolink literal.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolStart(code) {\n    if (\n      (code === 72 || code === 104) &&\n      previousProtocol.call(self, self.previous) &&\n      !previousUnbalanced(self.events)\n    ) {\n      effects.enter('literalAutolink')\n      effects.enter('literalAutolinkHttp')\n      buffer += String.fromCodePoint(code)\n      effects.consume(code)\n      return protocolPrefixInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * In protocol.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *     ^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolPrefixInside(code) {\n    // `5` is size of `https`\n    if (asciiAlpha(code) && buffer.length < 5) {\n      buffer += String.fromCodePoint(code)\n      effects.consume(code)\n      return protocolPrefixInside\n    }\n    if (code === 58) {\n      const protocol = buffer.toLowerCase()\n      if (protocol === 'http' || protocol === 'https') {\n        effects.consume(code)\n        return protocolSlashesInside\n      }\n    }\n    return nok(code)\n  }\n\n  /**\n   * In slashes.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *           ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolSlashesInside(code) {\n    if (code === 47) {\n      effects.consume(code)\n      if (seen) {\n        return afterProtocol\n      }\n      seen = true\n      return protocolSlashesInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * After protocol, before domain.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterProtocol(code) {\n    // To do: this is different from `markdown-rs`:\n    // https://github.com/wooorm/markdown-rs/blob/b3a921c761309ae00a51fe348d8a43adbc54b518/src/construct/gfm_autolink_literal.rs#L172-L182\n    return code === null ||\n      asciiControl(code) ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)\n      ? nok(code)\n      : effects.attempt(domain, effects.attempt(path, protocolAfter), nok)(code)\n  }\n\n  /**\n   * After a protocol autolink literal.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *                              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolAfter(code) {\n    effects.exit('literalAutolinkHttp')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n\n/**\n * `www` prefix.\n *\n * ```markdown\n * > | a www.example.org b\n *       ^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeWwwPrefix(effects, ok, nok) {\n  let size = 0\n  return wwwPrefixInside\n\n  /**\n   * In www prefix.\n   *\n   * ```markdown\n   * > | www.example.com\n   *     ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwPrefixInside(code) {\n    if ((code === 87 || code === 119) && size < 3) {\n      size++\n      effects.consume(code)\n      return wwwPrefixInside\n    }\n    if (code === 46 && size === 3) {\n      effects.consume(code)\n      return wwwPrefixAfter\n    }\n    return nok(code)\n  }\n\n  /**\n   * After www prefix.\n   *\n   * ```markdown\n   * > | www.example.com\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwPrefixAfter(code) {\n    // If there is *anything*, we can link.\n    return code === null ? nok(code) : ok(code)\n  }\n}\n\n/**\n * Domain.\n *\n * ```markdown\n * > | a https://example.org b\n *               ^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDomain(effects, ok, nok) {\n  /** @type {boolean | undefined} */\n  let underscoreInLastSegment\n  /** @type {boolean | undefined} */\n  let underscoreInLastLastSegment\n  /** @type {boolean | undefined} */\n  let seen\n  return domainInside\n\n  /**\n   * In domain.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *             ^^^^^^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function domainInside(code) {\n    // Check whether this marker, which is a trailing punctuation\n    // marker, optionally followed by more trailing markers, and then\n    // followed by an end.\n    if (code === 46 || code === 95) {\n      return effects.check(trail, domainAfter, domainAtPunctuation)(code)\n    }\n\n    // GH documents that only alphanumerics (other than `-`, `.`, and `_`) can\n    // occur, which sounds like ASCII only, but they also support `www.點看.com`,\n    // so that’s Unicode.\n    // Instead of some new production for Unicode alphanumerics, markdown\n    // already has that for Unicode punctuation and whitespace, so use those.\n    // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L12>.\n    if (\n      code === null ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code) ||\n      (code !== 45 && unicodePunctuation(code))\n    ) {\n      return domainAfter(code)\n    }\n    seen = true\n    effects.consume(code)\n    return domainInside\n  }\n\n  /**\n   * In domain, at potential trailing punctuation, that was not trailing.\n   *\n   * ```markdown\n   * > | https://example.com\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function domainAtPunctuation(code) {\n    // There is an underscore in the last segment of the domain\n    if (code === 95) {\n      underscoreInLastSegment = true\n    }\n    // Otherwise, it’s a `.`: save the last segment underscore in the\n    // penultimate segment slot.\n    else {\n      underscoreInLastLastSegment = underscoreInLastSegment\n      underscoreInLastSegment = undefined\n    }\n    effects.consume(code)\n    return domainInside\n  }\n\n  /**\n   * After domain.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *                        ^\n   * ```\n   *\n   * @type {State} */\n  function domainAfter(code) {\n    // Note: that’s GH says a dot is needed, but it’s not true:\n    // <https://github.com/github/cmark-gfm/issues/279>\n    if (underscoreInLastLastSegment || underscoreInLastSegment || !seen) {\n      return nok(code)\n    }\n    return ok(code)\n  }\n}\n\n/**\n * Path.\n *\n * ```markdown\n * > | a https://example.org/stuff b\n *                          ^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizePath(effects, ok) {\n  let sizeOpen = 0\n  let sizeClose = 0\n  return pathInside\n\n  /**\n   * In path.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *                        ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function pathInside(code) {\n    if (code === 40) {\n      sizeOpen++\n      effects.consume(code)\n      return pathInside\n    }\n\n    // To do: `markdown-rs` also needs this.\n    // If this is a paren, and there are less closings than openings,\n    // we don’t check for a trail.\n    if (code === 41 && sizeClose < sizeOpen) {\n      return pathAtPunctuation(code)\n    }\n\n    // Check whether this trailing punctuation marker is optionally\n    // followed by more trailing markers, and then followed\n    // by an end.\n    if (\n      code === 33 ||\n      code === 34 ||\n      code === 38 ||\n      code === 39 ||\n      code === 41 ||\n      code === 42 ||\n      code === 44 ||\n      code === 46 ||\n      code === 58 ||\n      code === 59 ||\n      code === 60 ||\n      code === 63 ||\n      code === 93 ||\n      code === 95 ||\n      code === 126\n    ) {\n      return effects.check(trail, ok, pathAtPunctuation)(code)\n    }\n    if (\n      code === null ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code)\n    ) {\n      return ok(code)\n    }\n    effects.consume(code)\n    return pathInside\n  }\n\n  /**\n   * In path, at potential trailing punctuation, that was not trailing.\n   *\n   * ```markdown\n   * > | https://example.com/a\"b\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function pathAtPunctuation(code) {\n    // Count closing parens.\n    if (code === 41) {\n      sizeClose++\n    }\n    effects.consume(code)\n    return pathInside\n  }\n}\n\n/**\n * Trail.\n *\n * This calls `ok` if this *is* the trail, followed by an end, which means\n * the entire trail is not part of the link.\n * It calls `nok` if this *is* part of the link.\n *\n * ```markdown\n * > | https://example.com\").\n *                        ^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTrail(effects, ok, nok) {\n  return trail\n\n  /**\n   * In trail of domain or path.\n   *\n   * ```markdown\n   * > | https://example.com\").\n   *                        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trail(code) {\n    // Regular trailing punctuation.\n    if (\n      code === 33 ||\n      code === 34 ||\n      code === 39 ||\n      code === 41 ||\n      code === 42 ||\n      code === 44 ||\n      code === 46 ||\n      code === 58 ||\n      code === 59 ||\n      code === 63 ||\n      code === 95 ||\n      code === 126\n    ) {\n      effects.consume(code)\n      return trail\n    }\n\n    // `&` followed by one or more alphabeticals and then a `;`, is\n    // as a whole considered as trailing punctuation.\n    // In all other cases, it is considered as continuation of the URL.\n    if (code === 38) {\n      effects.consume(code)\n      return trailCharRefStart\n    }\n\n    // Needed because we allow literals after `[`, as we fix:\n    // <https://github.com/github/cmark-gfm/issues/278>.\n    // Check that it is not followed by `(` or `[`.\n    if (code === 93) {\n      effects.consume(code)\n      return trailBracketAfter\n    }\n    if (\n      // `<` is an end.\n      code === 60 ||\n      // So is whitespace.\n      code === null ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code)\n    ) {\n      return ok(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In trail, after `]`.\n   *\n   * > 👉 **Note**: this deviates from `cmark-gfm` to fix a bug.\n   * > See end of <https://github.com/github/cmark-gfm/issues/278> for more.\n   *\n   * ```markdown\n   * > | https://example.com](\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailBracketAfter(code) {\n    // Whitespace or something that could start a resource or reference is the end.\n    // Switch back to trail otherwise.\n    if (\n      code === null ||\n      code === 40 ||\n      code === 91 ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code)\n    ) {\n      return ok(code)\n    }\n    return trail(code)\n  }\n\n  /**\n   * In character-reference like trail, after `&`.\n   *\n   * ```markdown\n   * > | https://example.com&amp;).\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailCharRefStart(code) {\n    // When non-alpha, it’s not a trail.\n    return asciiAlpha(code) ? trailCharRefInside(code) : nok(code)\n  }\n\n  /**\n   * In character-reference like trail.\n   *\n   * ```markdown\n   * > | https://example.com&amp;).\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailCharRefInside(code) {\n    // Switch back to trail if this is well-formed.\n    if (code === 59) {\n      effects.consume(code)\n      return trail\n    }\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return trailCharRefInside\n    }\n\n    // It’s not a trail.\n    return nok(code)\n  }\n}\n\n/**\n * Dot in email domain trail.\n *\n * This calls `ok` if this *is* the trail, followed by an end, which means\n * the trail is not part of the link.\n * It calls `nok` if this *is* part of the link.\n *\n * ```markdown\n * > | contact@example.org.\n *                        ^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeEmailDomainDotTrail(effects, ok, nok) {\n  return start\n\n  /**\n   * Dot.\n   *\n   * ```markdown\n   * > | contact@example.org.\n   *                    ^   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Must be dot.\n    effects.consume(code)\n    return after\n  }\n\n  /**\n   * After dot.\n   *\n   * ```markdown\n   * > | contact@example.org.\n   *                     ^   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Not a trail if alphanumeric.\n    return asciiAlphanumeric(code) ? nok(code) : ok(code)\n  }\n}\n\n/**\n * See:\n * <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L156>.\n *\n * @type {Previous}\n */\nfunction previousWww(code) {\n  return (\n    code === null ||\n    code === 40 ||\n    code === 42 ||\n    code === 95 ||\n    code === 91 ||\n    code === 93 ||\n    code === 126 ||\n    markdownLineEndingOrSpace(code)\n  )\n}\n\n/**\n * See:\n * <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L214>.\n *\n * @type {Previous}\n */\nfunction previousProtocol(code) {\n  return !asciiAlpha(code)\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Previous}\n */\nfunction previousEmail(code) {\n  // Do not allow a slash “inside” atext.\n  // The reference code is a bit weird, but that’s what it results in.\n  // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L307>.\n  // Other than slash, every preceding character is allowed.\n  return !(code === 47 || gfmAtext(code))\n}\n\n/**\n * @param {Code} code\n * @returns {boolean}\n */\nfunction gfmAtext(code) {\n  return (\n    code === 43 ||\n    code === 45 ||\n    code === 46 ||\n    code === 95 ||\n    asciiAlphanumeric(code)\n  )\n}\n\n/**\n * @param {Array<Event>} events\n * @returns {boolean}\n */\nfunction previousUnbalanced(events) {\n  let index = events.length\n  let result = false\n  while (index--) {\n    const token = events[index][1]\n    if (\n      (token.type === 'labelLink' || token.type === 'labelImage') &&\n      !token._balanced\n    ) {\n      result = true\n      break\n    }\n\n    // @ts-expect-error If we’ve seen this token, and it was marked as not\n    // having any unbalanced bracket before it, we can exit.\n    if (token._gfmAutolinkLiteralWalkedInto) {\n      result = false\n      break\n    }\n  }\n  if (events.length > 0 && !result) {\n    // @ts-expect-error Mark the last token as “walked into” w/o finding\n    // anything.\n    events[events.length - 1][1]._gfmAutolinkLiteralWalkedInto = true\n  }\n  return result\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {blankLine} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nconst indent = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n\n// To do: micromark should support a `_hiddenGfmFootnoteSupport`, which only\n// affects label start (image).\n// That will let us drop `tokenizePotentialGfmFootnote*`.\n// It currently has a `_hiddenFootnoteSupport`, which affects that and more.\n// That can be removed when `micromark-extension-footnote` is archived.\n\n/**\n * Create an extension for `micromark` to enable GFM footnote syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to\n *   enable GFM footnote syntax.\n */\nexport function gfmFootnote() {\n  /** @type {Extension} */\n  return {\n    document: {\n      [91]: {\n        tokenize: tokenizeDefinitionStart,\n        continuation: {\n          tokenize: tokenizeDefinitionContinuation\n        },\n        exit: gfmFootnoteDefinitionEnd\n      }\n    },\n    text: {\n      [91]: {\n        tokenize: tokenizeGfmFootnoteCall\n      },\n      [93]: {\n        add: 'after',\n        tokenize: tokenizePotentialGfmFootnoteCall,\n        resolveTo: resolveToPotentialGfmFootnoteCall\n      }\n    }\n  }\n}\n\n// To do: remove after micromark update.\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizePotentialGfmFootnoteCall(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Array<string>} */\n  // @ts-expect-error It’s fine!\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  /** @type {Token} */\n  let labelStart\n\n  // Find an opening.\n  while (index--) {\n    const token = self.events[index][1]\n    if (token.type === 'labelImage') {\n      labelStart = token\n      break\n    }\n\n    // Exit if we’ve walked far enough.\n    if (\n      token.type === 'gfmFootnoteCall' ||\n      token.type === 'labelLink' ||\n      token.type === 'label' ||\n      token.type === 'image' ||\n      token.type === 'link'\n    ) {\n      break\n    }\n  }\n  return start\n\n  /**\n   * @type {State}\n   */\n  function start(code) {\n    if (!labelStart || !labelStart._balanced) {\n      return nok(code)\n    }\n    const id = normalizeIdentifier(\n      self.sliceSerialize({\n        start: labelStart.end,\n        end: self.now()\n      })\n    )\n    if (id.codePointAt(0) !== 94 || !defined.includes(id.slice(1))) {\n      return nok(code)\n    }\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    return ok(code)\n  }\n}\n\n// To do: remove after micromark update.\n/** @type {Resolver} */\nfunction resolveToPotentialGfmFootnoteCall(events, context) {\n  let index = events.length\n  /** @type {Token | undefined} */\n  let labelStart\n\n  // Find an opening.\n  while (index--) {\n    if (\n      events[index][1].type === 'labelImage' &&\n      events[index][0] === 'enter'\n    ) {\n      labelStart = events[index][1]\n      break\n    }\n  }\n  // Change the `labelImageMarker` to a `data`.\n  events[index + 1][1].type = 'data'\n  events[index + 3][1].type = 'gfmFootnoteCallLabelMarker'\n\n  // The whole (without `!`):\n  const call = {\n    type: 'gfmFootnoteCall',\n    start: Object.assign({}, events[index + 3][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  // The `^` marker\n  const marker = {\n    type: 'gfmFootnoteCallMarker',\n    start: Object.assign({}, events[index + 3][1].end),\n    end: Object.assign({}, events[index + 3][1].end)\n  }\n  // Increment the end 1 character.\n  marker.end.column++\n  marker.end.offset++\n  marker.end._bufferIndex++\n  const string = {\n    type: 'gfmFootnoteCallString',\n    start: Object.assign({}, marker.end),\n    end: Object.assign({}, events[events.length - 1][1].start)\n  }\n  const chunk = {\n    type: 'chunkString',\n    contentType: 'string',\n    start: Object.assign({}, string.start),\n    end: Object.assign({}, string.end)\n  }\n\n  /** @type {Array<Event>} */\n  const replacement = [\n    // Take the `labelImageMarker` (now `data`, the `!`)\n    events[index + 1],\n    events[index + 2],\n    ['enter', call, context],\n    // The `[`\n    events[index + 3],\n    events[index + 4],\n    // The `^`.\n    ['enter', marker, context],\n    ['exit', marker, context],\n    // Everything in between.\n    ['enter', string, context],\n    ['enter', chunk, context],\n    ['exit', chunk, context],\n    ['exit', string, context],\n    // The ending (`]`, properly parsed and labelled).\n    events[events.length - 2],\n    events[events.length - 1],\n    ['exit', call, context]\n  ]\n  events.splice(index, events.length - index + 1, ...replacement)\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeGfmFootnoteCall(effects, ok, nok) {\n  const self = this\n  /** @type {Array<string>} */\n  // @ts-expect-error It’s fine!\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  let size = 0\n  /** @type {boolean} */\n  let data\n\n  // Note: the implementation of `markdown-rs` is different, because it houses\n  // core *and* extensions in one project.\n  // Therefore, it can include footnote logic inside `label-end`.\n  // We can’t do that, but luckily, we can parse footnotes in a simpler way than\n  // needed for labels.\n  return start\n\n  /**\n   * Start of footnote label.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('gfmFootnoteCall')\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    return callStart\n  }\n\n  /**\n   * After `[`, at `^`.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callStart(code) {\n    if (code !== 94) return nok(code)\n    effects.enter('gfmFootnoteCallMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallMarker')\n    effects.enter('gfmFootnoteCallString')\n    effects.enter('chunkString').contentType = 'string'\n    return callData\n  }\n\n  /**\n   * In label.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callData(code) {\n    if (\n      // Too long.\n      size > 999 ||\n      // Closing brace with nothing.\n      (code === 93 && !data) ||\n      // Space or tab is not supported by GFM for some reason.\n      // `\\n` and `[` not being supported makes sense.\n      code === null ||\n      code === 91 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return nok(code)\n    }\n    if (code === 93) {\n      effects.exit('chunkString')\n      const token = effects.exit('gfmFootnoteCallString')\n      if (!defined.includes(normalizeIdentifier(self.sliceSerialize(token)))) {\n        return nok(code)\n      }\n      effects.enter('gfmFootnoteCallLabelMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteCallLabelMarker')\n      effects.exit('gfmFootnoteCall')\n      return ok\n    }\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true\n    }\n    size++\n    effects.consume(code)\n    return code === 92 ? callEscape : callData\n  }\n\n  /**\n   * On character after escape.\n   *\n   * ```markdown\n   * > | a [^b\\c] d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return callData\n    }\n    return callData(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinitionStart(effects, ok, nok) {\n  const self = this\n  /** @type {Array<string>} */\n  // @ts-expect-error It’s fine!\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  /** @type {string} */\n  let identifier\n  let size = 0\n  /** @type {boolean | undefined} */\n  let data\n  return start\n\n  /**\n   * Start of GFM footnote definition.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('gfmFootnoteDefinition')._container = true\n    effects.enter('gfmFootnoteDefinitionLabel')\n    effects.enter('gfmFootnoteDefinitionLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteDefinitionLabelMarker')\n    return labelAtMarker\n  }\n\n  /**\n   * In label, at caret.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAtMarker(code) {\n    if (code === 94) {\n      effects.enter('gfmFootnoteDefinitionMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteDefinitionMarker')\n      effects.enter('gfmFootnoteDefinitionLabelString')\n      effects.enter('chunkString').contentType = 'string'\n      return labelInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * In label.\n   *\n   * > 👉 **Note**: `cmark-gfm` prevents whitespace from occurring in footnote\n   * > definition labels.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (\n      // Too long.\n      size > 999 ||\n      // Closing brace with nothing.\n      (code === 93 && !data) ||\n      // Space or tab is not supported by GFM for some reason.\n      // `\\n` and `[` not being supported makes sense.\n      code === null ||\n      code === 91 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return nok(code)\n    }\n    if (code === 93) {\n      effects.exit('chunkString')\n      const token = effects.exit('gfmFootnoteDefinitionLabelString')\n      identifier = normalizeIdentifier(self.sliceSerialize(token))\n      effects.enter('gfmFootnoteDefinitionLabelMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteDefinitionLabelMarker')\n      effects.exit('gfmFootnoteDefinitionLabel')\n      return labelAfter\n    }\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true\n    }\n    size++\n    effects.consume(code)\n    return code === 92 ? labelEscape : labelInside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * > 👉 **Note**: `cmark-gfm` currently does not support escaped brackets:\n   * > <https://github.com/github/cmark-gfm/issues/240>\n   *\n   * ```markdown\n   * > | [^a\\*b]: c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return labelInside\n    }\n    return labelInside(code)\n  }\n\n  /**\n   * After definition label.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker')\n      if (!defined.includes(identifier)) {\n        defined.push(identifier)\n      }\n\n      // Any whitespace after the marker is eaten, forming indented code\n      // is not possible.\n      // No space is also fine, just like a block quote marker.\n      return factorySpace(\n        effects,\n        whitespaceAfter,\n        'gfmFootnoteDefinitionWhitespace'\n      )\n    }\n    return nok(code)\n  }\n\n  /**\n   * After definition prefix.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function whitespaceAfter(code) {\n    // `markdown-rs` has a wrapping token for the prefix that is closed here.\n    return ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinitionContinuation(effects, ok, nok) {\n  /// Start of footnote definition continuation.\n  ///\n  /// ```markdown\n  ///   | [^a]: b\n  /// > |     c\n  ///     ^\n  /// ```\n  //\n  // Either a blank line, which is okay, or an indented thing.\n  return effects.check(blankLine, ok, effects.attempt(indent, ok, nok))\n}\n\n/** @type {Exiter} */\nfunction gfmFootnoteDefinitionEnd(effects) {\n  effects.exit('gfmFootnoteDefinition')\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'gfmFootnoteDefinitionIndent',\n    4 + 1\n  )\n\n  /**\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'gfmFootnoteDefinitionIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === 4\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean} [singleTilde=true]\n *   Whether to support strikethrough with a single tilde.\n *\n *   Single tildes work on github.com, but are technically prohibited by the\n *   GFM spec.\n */\n\nimport {splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/**\n * Create an extension for `micromark` to enable GFM strikethrough syntax.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions`, to\n *   enable GFM strikethrough syntax.\n */\nexport function gfmStrikethrough(options) {\n  const options_ = options || {}\n  let single = options_.singleTilde\n  const tokenizer = {\n    tokenize: tokenizeStrikethrough,\n    resolveAll: resolveAllStrikethrough\n  }\n  if (single === null || single === undefined) {\n    single = true\n  }\n  return {\n    text: {\n      [126]: tokenizer\n    },\n    insideSpan: {\n      null: [tokenizer]\n    },\n    attentionMarkers: {\n      null: [126]\n    }\n  }\n\n  /**\n   * Take events and resolve strikethrough.\n   *\n   * @type {Resolver}\n   */\n  function resolveAllStrikethrough(events, context) {\n    let index = -1\n\n    // Walk through all events.\n    while (++index < events.length) {\n      // Find a token that can close.\n      if (\n        events[index][0] === 'enter' &&\n        events[index][1].type === 'strikethroughSequenceTemporary' &&\n        events[index][1]._close\n      ) {\n        let open = index\n\n        // Now walk back to find an opener.\n        while (open--) {\n          // Find a token that can open the closer.\n          if (\n            events[open][0] === 'exit' &&\n            events[open][1].type === 'strikethroughSequenceTemporary' &&\n            events[open][1]._open &&\n            // If the sizes are the same:\n            events[index][1].end.offset - events[index][1].start.offset ===\n              events[open][1].end.offset - events[open][1].start.offset\n          ) {\n            events[index][1].type = 'strikethroughSequence'\n            events[open][1].type = 'strikethroughSequence'\n            const strikethrough = {\n              type: 'strikethrough',\n              start: Object.assign({}, events[open][1].start),\n              end: Object.assign({}, events[index][1].end)\n            }\n            const text = {\n              type: 'strikethroughText',\n              start: Object.assign({}, events[open][1].end),\n              end: Object.assign({}, events[index][1].start)\n            }\n\n            // Opening.\n            const nextEvents = [\n              ['enter', strikethrough, context],\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context],\n              ['enter', text, context]\n            ]\n            const insideSpan = context.parser.constructs.insideSpan.null\n            if (insideSpan) {\n              // Between.\n              splice(\n                nextEvents,\n                nextEvents.length,\n                0,\n                // @ts-expect-error: to do: update `mdast-util-types` to allow explicit `undefined`s.\n                resolveAll(insideSpan, events.slice(open + 1, index), context)\n              )\n            }\n\n            // Closing.\n            splice(nextEvents, nextEvents.length, 0, [\n              ['exit', text, context],\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context],\n              ['exit', strikethrough, context]\n            ])\n            splice(events, open - 1, index - open + 3, nextEvents)\n            index = open + nextEvents.length - 2\n            break\n          }\n        }\n      }\n    }\n    index = -1\n    while (++index < events.length) {\n      if (events[index][1].type === 'strikethroughSequenceTemporary') {\n        events[index][1].type = 'data'\n      }\n    }\n    return events\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeStrikethrough(effects, ok, nok) {\n    const previous = this.previous\n    const events = this.events\n    let size = 0\n    return start\n\n    /** @type {State} */\n    function start(code) {\n      if (\n        previous === 126 &&\n        events[events.length - 1][1].type !== 'characterEscape'\n      ) {\n        return nok(code)\n      }\n      effects.enter('strikethroughSequenceTemporary')\n      return more(code)\n    }\n\n    /** @type {State} */\n    function more(code) {\n      const before = classifyCharacter(previous)\n      if (code === 126) {\n        // If this is the third marker, exit.\n        if (size > 1) return nok(code)\n        effects.consume(code)\n        size++\n        return more\n      }\n      if (size < 2 && !single) return nok(code)\n      const token = effects.exit('strikethroughSequenceTemporary')\n      const after = classifyCharacter(code)\n      token._open = !after || (after === 2 && Boolean(before))\n      token._close = !before || (before === 2 && Boolean(after))\n      return ok(code)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n */\n\n/**\n * @typedef {'left'|'center'|'right'|'none'} Align\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n\n/** @type {Extension} */\nexport const gfmTable = {\n  flow: {\n    null: {\n      tokenize: tokenizeTable,\n      resolve: resolveTable\n    }\n  }\n}\nconst nextPrefixedOrBlank = {\n  tokenize: tokenizeNextPrefixedOrBlank,\n  partial: true\n}\n/** @type {Resolver} */\n\nfunction resolveTable(events, context) {\n  let index = -1\n  /** @type {boolean|undefined} */\n\n  let inHead\n  /** @type {boolean|undefined} */\n\n  let inDelimiterRow\n  /** @type {boolean|undefined} */\n\n  let inRow\n  /** @type {number|undefined} */\n\n  let contentStart\n  /** @type {number|undefined} */\n\n  let contentEnd\n  /** @type {number|undefined} */\n\n  let cellStart\n  /** @type {boolean|undefined} */\n\n  let seenCellInRow\n\n  while (++index < events.length) {\n    const token = events[index][1]\n\n    if (inRow) {\n      if (token.type === 'temporaryTableCellContent') {\n        contentStart = contentStart || index\n        contentEnd = index\n      }\n\n      if (\n        // Combine separate content parts into one.\n        (token.type === 'tableCellDivider' || token.type === 'tableRow') &&\n        contentEnd\n      ) {\n        const content = {\n          type: 'tableContent',\n          start: events[contentStart][1].start,\n          end: events[contentEnd][1].end\n        }\n        /** @type {Token} */\n\n        const text = {\n          type: 'chunkText',\n          start: content.start,\n          end: content.end,\n          // @ts-expect-error It’s fine.\n          contentType: 'text'\n        }\n        events.splice(\n          contentStart,\n          contentEnd - contentStart + 1,\n          ['enter', content, context],\n          ['enter', text, context],\n          ['exit', text, context],\n          ['exit', content, context]\n        )\n        index -= contentEnd - contentStart - 3\n        contentStart = undefined\n        contentEnd = undefined\n      }\n    }\n\n    if (\n      events[index][0] === 'exit' &&\n      cellStart !== undefined &&\n      cellStart + (seenCellInRow ? 0 : 1) < index &&\n      (token.type === 'tableCellDivider' ||\n        (token.type === 'tableRow' &&\n          (cellStart + 3 < index ||\n            events[cellStart][1].type !== 'whitespace')))\n    ) {\n      const cell = {\n        type: inDelimiterRow\n          ? 'tableDelimiter'\n          : inHead\n          ? 'tableHeader'\n          : 'tableData',\n        start: events[cellStart][1].start,\n        end: events[index][1].end\n      }\n      events.splice(index + (token.type === 'tableCellDivider' ? 1 : 0), 0, [\n        'exit',\n        cell,\n        context\n      ])\n      events.splice(cellStart, 0, ['enter', cell, context])\n      index += 2\n      cellStart = index + 1\n      seenCellInRow = true\n    }\n\n    if (token.type === 'tableRow') {\n      inRow = events[index][0] === 'enter'\n\n      if (inRow) {\n        cellStart = index + 1\n        seenCellInRow = false\n      }\n    }\n\n    if (token.type === 'tableDelimiterRow') {\n      inDelimiterRow = events[index][0] === 'enter'\n\n      if (inDelimiterRow) {\n        cellStart = index + 1\n        seenCellInRow = false\n      }\n    }\n\n    if (token.type === 'tableHead') {\n      inHead = events[index][0] === 'enter'\n    }\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTable(effects, ok, nok) {\n  const self = this\n  /** @type {Array<Align>} */\n\n  const align = []\n  let tableHeaderCount = 0\n  /** @type {boolean|undefined} */\n\n  let seenDelimiter\n  /** @type {boolean|undefined} */\n\n  let hasDash\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // @ts-expect-error Custom.\n    effects.enter('table')._align = align\n    effects.enter('tableHead')\n    effects.enter('tableRow') // If we start with a pipe, we open a cell marker.\n\n    if (code === 124) {\n      return cellDividerHead(code)\n    }\n\n    tableHeaderCount++\n    effects.enter('temporaryTableCellContent') // Can’t be space or eols at the start of a construct, so we’re in a cell.\n\n    return inCellContentHead(code)\n  }\n  /** @type {State} */\n\n  function cellDividerHead(code) {\n    effects.enter('tableCellDivider')\n    effects.consume(code)\n    effects.exit('tableCellDivider')\n    seenDelimiter = true\n    return cellBreakHead\n  }\n  /** @type {State} */\n\n  function cellBreakHead(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return atRowEndHead(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceHead\n    }\n\n    if (seenDelimiter) {\n      seenDelimiter = undefined\n      tableHeaderCount++\n    }\n\n    if (code === 124) {\n      return cellDividerHead(code)\n    } // Anything else is cell content.\n\n    effects.enter('temporaryTableCellContent')\n    return inCellContentHead(code)\n  }\n  /** @type {State} */\n\n  function inWhitespaceHead(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return inWhitespaceHead\n    }\n\n    effects.exit('whitespace')\n    return cellBreakHead(code)\n  }\n  /** @type {State} */\n\n  function inCellContentHead(code) {\n    // EOF, whitespace, pipe\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit('temporaryTableCellContent')\n      return cellBreakHead(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? inCellContentEscapeHead : inCellContentHead\n  }\n  /** @type {State} */\n\n  function inCellContentEscapeHead(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code)\n      return inCellContentHead\n    } // Anything else.\n\n    return inCellContentHead(code)\n  }\n  /** @type {State} */\n\n  function atRowEndHead(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    effects.exit('tableRow')\n    effects.exit('tableHead')\n    const originalInterrupt = self.interrupt\n    self.interrupt = true\n    return effects.attempt(\n      {\n        tokenize: tokenizeRowEnd,\n        partial: true\n      },\n      function (code) {\n        self.interrupt = originalInterrupt\n        effects.enter('tableDelimiterRow')\n        return atDelimiterRowBreak(code)\n      },\n      function (code) {\n        self.interrupt = originalInterrupt\n        return nok(code)\n      }\n    )(code)\n  }\n  /** @type {State} */\n\n  function atDelimiterRowBreak(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return rowEndDelimiter(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    }\n\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller')\n      effects.consume(code)\n      hasDash = true\n      align.push('none')\n      return inFillerDelimiter\n    }\n\n    if (code === 58) {\n      effects.enter('tableDelimiterAlignment')\n      effects.consume(code)\n      effects.exit('tableDelimiterAlignment')\n      align.push('left')\n      return afterLeftAlignment\n    } // If we start with a pipe, we open a cell marker.\n\n    if (code === 124) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return atDelimiterRowBreak\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function inWhitespaceDelimiter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    }\n\n    effects.exit('whitespace')\n    return atDelimiterRowBreak(code)\n  }\n  /** @type {State} */\n\n  function inFillerDelimiter(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return inFillerDelimiter\n    }\n\n    effects.exit('tableDelimiterFiller')\n\n    if (code === 58) {\n      effects.enter('tableDelimiterAlignment')\n      effects.consume(code)\n      effects.exit('tableDelimiterAlignment')\n      align[align.length - 1] =\n        align[align.length - 1] === 'left' ? 'center' : 'right'\n      return afterRightAlignment\n    }\n\n    return atDelimiterRowBreak(code)\n  }\n  /** @type {State} */\n\n  function afterLeftAlignment(code) {\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller')\n      effects.consume(code)\n      hasDash = true\n      return inFillerDelimiter\n    } // Anything else is not ok.\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function afterRightAlignment(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return rowEndDelimiter(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    } // `|`\n\n    if (code === 124) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return atDelimiterRowBreak\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function rowEndDelimiter(code) {\n    effects.exit('tableDelimiterRow') // Exit if there was no dash at all, or if the header cell count is not the\n    // delimiter cell count.\n\n    if (!hasDash || tableHeaderCount !== align.length) {\n      return nok(code)\n    }\n\n    if (code === null) {\n      return tableClose(code)\n    }\n\n    return effects.check(\n      nextPrefixedOrBlank,\n      tableClose,\n      effects.attempt(\n        {\n          tokenize: tokenizeRowEnd,\n          partial: true\n        },\n        factorySpace(effects, bodyStart, 'linePrefix', 4),\n        tableClose\n      )\n    )(code)\n  }\n  /** @type {State} */\n\n  function tableClose(code) {\n    effects.exit('table')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function bodyStart(code) {\n    effects.enter('tableBody')\n    return rowStartBody(code)\n  }\n  /** @type {State} */\n\n  function rowStartBody(code) {\n    effects.enter('tableRow') // If we start with a pipe, we open a cell marker.\n\n    if (code === 124) {\n      return cellDividerBody(code)\n    }\n\n    effects.enter('temporaryTableCellContent') // Can’t be space or eols at the start of a construct, so we’re in a cell.\n\n    return inCellContentBody(code)\n  }\n  /** @type {State} */\n\n  function cellDividerBody(code) {\n    effects.enter('tableCellDivider')\n    effects.consume(code)\n    effects.exit('tableCellDivider')\n    return cellBreakBody\n  }\n  /** @type {State} */\n\n  function cellBreakBody(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return atRowEndBody(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceBody\n    } // `|`\n\n    if (code === 124) {\n      return cellDividerBody(code)\n    } // Anything else is cell content.\n\n    effects.enter('temporaryTableCellContent')\n    return inCellContentBody(code)\n  }\n  /** @type {State} */\n\n  function inWhitespaceBody(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return inWhitespaceBody\n    }\n\n    effects.exit('whitespace')\n    return cellBreakBody(code)\n  }\n  /** @type {State} */\n\n  function inCellContentBody(code) {\n    // EOF, whitespace, pipe\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit('temporaryTableCellContent')\n      return cellBreakBody(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? inCellContentEscapeBody : inCellContentBody\n  }\n  /** @type {State} */\n\n  function inCellContentEscapeBody(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code)\n      return inCellContentBody\n    } // Anything else.\n\n    return inCellContentBody(code)\n  }\n  /** @type {State} */\n\n  function atRowEndBody(code) {\n    effects.exit('tableRow')\n\n    if (code === null) {\n      return tableBodyClose(code)\n    }\n\n    return effects.check(\n      nextPrefixedOrBlank,\n      tableBodyClose,\n      effects.attempt(\n        {\n          tokenize: tokenizeRowEnd,\n          partial: true\n        },\n        factorySpace(effects, rowStartBody, 'linePrefix', 4),\n        tableBodyClose\n      )\n    )(code)\n  }\n  /** @type {State} */\n\n  function tableBodyClose(code) {\n    effects.exit('tableBody')\n    return tableClose(code)\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeRowEnd(effects, ok, nok) {\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, prefixed, 'linePrefix')\n    }\n    /** @type {State} */\n\n    function prefixed(code) {\n      // Blank or interrupting line.\n      if (\n        self.parser.lazy[self.now().line] ||\n        code === null ||\n        markdownLineEnding(code)\n      ) {\n        return nok(code)\n      }\n\n      const tail = self.events[self.events.length - 1] // Indented code can interrupt delimiter and body rows.\n\n      if (\n        !self.parser.constructs.disable.null.includes('codeIndented') &&\n        tail &&\n        tail[1].type === 'linePrefix' &&\n        tail[2].sliceSerialize(tail[1], true).length >= 4\n      ) {\n        return nok(code)\n      }\n\n      self._gfmTableDynamicInterruptHack = true\n      return effects.check(\n        self.parser.constructs.flow,\n        function (code) {\n          self._gfmTableDynamicInterruptHack = false\n          return nok(code)\n        },\n        function (code) {\n          self._gfmTableDynamicInterruptHack = false\n          return ok(code)\n        }\n      )(code)\n    }\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNextPrefixedOrBlank(effects, ok, nok) {\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // This is a check, so we don’t care about tokens, but we open a bogus one\n    // so we’re valid.\n    effects.enter('check') // EOL.\n\n    effects.consume(code)\n    return whitespace\n  }\n  /** @type {State} */\n\n  function whitespace(code) {\n    if (code === -1 || code === 32) {\n      effects.consume(code)\n      size++\n      return size === 4 ? ok : whitespace\n    } // EOF or whitespace\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      return ok(code)\n    } // Anything else.\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEndingOrSpace,\n  markdownLineEnding,\n  markdownSpace\n} from 'micromark-util-character'\nconst tasklistCheck = {\n  tokenize: tokenizeTasklistCheck\n}\n\n// To do: next major: expose function to make extension.\n\n/**\n * Extension for `micromark` that can be passed in `extensions`, to\n * enable GFM task list items syntax.\n *\n * @type {Extension}\n */\nexport const gfmTaskListItem = {\n  text: {\n    [91]: tasklistCheck\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTasklistCheck(effects, ok, nok) {\n  const self = this\n  return open\n\n  /**\n   * At start of task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (\n      // Exit if there’s stuff before.\n      self.previous !== null ||\n      // Exit if not in the first content that is the first child of a list\n      // item.\n      !self._gfmTasklistFirstContentOfListItem\n    ) {\n      return nok(code)\n    }\n    effects.enter('taskListCheck')\n    effects.enter('taskListCheckMarker')\n    effects.consume(code)\n    effects.exit('taskListCheckMarker')\n    return inside\n  }\n\n  /**\n   * In task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // Currently we match how GH works in files.\n    // To match how GH works in comments, use `markdownSpace` (`[\\t ]`) instead\n    // of `markdownLineEndingOrSpace` (`[\\t\\n\\r ]`).\n    if (markdownLineEndingOrSpace(code)) {\n      effects.enter('taskListCheckValueUnchecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueUnchecked')\n      return close\n    }\n    if (code === 88 || code === 120) {\n      effects.enter('taskListCheckValueChecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueChecked')\n      return close\n    }\n    return nok(code)\n  }\n\n  /**\n   * At close of task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function close(code) {\n    if (code === 93) {\n      effects.enter('taskListCheckMarker')\n      effects.consume(code)\n      effects.exit('taskListCheckMarker')\n      effects.exit('taskListCheck')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * @type {State}\n   */\n  function after(code) {\n    // EOL in paragraph means there must be something else after it.\n    if (markdownLineEnding(code)) {\n      return ok(code)\n    }\n\n    // Space or tab?\n    // Check what comes after.\n    if (markdownSpace(code)) {\n      return effects.check(\n        {\n          tokenize: spaceThenNonSpace\n        },\n        ok,\n        nok\n      )(code)\n    }\n\n    // EOF, or non-whitespace, both wrong.\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction spaceThenNonSpace(effects, ok, nok) {\n  return factorySpace(effects, after, 'whitespace')\n\n  /**\n   * After whitespace, after task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // EOF means there was nothing, so bad.\n    // EOL means there’s content after it, so good.\n    // Impossible to have more spaces.\n    // Anything else is good.\n    return code === null ? nok(code) : ok(code)\n  }\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-from-markdown').Transform} FromMarkdownTransform\n *\n * @typedef {import('mdast-util-to-markdown').ConstructName} ConstructName\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n *\n * @typedef {import('mdast-util-find-and-replace').ReplaceFunction} ReplaceFunction\n * @typedef {import('mdast-util-find-and-replace').RegExpMatchObject} RegExpMatchObject\n */\n\nimport {ccount} from 'ccount'\nimport {findAndReplace} from 'mdast-util-find-and-replace'\nimport {unicodePunctuation, unicodeWhitespace} from 'micromark-util-character'\n\n/** @type {ConstructName} */\nconst inConstruct = 'phrasing'\n/** @type {Array<ConstructName>} */\nconst notInConstruct = ['autolink', 'link', 'image', 'label']\n\n// To do: next major: expose functions instead of extensions.\n\n/**\n * Extension for `mdast-util-from-markdown` to enable GFM autolink literals.\n *\n * @type {FromMarkdownExtension}\n */\nexport const gfmAutolinkLiteralFromMarkdown = {\n  transforms: [transformGfmAutolinkLiterals],\n  enter: {\n    literalAutolink: enterLiteralAutolink,\n    literalAutolinkEmail: enterLiteralAutolinkValue,\n    literalAutolinkHttp: enterLiteralAutolinkValue,\n    literalAutolinkWww: enterLiteralAutolinkValue\n  },\n  exit: {\n    literalAutolink: exitLiteralAutolink,\n    literalAutolinkEmail: exitLiteralAutolinkEmail,\n    literalAutolinkHttp: exitLiteralAutolinkHttp,\n    literalAutolinkWww: exitLiteralAutolinkWww\n  }\n}\n\n/**\n * Extension for `mdast-util-to-markdown` to enable GFM autolink literals.\n *\n * @type {ToMarkdownExtension}\n */\nexport const gfmAutolinkLiteralToMarkdown = {\n  unsafe: [\n    {\n      character: '@',\n      before: '[+\\\\-.\\\\w]',\n      after: '[\\\\-.\\\\w]',\n      inConstruct,\n      notInConstruct\n    },\n    {\n      character: '.',\n      before: '[Ww]',\n      after: '[\\\\-.\\\\w]',\n      inConstruct,\n      notInConstruct\n    },\n    {character: ':', before: '[ps]', after: '\\\\/', inConstruct, notInConstruct}\n  ]\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterLiteralAutolink(token) {\n  this.enter({type: 'link', title: null, url: '', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterLiteralAutolinkValue(token) {\n  this.config.enter.autolinkProtocol.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkHttp(token) {\n  this.config.exit.autolinkProtocol.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkWww(token) {\n  this.config.exit.data.call(this, token)\n  const node = /** @type {Link} */ (this.stack[this.stack.length - 1])\n  node.url = 'http://' + this.sliceSerialize(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkEmail(token) {\n  this.config.exit.autolinkEmail.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolink(token) {\n  this.exit(token)\n}\n\n/** @type {FromMarkdownTransform} */\nfunction transformGfmAutolinkLiterals(tree) {\n  findAndReplace(\n    tree,\n    [\n      [/(https?:\\/\\/|www(?=\\.))([-.\\w]+)([^ \\t\\r\\n]*)/gi, findUrl],\n      [/([-.\\w+]+)@([-\\w]+(?:\\.[-\\w]+)+)/g, findEmail]\n    ],\n    {ignore: ['link', 'linkReference']}\n  )\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} protocol\n * @param {string} domain\n * @param {string} path\n * @param {RegExpMatchObject} match\n * @returns {Link | Array<PhrasingContent> | false}\n */\n// eslint-disable-next-line max-params\nfunction findUrl(_, protocol, domain, path, match) {\n  let prefix = ''\n\n  // Not an expected previous character.\n  if (!previous(match)) {\n    return false\n  }\n\n  // Treat `www` as part of the domain.\n  if (/^w/i.test(protocol)) {\n    domain = protocol + domain\n    protocol = ''\n    prefix = 'http://'\n  }\n\n  if (!isCorrectDomain(domain)) {\n    return false\n  }\n\n  const parts = splitUrl(domain + path)\n\n  if (!parts[0]) return false\n\n  /** @type {Link} */\n  const result = {\n    type: 'link',\n    title: null,\n    url: prefix + protocol + parts[0],\n    children: [{type: 'text', value: protocol + parts[0]}]\n  }\n\n  if (parts[1]) {\n    return [result, {type: 'text', value: parts[1]}]\n  }\n\n  return result\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} atext\n * @param {string} label\n * @param {RegExpMatchObject} match\n * @returns {Link | false}\n */\nfunction findEmail(_, atext, label, match) {\n  if (\n    // Not an expected previous character.\n    !previous(match, true) ||\n    // Label ends in not allowed character.\n    /[-\\d_]$/.test(label)\n  ) {\n    return false\n  }\n\n  return {\n    type: 'link',\n    title: null,\n    url: 'mailto:' + atext + '@' + label,\n    children: [{type: 'text', value: atext + '@' + label}]\n  }\n}\n\n/**\n * @param {string} domain\n * @returns {boolean}\n */\nfunction isCorrectDomain(domain) {\n  const parts = domain.split('.')\n\n  if (\n    parts.length < 2 ||\n    (parts[parts.length - 1] &&\n      (/_/.test(parts[parts.length - 1]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 1]))) ||\n    (parts[parts.length - 2] &&\n      (/_/.test(parts[parts.length - 2]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 2])))\n  ) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * @param {string} url\n * @returns {[string, string | undefined]}\n */\nfunction splitUrl(url) {\n  const trailExec = /[!\"&'),.:;<>?\\]}]+$/.exec(url)\n\n  if (!trailExec) {\n    return [url, undefined]\n  }\n\n  url = url.slice(0, trailExec.index)\n\n  let trail = trailExec[0]\n  let closingParenIndex = trail.indexOf(')')\n  const openingParens = ccount(url, '(')\n  let closingParens = ccount(url, ')')\n\n  while (closingParenIndex !== -1 && openingParens > closingParens) {\n    url += trail.slice(0, closingParenIndex + 1)\n    trail = trail.slice(closingParenIndex + 1)\n    closingParenIndex = trail.indexOf(')')\n    closingParens++\n  }\n\n  return [url, trail]\n}\n\n/**\n * @param {RegExpMatchObject} match\n * @param {boolean | null | undefined} [email=false]\n * @returns {boolean}\n */\nfunction previous(match, email) {\n  const code = match.input.charCodeAt(match.index - 1)\n\n  return (\n    (match.index === 0 ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)) &&\n    (!email || code !== 47)\n  )\n}\n","/**\n * @typedef {import('../types.js').AssociationId} AssociationId\n */\n\nimport {decodeString} from 'micromark-util-decode-string'\n\n/**\n * Get an identifier from an association to match it to others.\n *\n * Associations are nodes that match to something else through an ID:\n * <https://github.com/syntax-tree/mdast#association>.\n *\n * The `label` of an association is the string value: character escapes and\n * references work, and casing is intact.\n * The `identifier` is used to match one association to another:\n * controversially, character escapes and references don’t work in this\n * matching: `&copy;` does not match `©`, and `\\+` does not match `+`.\n *\n * But casing is ignored (and whitespace) is trimmed and collapsed: ` A\\nb`\n * matches `a b`.\n * So, we do prefer the label when figuring out how we’re going to serialize:\n * it has whitespace, casing, and we can ignore most useless character\n * escapes and all character references.\n *\n * @type {AssociationId}\n */\nexport function association(node) {\n  if (node.label || !node.identifier) {\n    return node.label || ''\n  }\n\n  return decodeString(node.identifier)\n}\n","/**\n * @typedef {import('../types.js').Unsafe} Unsafe\n */\n\n/**\n * @param {Unsafe} pattern\n * @returns {RegExp}\n */\nexport function patternCompile(pattern) {\n  if (!pattern._compiled) {\n    const before =\n      (pattern.atBreak ? '[\\\\r\\\\n][\\\\t ]*' : '') +\n      (pattern.before ? '(?:' + pattern.before + ')' : '')\n\n    pattern._compiled = new RegExp(\n      (before ? '(' + before + ')' : '') +\n        (/[|\\\\{}()[\\]^$+*?.-]/.test(pattern.character) ? '\\\\' : '') +\n        pattern.character +\n        (pattern.after ? '(?:' + pattern.after + ')' : ''),\n      'g'\n    )\n  }\n\n  return pattern._compiled\n}\n","/**\n * @typedef {import('../types.js').Unsafe} Unsafe\n * @typedef {import('../types.js').ConstructName} ConstructName\n */\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe} pattern\n * @returns {boolean}\n */\nexport function patternInScope(stack, pattern) {\n  return (\n    listInScope(stack, pattern.inConstruct, true) &&\n    !listInScope(stack, pattern.notInConstruct, false)\n  )\n}\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe['inConstruct']} list\n * @param {boolean} none\n * @returns {boolean}\n */\nfunction listInScope(stack, list, none) {\n  if (typeof list === 'string') {\n    list = [list]\n  }\n\n  if (!list || list.length === 0) {\n    return none\n  }\n\n  let index = -1\n\n  while (++index < list.length) {\n    if (stack.includes(list[index])) {\n      return true\n    }\n  }\n\n  return false\n}\n","/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').SafeConfig} SafeConfig\n */\n\nimport {patternCompile} from './pattern-compile.js'\nimport {patternInScope} from './pattern-in-scope.js'\n\n/**\n * Make a string safe for embedding in markdown constructs.\n *\n * In markdown, almost all punctuation characters can, in certain cases,\n * result in something.\n * Whether they do is highly subjective to where they happen and in what\n * they happen.\n *\n * To solve this, `mdast-util-to-markdown` tracks:\n *\n * * Characters before and after something;\n * * What “constructs” we are in.\n *\n * This information is then used by this function to escape or encode\n * special characters.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {string | null | undefined} input\n *   Raw value to make safe.\n * @param {SafeConfig} config\n *   Configuration.\n * @returns {string}\n *   Serialized markdown safe for embedding.\n */\nexport function safe(state, input, config) {\n  const value = (config.before || '') + (input || '') + (config.after || '')\n  /** @type {Array<number>} */\n  const positions = []\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {Record<number, {before: boolean, after: boolean}>} */\n  const infos = {}\n  let index = -1\n\n  while (++index < state.unsafe.length) {\n    const pattern = state.unsafe[index]\n\n    if (!patternInScope(state.stack, pattern)) {\n      continue\n    }\n\n    const expression = patternCompile(pattern)\n    /** @type {RegExpExecArray | null} */\n    let match\n\n    while ((match = expression.exec(value))) {\n      const before = 'before' in pattern || Boolean(pattern.atBreak)\n      const after = 'after' in pattern\n      const position = match.index + (before ? match[1].length : 0)\n\n      if (positions.includes(position)) {\n        if (infos[position].before && !before) {\n          infos[position].before = false\n        }\n\n        if (infos[position].after && !after) {\n          infos[position].after = false\n        }\n      } else {\n        positions.push(position)\n        infos[position] = {before, after}\n      }\n    }\n  }\n\n  positions.sort(numerical)\n\n  let start = config.before ? config.before.length : 0\n  const end = value.length - (config.after ? config.after.length : 0)\n  index = -1\n\n  while (++index < positions.length) {\n    const position = positions[index]\n\n    // Character before or after matched:\n    if (position < start || position >= end) {\n      continue\n    }\n\n    // If this character is supposed to be escaped because it has a condition on\n    // the next character, and the next character is definitly being escaped,\n    // then skip this escape.\n    if (\n      (position + 1 < end &&\n        positions[index + 1] === position + 1 &&\n        infos[position].after &&\n        !infos[position + 1].before &&\n        !infos[position + 1].after) ||\n      (positions[index - 1] === position - 1 &&\n        infos[position].before &&\n        !infos[position - 1].before &&\n        !infos[position - 1].after)\n    ) {\n      continue\n    }\n\n    if (start !== position) {\n      // If we have to use a character reference, an ampersand would be more\n      // correct, but as backslashes only care about punctuation, either will\n      // do the trick\n      result.push(escapeBackslashes(value.slice(start, position), '\\\\'))\n    }\n\n    start = position\n\n    if (\n      /[!-/:-@[-`{-~]/.test(value.charAt(position)) &&\n      (!config.encode || !config.encode.includes(value.charAt(position)))\n    ) {\n      // Character escape.\n      result.push('\\\\')\n    } else {\n      // Character reference.\n      result.push(\n        '&#x' + value.charCodeAt(position).toString(16).toUpperCase() + ';'\n      )\n      start++\n    }\n  }\n\n  result.push(escapeBackslashes(value.slice(start, end), config.after))\n\n  return result.join('')\n}\n\n/**\n * @param {number} a\n * @param {number} b\n * @returns {number}\n */\nfunction numerical(a, b) {\n  return a - b\n}\n\n/**\n * @param {string} value\n * @param {string} after\n * @returns {string}\n */\nfunction escapeBackslashes(value, after) {\n  const expression = /\\\\(?=[!-/:-@[-`{-~])/g\n  /** @type {Array<number>} */\n  const positions = []\n  /** @type {Array<string>} */\n  const results = []\n  const whole = value + after\n  let index = -1\n  let start = 0\n  /** @type {RegExpExecArray | null} */\n  let match\n\n  while ((match = expression.exec(whole))) {\n    positions.push(match.index)\n  }\n\n  while (++index < positions.length) {\n    if (start !== positions[index]) {\n      results.push(value.slice(start, positions[index]))\n    }\n\n    results.push('\\\\')\n    start = positions[index]\n  }\n\n  results.push(value.slice(start))\n\n  return results.join('')\n}\n","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Map} Map\n */\n\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {association} from 'mdast-util-to-markdown/lib/util/association.js'\nimport {containerFlow} from 'mdast-util-to-markdown/lib/util/container-flow.js'\nimport {indentLines} from 'mdast-util-to-markdown/lib/util/indent-lines.js'\nimport {safe} from 'mdast-util-to-markdown/lib/util/safe.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\nfootnoteReference.peek = footnoteReferencePeek\n\n// To do: next major: rename `context` -> `state`, `safeOptions` to `info`, use\n// utilities on `state`.\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown`.\n */\nexport function gfmFootnoteFromMarkdown() {\n  return {\n    enter: {\n      gfmFootnoteDefinition: enterFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: enterFootnoteDefinitionLabelString,\n      gfmFootnoteCall: enterFootnoteCall,\n      gfmFootnoteCallString: enterFootnoteCallString\n    },\n    exit: {\n      gfmFootnoteDefinition: exitFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: exitFootnoteDefinitionLabelString,\n      gfmFootnoteCall: exitFootnoteCall,\n      gfmFootnoteCallString: exitFootnoteCallString\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown`.\n */\nexport function gfmFootnoteToMarkdown() {\n  return {\n    // This is on by default already.\n    unsafe: [{character: '[', inConstruct: ['phrasing', 'label', 'reference']}],\n    handlers: {footnoteDefinition, footnoteReference}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteDefinition(token) {\n  this.enter(\n    {type: 'footnoteDefinition', identifier: '', label: '', children: []},\n    token\n  )\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteDefinitionLabelString() {\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteDefinitionLabelString(token) {\n  const label = this.resume()\n  const node = /** @type {FootnoteDefinition} */ (\n    this.stack[this.stack.length - 1]\n  )\n  node.label = label\n  node.identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteDefinition(token) {\n  this.exit(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteCall(token) {\n  this.enter({type: 'footnoteReference', identifier: '', label: ''}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteCallString() {\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteCallString(token) {\n  const label = this.resume()\n  const node = /** @type {FootnoteDefinition} */ (\n    this.stack[this.stack.length - 1]\n  )\n  node.label = label\n  node.identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteCall(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {FootnoteReference} node\n */\nfunction footnoteReference(node, _, context, safeOptions) {\n  const tracker = track(safeOptions)\n  let value = tracker.move('[^')\n  const exit = context.enter('footnoteReference')\n  const subexit = context.enter('reference')\n  value += tracker.move(\n    safe(context, association(node), {\n      ...tracker.current(),\n      before: value,\n      after: ']'\n    })\n  )\n  subexit()\n  exit()\n  value += tracker.move(']')\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction footnoteReferencePeek() {\n  return '['\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {FootnoteDefinition} node\n */\nfunction footnoteDefinition(node, _, context, safeOptions) {\n  const tracker = track(safeOptions)\n  let value = tracker.move('[^')\n  const exit = context.enter('footnoteDefinition')\n  const subexit = context.enter('label')\n  value += tracker.move(\n    safe(context, association(node), {\n      ...tracker.current(),\n      before: value,\n      after: ']'\n    })\n  )\n  subexit()\n  value += tracker.move(\n    ']:' + (node.children && node.children.length > 0 ? ' ' : '')\n  )\n  tracker.shift(4)\n  value += tracker.move(\n    indentLines(containerFlow(node, context, tracker.current()), map)\n  )\n  exit()\n\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, index, blank) {\n  if (index === 0) {\n    return line\n  }\n\n  return (blank ? '' : '    ') + line\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').ConstructName} ConstructName\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\nimport {containerPhrasing} from 'mdast-util-to-markdown/lib/util/container-phrasing.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\n// To do: next major: expose functions.\n// To do: next major: use `state`, state utilities.\n\n/**\n * List of constructs that occur in phrasing (paragraphs, headings), but cannot\n * contain strikethrough.\n * So they sort of cancel each other out.\n * Note: could use a better name.\n *\n * Note: keep in sync with: <https://github.com/syntax-tree/mdast-util-to-markdown/blob/8ce8dbf/lib/unsafe.js#L14>\n *\n * @type {Array<ConstructName>}\n */\nconst constructsWithoutStrikethrough = [\n  'autolink',\n  'destinationLiteral',\n  'destinationRaw',\n  'reference',\n  'titleQuote',\n  'titleApostrophe'\n]\n\nhandleDelete.peek = peekDelete\n\n/**\n * Extension for `mdast-util-from-markdown` to enable GFM strikethrough.\n *\n * @type {FromMarkdownExtension}\n */\nexport const gfmStrikethroughFromMarkdown = {\n  canContainEols: ['delete'],\n  enter: {strikethrough: enterStrikethrough},\n  exit: {strikethrough: exitStrikethrough}\n}\n\n/**\n * Extension for `mdast-util-to-markdown` to enable GFM strikethrough.\n *\n * @type {ToMarkdownExtension}\n */\nexport const gfmStrikethroughToMarkdown = {\n  unsafe: [\n    {\n      character: '~',\n      inConstruct: 'phrasing',\n      notInConstruct: constructsWithoutStrikethrough\n    }\n  ],\n  handlers: {delete: handleDelete}\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterStrikethrough(token) {\n  this.enter({type: 'delete', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitStrikethrough(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {Delete} node\n */\nfunction handleDelete(node, _, context, safeOptions) {\n  const tracker = track(safeOptions)\n  const exit = context.enter('strikethrough')\n  let value = tracker.move('~~')\n  value += containerPhrasing(node, context, {\n    ...tracker.current(),\n    before: value,\n    after: '~'\n  })\n  value += tracker.move('~~')\n  exit()\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction peekDelete() {\n  return '~'\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n */\n\nimport {patternCompile} from '../util/pattern-compile.js'\n\ninlineCode.peek = inlineCodePeek\n\n/**\n * @param {InlineCode} node\n * @param {Parent | undefined} _\n * @param {State} state\n * @returns {string}\n */\nexport function inlineCode(node, _, state) {\n  let value = node.value || ''\n  let sequence = '`'\n  let index = -1\n\n  // If there is a single grave accent on its own in the code, use a fence of\n  // two.\n  // If there are two in a row, use one.\n  while (new RegExp('(^|[^`])' + sequence + '([^`]|$)').test(value)) {\n    sequence += '`'\n  }\n\n  // If this is not just spaces or eols (tabs don’t count), and either the\n  // first or last character are a space, eol, or tick, then pad with spaces.\n  if (\n    /[^ \\r\\n]/.test(value) &&\n    ((/^[ \\r\\n]/.test(value) && /[ \\r\\n]$/.test(value)) || /^`|`$/.test(value))\n  ) {\n    value = ' ' + value + ' '\n  }\n\n  // We have a potential problem: certain characters after eols could result in\n  // blocks being seen.\n  // For example, if someone injected the string `'\\n# b'`, then that would\n  // result in an ATX heading.\n  // We can’t escape characters in `inlineCode`, but because eols are\n  // transformed to spaces when going from markdown to HTML anyway, we can swap\n  // them out.\n  while (++index < state.unsafe.length) {\n    const pattern = state.unsafe[index]\n    const expression = patternCompile(pattern)\n    /** @type {RegExpExecArray | null} */\n    let match\n\n    // Only look for `atBreak`s.\n    // Btw: note that `atBreak` patterns will always start the regex at LF or\n    // CR.\n    if (!pattern.atBreak) continue\n\n    while ((match = expression.exec(value))) {\n      let position = match.index\n\n      // Support CRLF (patterns only look for one of the characters).\n      if (\n        value.charCodeAt(position) === 10 /* `\\n` */ &&\n        value.charCodeAt(position - 1) === 13 /* `\\r` */\n      ) {\n        position--\n      }\n\n      value = value.slice(0, position) + ' ' + value.slice(match.index + 1)\n    }\n  }\n\n  return sequence + value + sequence\n}\n\n/**\n * @returns {string}\n */\nfunction inlineCodePeek() {\n  return '`'\n}\n","/**\n * @typedef Options\n *   Configuration (optional).\n * @property {string|null|ReadonlyArray<string|null|undefined>} [align]\n *   One style for all columns, or styles for their respective columns.\n *   Each style is either `'l'` (left), `'r'` (right), or `'c'` (center).\n *   Other values are treated as `''`, which doesn’t place the colon in the\n *   alignment row but does align left.\n *   *Only the lowercased first character is used, so `Right` is fine.*\n * @property {boolean} [padding=true]\n *   Whether to add a space of padding between delimiters and cells.\n *\n *   When `true`, there is padding:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there is no padding:\n *\n *   ```markdown\n *   |Alpha|B    |\n *   |-----|-----|\n *   |C    |Delta|\n *   ```\n * @property {boolean} [delimiterStart=true]\n *   Whether to begin each row with the delimiter.\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are starting delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no starting delimiters:\n *\n *   ```markdown\n *   Alpha | B     |\n *   ----- | ----- |\n *   C     | Delta |\n *   ```\n * @property {boolean} [delimiterEnd=true]\n *   Whether to end each row with the delimiter.\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B\n *   | ----- | -----\n *   | C     | Delta\n *   ```\n * @property {boolean} [alignDelimiters=true]\n *   Whether to align the delimiters.\n *   By default, they are aligned:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   Pass `false` to make them staggered:\n *\n *   ```markdown\n *   | Alpha | B |\n *   | - | - |\n *   | C | Delta |\n *   ```\n * @property {(value: string) => number} [stringLength]\n *   Function to detect the length of table cell content.\n *   This is used when aligning the delimiters (`|`) between table cells.\n *   Full-width characters and emoji mess up delimiter alignment when viewing\n *   the markdown source.\n *   To fix this, you can pass this function, which receives the cell content\n *   and returns its “visible” size.\n *   Note that what is and isn’t visible depends on where the text is displayed.\n *\n *   Without such a function, the following:\n *\n *   ```js\n *   markdownTable([\n *     ['Alpha', 'Bravo'],\n *     ['中文', 'Charlie'],\n *     ['👩‍❤️‍👩', 'Delta']\n *   ])\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo |\n *   | - | - |\n *   | 中文 | Charlie |\n *   | 👩‍❤️‍👩 | Delta |\n *   ```\n *\n *   With [`string-width`](https://github.com/sindresorhus/string-width):\n *\n *   ```js\n *   import stringWidth from 'string-width'\n *\n *   markdownTable(\n *     [\n *       ['Alpha', 'Bravo'],\n *       ['中文', 'Charlie'],\n *       ['👩‍❤️‍👩', 'Delta']\n *     ],\n *     {stringLength: stringWidth}\n *   )\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo   |\n *   | ----- | ------- |\n *   | 中文  | Charlie |\n *   | 👩‍❤️‍👩    | Delta   |\n *   ```\n */\n\n/**\n * @typedef {Options} MarkdownTableOptions\n * @todo\n *   Remove next major.\n */\n\n/**\n * Generate a markdown ([GFM](https://docs.github.com/en/github/writing-on-github/working-with-advanced-formatting/organizing-information-with-tables)) table..\n *\n * @param {ReadonlyArray<ReadonlyArray<string|null|undefined>>} table\n *   Table data (matrix of strings).\n * @param {Options} [options]\n *   Configuration (optional).\n * @returns {string}\n */\nexport function markdownTable(table, options = {}) {\n  const align = (options.align || []).concat()\n  const stringLength = options.stringLength || defaultStringLength\n  /** @type {Array<number>} Character codes as symbols for alignment per column. */\n  const alignments = []\n  /** @type {Array<Array<string>>} Cells per row. */\n  const cellMatrix = []\n  /** @type {Array<Array<number>>} Sizes of each cell per row. */\n  const sizeMatrix = []\n  /** @type {Array<number>} */\n  const longestCellByColumn = []\n  let mostCellsPerRow = 0\n  let rowIndex = -1\n\n  // This is a superfluous loop if we don’t align delimiters, but otherwise we’d\n  // do superfluous work when aligning, so optimize for aligning.\n  while (++rowIndex < table.length) {\n    /** @type {Array<string>} */\n    const row = []\n    /** @type {Array<number>} */\n    const sizes = []\n    let columnIndex = -1\n\n    if (table[rowIndex].length > mostCellsPerRow) {\n      mostCellsPerRow = table[rowIndex].length\n    }\n\n    while (++columnIndex < table[rowIndex].length) {\n      const cell = serialize(table[rowIndex][columnIndex])\n\n      if (options.alignDelimiters !== false) {\n        const size = stringLength(cell)\n        sizes[columnIndex] = size\n\n        if (\n          longestCellByColumn[columnIndex] === undefined ||\n          size > longestCellByColumn[columnIndex]\n        ) {\n          longestCellByColumn[columnIndex] = size\n        }\n      }\n\n      row.push(cell)\n    }\n\n    cellMatrix[rowIndex] = row\n    sizeMatrix[rowIndex] = sizes\n  }\n\n  // Figure out which alignments to use.\n  let columnIndex = -1\n\n  if (typeof align === 'object' && 'length' in align) {\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = toAlignment(align[columnIndex])\n    }\n  } else {\n    const code = toAlignment(align)\n\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = code\n    }\n  }\n\n  // Inject the alignment row.\n  columnIndex = -1\n  /** @type {Array<string>} */\n  const row = []\n  /** @type {Array<number>} */\n  const sizes = []\n\n  while (++columnIndex < mostCellsPerRow) {\n    const code = alignments[columnIndex]\n    let before = ''\n    let after = ''\n\n    if (code === 99 /* `c` */) {\n      before = ':'\n      after = ':'\n    } else if (code === 108 /* `l` */) {\n      before = ':'\n    } else if (code === 114 /* `r` */) {\n      after = ':'\n    }\n\n    // There *must* be at least one hyphen-minus in each alignment cell.\n    let size =\n      options.alignDelimiters === false\n        ? 1\n        : Math.max(\n            1,\n            longestCellByColumn[columnIndex] - before.length - after.length\n          )\n\n    const cell = before + '-'.repeat(size) + after\n\n    if (options.alignDelimiters !== false) {\n      size = before.length + size + after.length\n\n      if (size > longestCellByColumn[columnIndex]) {\n        longestCellByColumn[columnIndex] = size\n      }\n\n      sizes[columnIndex] = size\n    }\n\n    row[columnIndex] = cell\n  }\n\n  // Inject the alignment row.\n  cellMatrix.splice(1, 0, row)\n  sizeMatrix.splice(1, 0, sizes)\n\n  rowIndex = -1\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (++rowIndex < cellMatrix.length) {\n    const row = cellMatrix[rowIndex]\n    const sizes = sizeMatrix[rowIndex]\n    columnIndex = -1\n    /** @type {Array<string>} */\n    const line = []\n\n    while (++columnIndex < mostCellsPerRow) {\n      const cell = row[columnIndex] || ''\n      let before = ''\n      let after = ''\n\n      if (options.alignDelimiters !== false) {\n        const size =\n          longestCellByColumn[columnIndex] - (sizes[columnIndex] || 0)\n        const code = alignments[columnIndex]\n\n        if (code === 114 /* `r` */) {\n          before = ' '.repeat(size)\n        } else if (code === 99 /* `c` */) {\n          if (size % 2) {\n            before = ' '.repeat(size / 2 + 0.5)\n            after = ' '.repeat(size / 2 - 0.5)\n          } else {\n            before = ' '.repeat(size / 2)\n            after = before\n          }\n        } else {\n          after = ' '.repeat(size)\n        }\n      }\n\n      if (options.delimiterStart !== false && !columnIndex) {\n        line.push('|')\n      }\n\n      if (\n        options.padding !== false &&\n        // Don’t add the opening space if we’re not aligning and the cell is\n        // empty: there will be a closing space.\n        !(options.alignDelimiters === false && cell === '') &&\n        (options.delimiterStart !== false || columnIndex)\n      ) {\n        line.push(' ')\n      }\n\n      if (options.alignDelimiters !== false) {\n        line.push(before)\n      }\n\n      line.push(cell)\n\n      if (options.alignDelimiters !== false) {\n        line.push(after)\n      }\n\n      if (options.padding !== false) {\n        line.push(' ')\n      }\n\n      if (\n        options.delimiterEnd !== false ||\n        columnIndex !== mostCellsPerRow - 1\n      ) {\n        line.push('|')\n      }\n    }\n\n    lines.push(\n      options.delimiterEnd === false\n        ? line.join('').replace(/ +$/, '')\n        : line.join('')\n    )\n  }\n\n  return lines.join('\\n')\n}\n\n/**\n * @param {string|null|undefined} [value]\n * @returns {string}\n */\nfunction serialize(value) {\n  return value === null || value === undefined ? '' : String(value)\n}\n\n/**\n * @param {string} value\n * @returns {number}\n */\nfunction defaultStringLength(value) {\n  return value.length\n}\n\n/**\n * @param {string|null|undefined} value\n * @returns {number}\n */\nfunction toAlignment(value) {\n  const code = typeof value === 'string' ? value.codePointAt(0) : 0\n\n  return code === 67 /* `C` */ || code === 99 /* `c` */\n    ? 99 /* `c` */\n    : code === 76 /* `L` */ || code === 108 /* `l` */\n    ? 108 /* `l` */\n    : code === 82 /* `R` */ || code === 114 /* `r` */\n    ? 114 /* `r` */\n    : 0\n}\n","/**\n * @typedef {import('mdast').Table} Table\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('mdast').InlineCode} InlineCode\n *\n * @typedef {import('markdown-table').MarkdownTableOptions} MarkdownTableOptions\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Context} ToMarkdownContext\n * @typedef {import('mdast-util-to-markdown').SafeOptions} SafeOptions\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [tableCellPadding=true]\n *   Whether to add a space of padding between delimiters and cells.\n * @property {boolean | null | undefined} [tablePipeAlign=true]\n *   Whether to align the delimiters.\n * @property {MarkdownTableOptions['stringLength'] | null | undefined} [stringLength]\n *   Function to detect the length of table cell content, used when aligning\n *   the delimiters between cells\n */\n\nimport {containerPhrasing} from 'mdast-util-to-markdown/lib/util/container-phrasing.js'\nimport {inlineCode} from 'mdast-util-to-markdown/lib/handle/inline-code.js'\nimport {markdownTable} from 'markdown-table'\n\n// To do: next major: use `state` and `state` utilities from `mdast-util-to-markdown`.\n// To do: next major: use `defaultHandlers.inlineCode`.\n// To do: next major: expose functions.\n\n/**\n * Extension for `mdast-util-from-markdown` to enable GFM tables.\n *\n * @type {FromMarkdownExtension}\n */\nexport const gfmTableFromMarkdown = {\n  enter: {\n    table: enterTable,\n    tableData: enterCell,\n    tableHeader: enterCell,\n    tableRow: enterRow\n  },\n  exit: {\n    codeText: exitCodeText,\n    table: exitTable,\n    tableData: exit,\n    tableHeader: exit,\n    tableRow: exit\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterTable(token) {\n  /** @type {Array<'left' | 'right' | 'center' | 'none'>} */\n  // @ts-expect-error: `align` is custom.\n  const align = token._align\n  this.enter(\n    {\n      type: 'table',\n      align: align.map((d) => (d === 'none' ? null : d)),\n      children: []\n    },\n    token\n  )\n  this.setData('inTable', true)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitTable(token) {\n  this.exit(token)\n  this.setData('inTable')\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterRow(token) {\n  this.enter({type: 'tableRow', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exit(token) {\n  this.exit(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterCell(token) {\n  this.enter({type: 'tableCell', children: []}, token)\n}\n\n// Overwrite the default code text data handler to unescape escaped pipes when\n// they are in tables.\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitCodeText(token) {\n  let value = this.resume()\n\n  if (this.getData('inTable')) {\n    value = value.replace(/\\\\([\\\\|])/g, replace)\n  }\n\n  const node = /** @type {InlineCode} */ (this.stack[this.stack.length - 1])\n  node.value = value\n  this.exit(token)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @returns {string}\n */\nfunction replace($0, $1) {\n  // Pipes work, backslashes don’t (but can’t escape pipes).\n  return $1 === '|' ? $1 : $0\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM tables in\n * markdown.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM tables.\n */\nexport function gfmTableToMarkdown(options) {\n  const settings = options || {}\n  const padding = settings.tableCellPadding\n  const alignDelimiters = settings.tablePipeAlign\n  const stringLength = settings.stringLength\n  const around = padding ? ' ' : '|'\n\n  return {\n    unsafe: [\n      {character: '\\r', inConstruct: 'tableCell'},\n      {character: '\\n', inConstruct: 'tableCell'},\n      // A pipe, when followed by a tab or space (padding), or a dash or colon\n      // (unpadded delimiter row), could result in a table.\n      {atBreak: true, character: '|', after: '[\\t :-]'},\n      // A pipe in a cell must be encoded.\n      {character: '|', inConstruct: 'tableCell'},\n      // A colon must be followed by a dash, in which case it could start a\n      // delimiter row.\n      {atBreak: true, character: ':', after: '-'},\n      // A delimiter row can also start with a dash, when followed by more\n      // dashes, a colon, or a pipe.\n      // This is a stricter version than the built in check for lists, thematic\n      // breaks, and setex heading underlines though:\n      // <https://github.com/syntax-tree/mdast-util-to-markdown/blob/51a2038/lib/unsafe.js#L57>\n      {atBreak: true, character: '-', after: '[:|-]'}\n    ],\n    handlers: {\n      table: handleTable,\n      tableRow: handleTableRow,\n      tableCell: handleTableCell,\n      inlineCode: inlineCodeWithTable\n    }\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {Table} node\n   */\n  function handleTable(node, _, context, safeOptions) {\n    return serializeData(\n      handleTableAsData(node, context, safeOptions),\n      node.align\n    )\n  }\n\n  /**\n   * This function isn’t really used normally, because we handle rows at the\n   * table level.\n   * But, if someone passes in a table row, this ensures we make somewhat sense.\n   *\n   * @type {ToMarkdownHandle}\n   * @param {TableRow} node\n   */\n  function handleTableRow(node, _, context, safeOptions) {\n    const row = handleTableRowAsData(node, context, safeOptions)\n    const value = serializeData([row])\n    // `markdown-table` will always add an align row\n    return value.slice(0, value.indexOf('\\n'))\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {TableCell} node\n   */\n  function handleTableCell(node, _, context, safeOptions) {\n    const exit = context.enter('tableCell')\n    const subexit = context.enter('phrasing')\n    const value = containerPhrasing(node, context, {\n      ...safeOptions,\n      before: around,\n      after: around\n    })\n    subexit()\n    exit()\n    return value\n  }\n\n  /**\n   * @param {Array<Array<string>>} matrix\n   * @param {Array<string | null | undefined> | null | undefined} [align]\n   */\n  function serializeData(matrix, align) {\n    return markdownTable(matrix, {\n      align,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      alignDelimiters,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      padding,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      stringLength\n    })\n  }\n\n  /**\n   * @param {Table} node\n   * @param {ToMarkdownContext} context\n   * @param {SafeOptions} safeOptions\n   */\n  function handleTableAsData(node, context, safeOptions) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<Array<string>>} */\n    const result = []\n    const subexit = context.enter('table')\n\n    while (++index < children.length) {\n      result[index] = handleTableRowAsData(\n        children[index],\n        context,\n        safeOptions\n      )\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @param {TableRow} node\n   * @param {ToMarkdownContext} context\n   * @param {SafeOptions} safeOptions\n   */\n  function handleTableRowAsData(node, context, safeOptions) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<string>} */\n    const result = []\n    const subexit = context.enter('tableRow')\n\n    while (++index < children.length) {\n      // Note: the positional info as used here is incorrect.\n      // Making it correct would be impossible due to aligning cells?\n      // And it would need copy/pasting `markdown-table` into this project.\n      result[index] = handleTableCell(\n        children[index],\n        node,\n        context,\n        safeOptions\n      )\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {InlineCode} node\n   */\n  function inlineCodeWithTable(node, parent, context) {\n    let value = inlineCode(node, parent, context)\n\n    if (context.stack.includes('tableCell')) {\n      value = value.replace(/\\|/g, '\\\\$&')\n    }\n\n    return value\n  }\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('../types.js').Map} Map\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Info} Info\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkListItemIndent} from '../util/check-list-item-indent.js'\n\n/**\n * @param {ListItem} node\n * @param {Parent | undefined} parent\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function listItem(node, parent, state, info) {\n  const listItemIndent = checkListItemIndent(state)\n  let bullet = state.bulletCurrent || checkBullet(state)\n\n  // Add the marker value for ordered lists.\n  if (parent && parent.type === 'list' && parent.ordered) {\n    bullet =\n      (typeof parent.start === 'number' && parent.start > -1\n        ? parent.start\n        : 1) +\n      (state.options.incrementListMarker === false\n        ? 0\n        : parent.children.indexOf(node)) +\n      bullet\n  }\n\n  let size = bullet.length + 1\n\n  if (\n    listItemIndent === 'tab' ||\n    (listItemIndent === 'mixed' &&\n      ((parent && parent.type === 'list' && parent.spread) || node.spread))\n  ) {\n    size = Math.ceil(size / 4) * 4\n  }\n\n  const tracker = state.createTracker(info)\n  tracker.move(bullet + ' '.repeat(size - bullet.length))\n  tracker.shift(size)\n  const exit = state.enter('listItem')\n  const value = state.indentLines(\n    state.containerFlow(node, tracker.current()),\n    map\n  )\n  exit()\n\n  return value\n\n  /** @type {Map} */\n  function map(line, index, blank) {\n    if (index) {\n      return (blank ? '' : ' '.repeat(size)) + line\n    }\n\n    return (blank ? bullet : bullet + ' '.repeat(size - bullet.length)) + line\n  }\n}\n","/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['listItemIndent'], null | undefined>}\n */\nexport function checkListItemIndent(state) {\n  const style = state.options.listItemIndent || 'tab'\n\n  // To do: remove in a major.\n  // @ts-expect-error: deprecated.\n  if (style === 1 || style === '1') {\n    return 'one'\n  }\n\n  if (style !== 'tab' && style !== 'one' && style !== 'mixed') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        style +\n        '` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`'\n    )\n  }\n\n  return style\n}\n","/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bullet'], null | undefined>}\n */\nexport function checkBullet(state) {\n  const marker = state.options.bullet || '*'\n\n  if (marker !== '*' && marker !== '+' && marker !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bullet`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\n/**\n * @typedef {Extract<Root | Content, Parent>} Parents\n */\n\nimport {listItem} from 'mdast-util-to-markdown/lib/handle/list-item.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\n// To do: next major: rename `context` -> `state`, `safeOptions` -> `info`, use\n// `track` from `state`.\n// To do: next major: replace exports with functions.\n// To do: next major: use `defaulthandlers.listItem`.\n\n/**\n * Extension for `mdast-util-from-markdown` to enable GFM task list items.\n *\n * @type {FromMarkdownExtension}\n */\nexport const gfmTaskListItemFromMarkdown = {\n  exit: {\n    taskListCheckValueChecked: exitCheck,\n    taskListCheckValueUnchecked: exitCheck,\n    paragraph: exitParagraphWithTaskListItem\n  }\n}\n\n/**\n * Extension for `mdast-util-to-markdown` to enable GFM task list items.\n *\n * @type {ToMarkdownExtension}\n */\nexport const gfmTaskListItemToMarkdown = {\n  unsafe: [{atBreak: true, character: '-', after: '[:|-]'}],\n  handlers: {listItem: listItemWithTaskListItem}\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitCheck(token) {\n  const node = /** @type {ListItem} */ (this.stack[this.stack.length - 2])\n  // We’re always in a paragraph, in a list item.\n  node.checked = token.type === 'taskListCheckValueChecked'\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitParagraphWithTaskListItem(token) {\n  const parent = /** @type {Parents} */ (this.stack[this.stack.length - 2])\n\n  if (\n    parent &&\n    parent.type === 'listItem' &&\n    typeof parent.checked === 'boolean'\n  ) {\n    const node = /** @type {Paragraph} */ (this.stack[this.stack.length - 1])\n    const head = node.children[0]\n\n    if (head && head.type === 'text') {\n      const siblings = parent.children\n      let index = -1\n      /** @type {Paragraph | undefined} */\n      let firstParaghraph\n\n      while (++index < siblings.length) {\n        const sibling = siblings[index]\n        if (sibling.type === 'paragraph') {\n          firstParaghraph = sibling\n          break\n        }\n      }\n\n      if (firstParaghraph === node) {\n        // Must start with a space or a tab.\n        head.value = head.value.slice(1)\n\n        if (head.value.length === 0) {\n          node.children.shift()\n        } else if (\n          node.position &&\n          head.position &&\n          typeof head.position.start.offset === 'number'\n        ) {\n          head.position.start.column++\n          head.position.start.offset++\n          node.position.start = Object.assign({}, head.position.start)\n        }\n      }\n    }\n  }\n\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {ListItem} node\n */\nfunction listItemWithTaskListItem(node, parent, context, safeOptions) {\n  const head = node.children[0]\n  const checkable =\n    typeof node.checked === 'boolean' && head && head.type === 'paragraph'\n  const checkbox = '[' + (node.checked ? 'x' : ' ') + '] '\n  const tracker = track(safeOptions)\n\n  if (checkable) {\n    tracker.move(checkbox)\n  }\n\n  let value = listItem(node, parent, context, {\n    ...safeOptions,\n    ...tracker.current()\n  })\n\n  if (checkable) {\n    value = value.replace(/^(?:[*+-]|\\d+\\.)([\\r\\n]| {1,3})/, check)\n  }\n\n  return value\n\n  /**\n   * @param {string} $0\n   * @returns {string}\n   */\n  function check($0) {\n    return $0 + checkbox\n  }\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('micromark-extension-gfm').Options & import('mdast-util-gfm').Options} Options\n */\n\nimport {gfm} from 'micromark-extension-gfm'\nimport {gfmFromMarkdown, gfmToMarkdown} from 'mdast-util-gfm'\n\n/**\n * Plugin to support GFM (autolink literals, footnotes, strikethrough, tables, tasklists).\n *\n * @type {import('unified').Plugin<[Options?]|void[], Root>}\n */\nexport default function remarkGfm(options = {}) {\n  const data = this.data()\n\n  add('micromarkExtensions', gfm(options))\n  add('fromMarkdownExtensions', gfmFromMarkdown())\n  add('toMarkdownExtensions', gfmToMarkdown(options))\n\n  /**\n   * @param {string} field\n   * @param {unknown} value\n   */\n  function add(field, value) {\n    const list = /** @type {unknown[]} */ (\n      // Other extensions\n      /* c8 ignore next 2 */\n      data[field] ? data[field] : (data[field] = [])\n    )\n\n    list.push(value)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n * @typedef {import('micromark-extension-gfm-strikethrough').Options} Options\n * @typedef {import('micromark-extension-gfm-footnote').HtmlOptions} HtmlOptions\n */\n\nimport {\n  combineExtensions,\n  combineHtmlExtensions\n} from 'micromark-util-combine-extensions'\nimport {\n  gfmAutolinkLiteral,\n  gfmAutolinkLiteralHtml\n} from 'micromark-extension-gfm-autolink-literal'\nimport {gfmFootnote, gfmFootnoteHtml} from 'micromark-extension-gfm-footnote'\nimport {\n  gfmStrikethrough,\n  gfmStrikethroughHtml\n} from 'micromark-extension-gfm-strikethrough'\nimport {gfmTable, gfmTableHtml} from 'micromark-extension-gfm-table'\nimport {gfmTagfilterHtml} from 'micromark-extension-gfm-tagfilter'\nimport {\n  gfmTaskListItem,\n  gfmTaskListItemHtml\n} from 'micromark-extension-gfm-task-list-item'\n\n/**\n * Support GFM or markdown on github.com.\n *\n * @param {Options} [options]\n * @returns {Extension}\n */\nexport function gfm(options) {\n  return combineExtensions([\n    gfmAutolinkLiteral,\n    gfmFootnote(),\n    gfmStrikethrough(options),\n    gfmTable,\n    gfmTaskListItem\n  ])\n}\n\n/**\n * Support to compile GFM to HTML.\n *\n * @param {HtmlOptions} [options]\n * @returns {HtmlExtension}\n */\nexport function gfmHtml(options) {\n  return combineHtmlExtensions([\n    gfmAutolinkLiteralHtml,\n    gfmFootnoteHtml(options),\n    gfmStrikethroughHtml,\n    gfmTableHtml,\n    gfmTagfilterHtml,\n    gfmTaskListItemHtml\n  ])\n}\n","/**\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n */\n\n/**\n * @typedef {import('mdast-util-gfm-table').Options} Options\n *   Configuration.\n */\n\nimport {\n  gfmAutolinkLiteralFromMarkdown,\n  gfmAutolinkLiteralToMarkdown\n} from 'mdast-util-gfm-autolink-literal'\nimport {\n  gfmFootnoteFromMarkdown,\n  gfmFootnoteToMarkdown\n} from 'mdast-util-gfm-footnote'\nimport {\n  gfmStrikethroughFromMarkdown,\n  gfmStrikethroughToMarkdown\n} from 'mdast-util-gfm-strikethrough'\nimport {gfmTableFromMarkdown, gfmTableToMarkdown} from 'mdast-util-gfm-table'\nimport {\n  gfmTaskListItemFromMarkdown,\n  gfmTaskListItemToMarkdown\n} from 'mdast-util-gfm-task-list-item'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM (autolink\n * literals, footnotes, strikethrough, tables, tasklists).\n *\n * @returns {Array<FromMarkdownExtension>}\n *   Extension for `mdast-util-from-markdown` to enable GFM (autolink literals,\n *   footnotes, strikethrough, tables, tasklists).\n */\nexport function gfmFromMarkdown() {\n  return [\n    gfmAutolinkLiteralFromMarkdown,\n    gfmFootnoteFromMarkdown(),\n    gfmStrikethroughFromMarkdown,\n    gfmTableFromMarkdown,\n    gfmTaskListItemFromMarkdown\n  ]\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM (autolink\n * literals, footnotes, strikethrough, tables, tasklists).\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM (autolink literals,\n *   footnotes, strikethrough, tables, tasklists).\n */\nexport function gfmToMarkdown(options) {\n  return {\n    extensions: [\n      gfmAutolinkLiteralToMarkdown,\n      gfmFootnoteToMarkdown(),\n      gfmStrikethroughToMarkdown,\n      gfmTableToMarkdown(options),\n      gfmTaskListItemToMarkdown\n    ]\n  }\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').StaticPhrasingContent} StaticPhrasingContent\n * @typedef {import('mdast-util-find-and-replace').ReplaceFunction} ReplaceFunction\n * @typedef {{input: string, index: number}} Match\n *\n * @callback DefaultBuildUrl\n * @param {BuildUrlValues} values\n * @returns {string}\n *\n * @callback BuildUrl\n * @param {BuildUrlValues} values\n *   Info on the link to build.\n * @param {DefaultBuildUrl} defaultBuildUrl\n *   Function that can be called to perform normal behavior.\n * @returns {string|false}\n *\n * @typedef {BuildUrlCommitValues|BuildUrlCompareValues|BuildUrlIssueValues|BuildUrlMentionValues} BuildUrlValues\n *\n * @typedef BuildUrlCommitValues\n *   Arguments for buildUrl functions for commit hash\n * @property {'commit'} type The type of special object\n * @property {string} user The owner of the repo\n * @property {string} project The project of the repo\n * @property {string} hash The commit hash value\n *\n * @typedef BuildUrlCompareValues\n *   Arguments for buildUrl functions for commit hash ranges\n * @property {'compare'} type The type of special object\n * @property {string} user The owner of the repo\n * @property {string} project The project of the repo\n * @property {string} base The SHA of the range start\n * @property {string} compare The SHA of the range end\n *\n * @typedef BuildUrlIssueValues\n *   Arguments for buildUrl functions for issues\n * @property {'issue'} type The type of special object\n * @property {string} user The owner of the repo\n * @property {string} project The project of the repo\n * @property {string} no The parsed issue number\n *\n * @typedef BuildUrlMentionValues\n *   Arguments for buildUrl functions for mentions\n * @property {'mention'} type The type of special object\n * @property {string} user The parsed user name\n *\n * @typedef RepositoryInfo\n *   The owner and project of the repo\n * @property {string} user The user/organization name\n * @property {string} project The project/repo name\n *\n * @typedef Options\n *   Configuration.\n * @property {string} [repository]\n *   Repository to link against.\n *   Detected from the `repository` field in `package.json` if not given.\n *   Should point to a GitHub repository.\n * @property {boolean} [mentionStrong=true]\n *   Wrap mentions in `strong`.\n *   This makes them render more like how GitHub styles them.\n *   But GitHub itself uses CSS instead of strong.\n * @property {BuildUrl} [buildUrl]\n *   Change how (and whether) things are linked.\n */\n\nimport {visit} from 'unist-util-visit'\nimport {toString} from 'mdast-util-to-string'\nimport {findAndReplace} from 'mdast-util-find-and-replace'\nimport {getRepoFromPackage} from './get-repo-from-package.js'\n\n// Previously, GitHub linked `@mention` and `@mentions` to their blog post about\n// mentions (<https://github.com/blog/821>).\n// Since June 2019, and possibly earlier, they stopped linking those references.\nconst denyMention = new Set(['mention', 'mentions'])\n\n// Denylist of SHAs that are also valid words.\n//\n// GitHub allows abbreviating SHAs up to 7 characters.\n// These cases are ignored in text because they might just be ment as normal\n// words.\n// If you’d like these to link to their SHAs, use more than 7 characters.\n//\n// Generated by:\n//\n// ```sh\n// egrep -i \"^[a-f0-9]{7,}$\" /usr/share/dict/words\n// ```\n//\n// Added a couple forms of 6 character words in GH-20:\n// <https://github.com/remarkjs/remark-github/issues/20>.\nconst denyHash = new Set([\n  'acceded',\n  'deedeed',\n  'defaced',\n  'effaced',\n  'fabaceae'\n])\n\n// Constants.\nconst minShaLength = 7\n\n// Username may only contain alphanumeric characters or single hyphens, and\n// cannot begin or end with a hyphen*.\n//\n// \\* That is: until <https://github.com/remarkjs/remark-github/issues/13>.\nconst userGroup = '[\\\\da-z][-\\\\da-z]{0,38}'\nconst projectGroup = '(?:\\\\.git[\\\\w-]|\\\\.(?!git)|[\\\\w-])+'\nconst repoGroup = '(' + userGroup + ')\\\\/(' + projectGroup + ')'\n\nconst linkRegex = new RegExp(\n  '^https?:\\\\/\\\\/github\\\\.com\\\\/' +\n    repoGroup +\n    '\\\\/(commit|compare|issues|pull)\\\\/([a-f\\\\d]+(?:\\\\.{3}[a-f\\\\d]+)?\\\\/?(?=[#?]|$))',\n  'i'\n)\n\nconst repoRegex = new RegExp(\n  '(?:^|/(?:repos/)?)' + repoGroup + '(?=\\\\.git|[\\\\/#@]|$)',\n  'i'\n)\n\nconst referenceRegex = new RegExp(\n  '(' +\n    userGroup +\n    ')(?:\\\\/(' +\n    projectGroup +\n    '))?(?:#([1-9]\\\\d*)|@([a-f\\\\d]{7,40}))',\n  'gi'\n)\n\nconst mentionRegex = new RegExp(\n  '@(' + userGroup + '(?:\\\\/' + userGroup + ')?)',\n  'gi'\n)\n\n/**\n * Plugin to autolink references like in GitHub issues, PRs, and comments.\n *\n * @type {import('unified').Plugin<[Options?]|void[], Root>}\n */\nexport default function remarkGithub(options = {}) {\n  return (tree, vfile) => {\n    const repository = options.repository || getRepoFromPackage(vfile.cwd)\n\n    // Parse the URL: See the tests for all possible kinds.\n    const repositoryMatch = repoRegex.exec(repository || '')\n\n    if (!repositoryMatch) {\n      throw new Error('Missing or invalid `repository` field in `options`')\n    }\n\n    /** @type {RepositoryInfo} */\n    const repositoryInfo = {\n      user: repositoryMatch[1],\n      project: repositoryMatch[2]\n    }\n\n    findAndReplace(\n      tree,\n      [\n        [referenceRegex, replaceReference],\n        [mentionRegex, replaceMention],\n        [/(?:#|\\bgh-)([1-9]\\d*)/gi, replaceIssue],\n        [/\\b([a-f\\d]{7,40})\\.{3}([a-f\\d]{7,40})\\b/gi, replaceHashRange],\n        [/\\b[a-f\\d]{7,40}\\b/gi, replaceHash]\n      ],\n      {ignore: ['link', 'linkReference']}\n    )\n\n    visit(tree, 'link', (node) => {\n      const link = parse(node)\n\n      if (!link) {\n        return\n      }\n\n      const comment = link.comment ? ' (comment)' : ''\n      /** @type {string} */\n      let base\n\n      if (\n        link.project !== repositoryInfo.project ||\n        // Compare page uses full `user/project` for forks.\n        (link.page === 'compare' && link.user !== repositoryInfo.user)\n      ) {\n        base = link.user + '/' + link.project\n      } else if (link.user === repositoryInfo.user) {\n        base = ''\n      } else {\n        base = link.user\n      }\n\n      /** @type {StaticPhrasingContent[]} */\n      const children = []\n\n      if (link.page === 'issues' || link.page === 'pull') {\n        base += '#'\n        children.push({\n          type: 'text',\n          value: base + link.reference + comment\n        })\n      } else {\n        if (base) {\n          children.push({type: 'text', value: base + '@'})\n        }\n\n        children.push({type: 'inlineCode', value: link.reference})\n\n        if (link.comment) {\n          children.push({type: 'text', value: comment})\n        }\n      }\n\n      node.children = children\n    })\n\n    /**\n     * @param {BuildUrlValues} values\n     * @returns {string|false}\n     */\n    function buildUrl(values) {\n      if (options.buildUrl) return options.buildUrl(values, defaultBuildUrl)\n      return defaultBuildUrl(values)\n    }\n\n    /**\n     * @type {ReplaceFunction}\n     * @param {string} value\n     * @param {string} username\n     * @param {Match} match\n     */\n    function replaceMention(value, username, match) {\n      if (\n        /[\\w`]/.test(match.input.charAt(match.index - 1)) ||\n        /[/\\w`]/.test(match.input.charAt(match.index + value.length)) ||\n        denyMention.has(username)\n      ) {\n        return false\n      }\n\n      const url = buildUrl({type: 'mention', user: username})\n\n      if (!url) return false\n\n      /** @type {StaticPhrasingContent} */\n      let node = {type: 'text', value}\n\n      if (options.mentionStrong !== false) {\n        node = {type: 'strong', children: [node]}\n      }\n\n      return {type: 'link', title: null, url, children: [node]}\n    }\n\n    /**\n     * @type {ReplaceFunction}\n     * @param {string} value\n     * @param {string} no\n     * @param {Match} match\n     */\n    function replaceIssue(value, no, match) {\n      if (\n        /\\w/.test(match.input.charAt(match.index - 1)) ||\n        /\\w/.test(match.input.charAt(match.index + value.length))\n      ) {\n        return false\n      }\n\n      const url = buildUrl({type: 'issue', ...repositoryInfo, no})\n\n      return url\n        ? {type: 'link', title: null, url, children: [{type: 'text', value}]}\n        : false\n    }\n\n    /**\n     * @type {ReplaceFunction}\n     * @param {string} value\n     * @param {string} a\n     * @param {string} b\n     * @param {Match} match\n     */\n    function replaceHashRange(value, a, b, match) {\n      if (\n        /[^\\t\\n\\r (@[{]/.test(match.input.charAt(match.index - 1)) ||\n        /\\w/.test(match.input.charAt(match.index + value.length)) ||\n        denyHash.has(value)\n      ) {\n        return false\n      }\n\n      const url = buildUrl({\n        type: 'compare',\n        ...repositoryInfo,\n        base: a,\n        compare: b\n      })\n\n      return url\n        ? {\n            type: 'link',\n            title: null,\n            url,\n            children: [{type: 'inlineCode', value: abbr(a) + '...' + abbr(b)}]\n          }\n        : false\n    }\n\n    /**\n     * @type {ReplaceFunction}\n     * @param {string} value\n     * @param {Match} match\n     */\n    function replaceHash(value, match) {\n      if (\n        /[^\\t\\n\\r (@[{.]/.test(match.input.charAt(match.index - 1)) ||\n        // For some weird reason GH does link two dots, but not one 🤷‍♂️\n        (match.input.charAt(match.index - 1) === '.' &&\n          match.input.charAt(match.index - 2) !== '.') ||\n        /\\w/.test(match.input.charAt(match.index + value.length)) ||\n        denyHash.has(value)\n      ) {\n        return false\n      }\n\n      const url = buildUrl({type: 'commit', ...repositoryInfo, hash: value})\n\n      return url\n        ? {\n            type: 'link',\n            title: null,\n            url,\n            children: [{type: 'inlineCode', value: abbr(value)}]\n          }\n        : false\n    }\n\n    /**\n     * @type {ReplaceFunction}\n     * @param {string} $0\n     * @param {string} user\n     * @param {string} specificProject\n     * @param {string} no\n     * @param {string} hash\n     * @param {Match} match\n     */\n    // eslint-disable-next-line max-params\n    function replaceReference($0, user, specificProject, no, hash, match) {\n      if (\n        /[^\\t\\n\\r (@[{]/.test(match.input.charAt(match.index - 1)) ||\n        /\\w/.test(match.input.charAt(match.index + $0.length))\n      ) {\n        return false\n      }\n\n      const project = specificProject || repositoryInfo.project\n      const url = no\n        ? buildUrl({type: 'issue', user, project, no})\n        : buildUrl({type: 'commit', user, project, hash})\n\n      if (!url) return false\n\n      /** @type {StaticPhrasingContent[]} */\n      const nodes = []\n      let value = ''\n\n      if (project !== repositoryInfo.project) {\n        value += user + '/' + project\n      } else if (user !== repositoryInfo.user) {\n        value += user\n      }\n\n      if (no) {\n        value += '#' + no\n      } else {\n        value += '@'\n        nodes.push({type: 'inlineCode', value: abbr(hash)})\n      }\n\n      nodes.unshift({type: 'text', value})\n\n      return {type: 'link', title: null, url, children: nodes}\n    }\n  }\n}\n\n/**\n * Abbreviate a SHA.\n *\n * @param {string} sha\n * @returns {string}\n */\nfunction abbr(sha) {\n  return sha.slice(0, minShaLength)\n}\n\n/**\n * Given a set of values based on the values type, returns link URL.\n *\n * @type {DefaultBuildUrl}\n */\nfunction defaultBuildUrl(values) {\n  const base = 'https://github.com'\n\n  if (values.type === 'mention') return [base, values.user].join('/')\n\n  const {project, user} = values\n\n  if (values.type === 'commit')\n    return [base, user, project, 'commit', values.hash].join('/')\n\n  if (values.type === 'issue')\n    return [base, user, project, 'issues', values.no].join('/')\n\n  // `values.type` is `'compare'`\n  return [\n    base,\n    user,\n    project,\n    'compare',\n    values.base + '...' + values.compare\n  ].join('/')\n}\n\n/**\n * Parse a link and determine whether it links to GitHub.\n *\n * @param {import('mdast').Link} node\n * @returns {{user: string, project: string, page: string, reference: string, comment: boolean}|undefined}\n */\nfunction parse(node) {\n  const url = node.url || ''\n  const match = linkRegex.exec(url)\n\n  if (\n    // Not a proper URL.\n    !match ||\n    // Looks like formatting.\n    node.children.length !== 1 ||\n    node.children[0].type !== 'text' ||\n    toString(node) !== url ||\n    // SHAs can be min 4, max 40 characters.\n    (match[3] === 'commit' && (match[4].length < 4 || match[4].length > 40)) ||\n    // SHAs can be min 4, max 40 characters.\n    (match[3] === 'compare' &&\n      !/^[a-f\\d]{4,40}\\.{3}[a-f\\d]{4,40}$/.test(match[4])) ||\n    // Issues / PRs are decimal only.\n    ((match[3] === 'issues' || match[3] === 'pull') &&\n      /[a-f]/i.test(match[4])) ||\n    // Projects can be at most 99 characters.\n    match[2].length >= 100\n  ) {\n    return\n  }\n\n  let reference = match[4]\n\n  if (match[3] === 'compare') {\n    const [base, compare] = reference.split('...')\n    reference = abbr(base) + '...' + abbr(compare)\n  } else {\n    reference = abbr(reference)\n  }\n\n  return {\n    user: match[1],\n    project: match[2],\n    page: match[3],\n    reference,\n    comment:\n      url.charAt(match[0].length) === '#' && match[0].length + 1 < url.length\n  }\n}\n","// This file was generated. Do not modify manually!\nvar astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 81, 2, 71, 10, 50, 3, 123, 2, 54, 14, 32, 10, 3, 1, 11, 3, 46, 10, 8, 0, 46, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 3, 0, 158, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 10, 1, 2, 0, 49, 6, 4, 4, 14, 9, 5351, 0, 7, 14, 13835, 9, 87, 9, 39, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 4706, 45, 3, 22, 543, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 101, 0, 161, 6, 10, 9, 357, 0, 62, 13, 499, 13, 983, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];\n\n// This file was generated. Do not modify manually!\nvar astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 13, 10, 2, 14, 2, 6, 2, 1, 2, 10, 2, 14, 2, 6, 2, 1, 68, 310, 10, 21, 11, 7, 25, 5, 2, 41, 2, 8, 70, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 43, 17, 47, 20, 28, 22, 13, 52, 58, 1, 3, 0, 14, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 20, 1, 64, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 38, 6, 186, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 19, 72, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 16, 0, 2, 12, 2, 33, 125, 0, 80, 921, 103, 110, 18, 195, 2637, 96, 16, 1071, 18, 5, 4026, 582, 8634, 568, 8, 30, 18, 78, 18, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8936, 3, 2, 6, 2, 1, 2, 290, 16, 0, 30, 2, 3, 0, 15, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 1845, 30, 7, 5, 262, 61, 147, 44, 11, 6, 17, 0, 322, 29, 19, 43, 485, 27, 757, 6, 2, 3, 2, 1, 2, 14, 2, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42719, 33, 4153, 7, 221, 3, 5761, 15, 7472, 3104, 541, 1507, 4938, 6, 4191];\n\n// This file was generated. Do not modify manually!\nvar nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u0898-\\u089f\\u08ca-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3c\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0cf3\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ece\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1715\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u180f-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf-\\u1ace\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\n\n// This file was generated. Do not modify manually!\nvar nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u0870-\\u0887\\u0889-\\u088e\\u08a0-\\u08c9\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c5d\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cdd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u1711\\u171f-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4c\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7ca\\ua7d0\\ua7d1\\ua7d3\\ua7d5-\\ua7d9\\ua7f2-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\n\n// These are a run-length and offset encoded representation of the\n\n// Reserved word lists for various dialects of the language\n\nvar reservedWords = {\n  3: \"abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile\",\n  5: \"class enum extends super const export import\",\n  6: \"enum\",\n  strict: \"implements interface let package private protected public static yield\",\n  strictBind: \"eval arguments\"\n};\n\n// And the keywords\n\nvar ecma5AndLessKeywords = \"break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this\";\n\nvar keywords$1 = {\n  5: ecma5AndLessKeywords,\n  \"5module\": ecma5AndLessKeywords + \" export import\",\n  6: ecma5AndLessKeywords + \" const class extends export import super\"\n};\n\nvar keywordRelationalOperator = /^in(stanceof)?$/;\n\n// ## Character categories\n\nvar nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nvar nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\n\n// This has a complexity linear to the value of the code. The\n// assumption is that looking up astral identifier characters is\n// rare.\nfunction isInAstralSet(code, set) {\n  var pos = 0x10000;\n  for (var i = 0; i < set.length; i += 2) {\n    pos += set[i];\n    if (pos > code) { return false }\n    pos += set[i + 1];\n    if (pos >= code) { return true }\n  }\n  return false\n}\n\n// Test whether a given character code starts an identifier.\n\nfunction isIdentifierStart(code, astral) {\n  if (code < 65) { return code === 36 }\n  if (code < 91) { return true }\n  if (code < 97) { return code === 95 }\n  if (code < 123) { return true }\n  if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code)) }\n  if (astral === false) { return false }\n  return isInAstralSet(code, astralIdentifierStartCodes)\n}\n\n// Test whether a given character is part of an identifier.\n\nfunction isIdentifierChar(code, astral) {\n  if (code < 48) { return code === 36 }\n  if (code < 58) { return true }\n  if (code < 65) { return false }\n  if (code < 91) { return true }\n  if (code < 97) { return code === 95 }\n  if (code < 123) { return true }\n  if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code)) }\n  if (astral === false) { return false }\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes)\n}\n\n// ## Token types\n\n// The assignment of fine-grained, information-carrying type objects\n// allows the tokenizer to store the information it has about a\n// token in a way that is very cheap for the parser to look up.\n\n// All token type variables start with an underscore, to make them\n// easy to recognize.\n\n// The `beforeExpr` property is used to disambiguate between regular\n// expressions and divisions. It is set on all token types that can\n// be followed by an expression (thus, a slash after them would be a\n// regular expression).\n//\n// The `startsExpr` property is used to check if the token ends a\n// `yield` expression. It is set on all token types that either can\n// directly start an expression (like a quotation mark) or can\n// continue an expression (like the body of a string).\n//\n// `isLoop` marks a keyword as starting a loop, which is important\n// to know when parsing a label, in order to allow or disallow\n// continue jumps to that label.\n\nvar TokenType = function TokenType(label, conf) {\n  if ( conf === void 0 ) conf = {};\n\n  this.label = label;\n  this.keyword = conf.keyword;\n  this.beforeExpr = !!conf.beforeExpr;\n  this.startsExpr = !!conf.startsExpr;\n  this.isLoop = !!conf.isLoop;\n  this.isAssign = !!conf.isAssign;\n  this.prefix = !!conf.prefix;\n  this.postfix = !!conf.postfix;\n  this.binop = conf.binop || null;\n  this.updateContext = null;\n};\n\nfunction binop(name, prec) {\n  return new TokenType(name, {beforeExpr: true, binop: prec})\n}\nvar beforeExpr = {beforeExpr: true}, startsExpr = {startsExpr: true};\n\n// Map keyword names to token types.\n\nvar keywords = {};\n\n// Succinct definitions of keyword token types\nfunction kw(name, options) {\n  if ( options === void 0 ) options = {};\n\n  options.keyword = name;\n  return keywords[name] = new TokenType(name, options)\n}\n\nvar types$1 = {\n  num: new TokenType(\"num\", startsExpr),\n  regexp: new TokenType(\"regexp\", startsExpr),\n  string: new TokenType(\"string\", startsExpr),\n  name: new TokenType(\"name\", startsExpr),\n  privateId: new TokenType(\"privateId\", startsExpr),\n  eof: new TokenType(\"eof\"),\n\n  // Punctuation token types.\n  bracketL: new TokenType(\"[\", {beforeExpr: true, startsExpr: true}),\n  bracketR: new TokenType(\"]\"),\n  braceL: new TokenType(\"{\", {beforeExpr: true, startsExpr: true}),\n  braceR: new TokenType(\"}\"),\n  parenL: new TokenType(\"(\", {beforeExpr: true, startsExpr: true}),\n  parenR: new TokenType(\")\"),\n  comma: new TokenType(\",\", beforeExpr),\n  semi: new TokenType(\";\", beforeExpr),\n  colon: new TokenType(\":\", beforeExpr),\n  dot: new TokenType(\".\"),\n  question: new TokenType(\"?\", beforeExpr),\n  questionDot: new TokenType(\"?.\"),\n  arrow: new TokenType(\"=>\", beforeExpr),\n  template: new TokenType(\"template\"),\n  invalidTemplate: new TokenType(\"invalidTemplate\"),\n  ellipsis: new TokenType(\"...\", beforeExpr),\n  backQuote: new TokenType(\"`\", startsExpr),\n  dollarBraceL: new TokenType(\"${\", {beforeExpr: true, startsExpr: true}),\n\n  // Operators. These carry several kinds of properties to help the\n  // parser use them properly (the presence of these properties is\n  // what categorizes them as operators).\n  //\n  // `binop`, when present, specifies that this operator is a binary\n  // operator, and will refer to its precedence.\n  //\n  // `prefix` and `postfix` mark the operator as a prefix or postfix\n  // unary operator.\n  //\n  // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as\n  // binary operators with a very low precedence, that should result\n  // in AssignmentExpression nodes.\n\n  eq: new TokenType(\"=\", {beforeExpr: true, isAssign: true}),\n  assign: new TokenType(\"_=\", {beforeExpr: true, isAssign: true}),\n  incDec: new TokenType(\"++/--\", {prefix: true, postfix: true, startsExpr: true}),\n  prefix: new TokenType(\"!/~\", {beforeExpr: true, prefix: true, startsExpr: true}),\n  logicalOR: binop(\"||\", 1),\n  logicalAND: binop(\"&&\", 2),\n  bitwiseOR: binop(\"|\", 3),\n  bitwiseXOR: binop(\"^\", 4),\n  bitwiseAND: binop(\"&\", 5),\n  equality: binop(\"==/!=/===/!==\", 6),\n  relational: binop(\"</>/<=/>=\", 7),\n  bitShift: binop(\"<</>>/>>>\", 8),\n  plusMin: new TokenType(\"+/-\", {beforeExpr: true, binop: 9, prefix: true, startsExpr: true}),\n  modulo: binop(\"%\", 10),\n  star: binop(\"*\", 10),\n  slash: binop(\"/\", 10),\n  starstar: new TokenType(\"**\", {beforeExpr: true}),\n  coalesce: binop(\"??\", 1),\n\n  // Keyword token types.\n  _break: kw(\"break\"),\n  _case: kw(\"case\", beforeExpr),\n  _catch: kw(\"catch\"),\n  _continue: kw(\"continue\"),\n  _debugger: kw(\"debugger\"),\n  _default: kw(\"default\", beforeExpr),\n  _do: kw(\"do\", {isLoop: true, beforeExpr: true}),\n  _else: kw(\"else\", beforeExpr),\n  _finally: kw(\"finally\"),\n  _for: kw(\"for\", {isLoop: true}),\n  _function: kw(\"function\", startsExpr),\n  _if: kw(\"if\"),\n  _return: kw(\"return\", beforeExpr),\n  _switch: kw(\"switch\"),\n  _throw: kw(\"throw\", beforeExpr),\n  _try: kw(\"try\"),\n  _var: kw(\"var\"),\n  _const: kw(\"const\"),\n  _while: kw(\"while\", {isLoop: true}),\n  _with: kw(\"with\"),\n  _new: kw(\"new\", {beforeExpr: true, startsExpr: true}),\n  _this: kw(\"this\", startsExpr),\n  _super: kw(\"super\", startsExpr),\n  _class: kw(\"class\", startsExpr),\n  _extends: kw(\"extends\", beforeExpr),\n  _export: kw(\"export\"),\n  _import: kw(\"import\", startsExpr),\n  _null: kw(\"null\", startsExpr),\n  _true: kw(\"true\", startsExpr),\n  _false: kw(\"false\", startsExpr),\n  _in: kw(\"in\", {beforeExpr: true, binop: 7}),\n  _instanceof: kw(\"instanceof\", {beforeExpr: true, binop: 7}),\n  _typeof: kw(\"typeof\", {beforeExpr: true, prefix: true, startsExpr: true}),\n  _void: kw(\"void\", {beforeExpr: true, prefix: true, startsExpr: true}),\n  _delete: kw(\"delete\", {beforeExpr: true, prefix: true, startsExpr: true})\n};\n\n// Matches a whole line break (where CRLF is considered a single\n// line break). Used to count lines.\n\nvar lineBreak = /\\r\\n?|\\n|\\u2028|\\u2029/;\nvar lineBreakG = new RegExp(lineBreak.source, \"g\");\n\nfunction isNewLine(code) {\n  return code === 10 || code === 13 || code === 0x2028 || code === 0x2029\n}\n\nfunction nextLineBreak(code, from, end) {\n  if ( end === void 0 ) end = code.length;\n\n  for (var i = from; i < end; i++) {\n    var next = code.charCodeAt(i);\n    if (isNewLine(next))\n      { return i < end - 1 && next === 13 && code.charCodeAt(i + 1) === 10 ? i + 2 : i + 1 }\n  }\n  return -1\n}\n\nvar nonASCIIwhitespace = /[\\u1680\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/;\n\nvar skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\n\nvar ref = Object.prototype;\nvar hasOwnProperty = ref.hasOwnProperty;\nvar toString = ref.toString;\n\nvar hasOwn = Object.hasOwn || (function (obj, propName) { return (\n  hasOwnProperty.call(obj, propName)\n); });\n\nvar isArray = Array.isArray || (function (obj) { return (\n  toString.call(obj) === \"[object Array]\"\n); });\n\nfunction wordsRegexp(words) {\n  return new RegExp(\"^(?:\" + words.replace(/ /g, \"|\") + \")$\")\n}\n\nfunction codePointToString(code) {\n  // UTF-16 Decoding\n  if (code <= 0xFFFF) { return String.fromCharCode(code) }\n  code -= 0x10000;\n  return String.fromCharCode((code >> 10) + 0xD800, (code & 1023) + 0xDC00)\n}\n\nvar loneSurrogate = /(?:[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])/;\n\n// These are used when `options.locations` is on, for the\n// `startLoc` and `endLoc` properties.\n\nvar Position = function Position(line, col) {\n  this.line = line;\n  this.column = col;\n};\n\nPosition.prototype.offset = function offset (n) {\n  return new Position(this.line, this.column + n)\n};\n\nvar SourceLocation = function SourceLocation(p, start, end) {\n  this.start = start;\n  this.end = end;\n  if (p.sourceFile !== null) { this.source = p.sourceFile; }\n};\n\n// The `getLineInfo` function is mostly useful when the\n// `locations` option is off (for performance reasons) and you\n// want to find the line/column position for a given character\n// offset. `input` should be the code string that the offset refers\n// into.\n\nfunction getLineInfo(input, offset) {\n  for (var line = 1, cur = 0;;) {\n    var nextBreak = nextLineBreak(input, cur, offset);\n    if (nextBreak < 0) { return new Position(line, offset - cur) }\n    ++line;\n    cur = nextBreak;\n  }\n}\n\n// A second argument must be given to configure the parser process.\n// These options are recognized (only `ecmaVersion` is required):\n\nvar defaultOptions = {\n  // `ecmaVersion` indicates the ECMAScript version to parse. Must be\n  // either 3, 5, 6 (or 2015), 7 (2016), 8 (2017), 9 (2018), 10\n  // (2019), 11 (2020), 12 (2021), 13 (2022), 14 (2023), or `\"latest\"`\n  // (the latest version the library supports). This influences\n  // support for strict mode, the set of reserved words, and support\n  // for new syntax features.\n  ecmaVersion: null,\n  // `sourceType` indicates the mode the code should be parsed in.\n  // Can be either `\"script\"` or `\"module\"`. This influences global\n  // strict mode and parsing of `import` and `export` declarations.\n  sourceType: \"script\",\n  // `onInsertedSemicolon` can be a callback that will be called\n  // when a semicolon is automatically inserted. It will be passed\n  // the position of the comma as an offset, and if `locations` is\n  // enabled, it is given the location as a `{line, column}` object\n  // as second argument.\n  onInsertedSemicolon: null,\n  // `onTrailingComma` is similar to `onInsertedSemicolon`, but for\n  // trailing commas.\n  onTrailingComma: null,\n  // By default, reserved words are only enforced if ecmaVersion >= 5.\n  // Set `allowReserved` to a boolean value to explicitly turn this on\n  // an off. When this option has the value \"never\", reserved words\n  // and keywords can also not be used as property names.\n  allowReserved: null,\n  // When enabled, a return at the top level is not considered an\n  // error.\n  allowReturnOutsideFunction: false,\n  // When enabled, import/export statements are not constrained to\n  // appearing at the top of the program, and an import.meta expression\n  // in a script isn't considered an error.\n  allowImportExportEverywhere: false,\n  // By default, await identifiers are allowed to appear at the top-level scope only if ecmaVersion >= 2022.\n  // When enabled, await identifiers are allowed to appear at the top-level scope,\n  // but they are still not allowed in non-async functions.\n  allowAwaitOutsideFunction: null,\n  // When enabled, super identifiers are not constrained to\n  // appearing in methods and do not raise an error when they appear elsewhere.\n  allowSuperOutsideMethod: null,\n  // When enabled, hashbang directive in the beginning of file is\n  // allowed and treated as a line comment. Enabled by default when\n  // `ecmaVersion` >= 2023.\n  allowHashBang: false,\n  // When `locations` is on, `loc` properties holding objects with\n  // `start` and `end` properties in `{line, column}` form (with\n  // line being 1-based and column 0-based) will be attached to the\n  // nodes.\n  locations: false,\n  // A function can be passed as `onToken` option, which will\n  // cause Acorn to call that function with object in the same\n  // format as tokens returned from `tokenizer().getToken()`. Note\n  // that you are not allowed to call the parser from the\n  // callback—that will corrupt its internal state.\n  onToken: null,\n  // A function can be passed as `onComment` option, which will\n  // cause Acorn to call that function with `(block, text, start,\n  // end)` parameters whenever a comment is skipped. `block` is a\n  // boolean indicating whether this is a block (`/* */`) comment,\n  // `text` is the content of the comment, and `start` and `end` are\n  // character offsets that denote the start and end of the comment.\n  // When the `locations` option is on, two more parameters are\n  // passed, the full `{line, column}` locations of the start and\n  // end of the comments. Note that you are not allowed to call the\n  // parser from the callback—that will corrupt its internal state.\n  onComment: null,\n  // Nodes have their start and end characters offsets recorded in\n  // `start` and `end` properties (directly on the node, rather than\n  // the `loc` object, which holds line/column data. To also add a\n  // [semi-standardized][range] `range` property holding a `[start,\n  // end]` array with the same numbers, set the `ranges` option to\n  // `true`.\n  //\n  // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678\n  ranges: false,\n  // It is possible to parse multiple files into a single AST by\n  // passing the tree produced by parsing the first file as\n  // `program` option in subsequent parses. This will add the\n  // toplevel forms of the parsed file to the `Program` (top) node\n  // of an existing parse tree.\n  program: null,\n  // When `locations` is on, you can pass this to record the source\n  // file in every node's `loc` object.\n  sourceFile: null,\n  // This value, if given, is stored in every node, whether\n  // `locations` is on or off.\n  directSourceFile: null,\n  // When enabled, parenthesized expressions are represented by\n  // (non-standard) ParenthesizedExpression nodes\n  preserveParens: false\n};\n\n// Interpret and default an options object\n\nvar warnedAboutEcmaVersion = false;\n\nfunction getOptions(opts) {\n  var options = {};\n\n  for (var opt in defaultOptions)\n    { options[opt] = opts && hasOwn(opts, opt) ? opts[opt] : defaultOptions[opt]; }\n\n  if (options.ecmaVersion === \"latest\") {\n    options.ecmaVersion = 1e8;\n  } else if (options.ecmaVersion == null) {\n    if (!warnedAboutEcmaVersion && typeof console === \"object\" && console.warn) {\n      warnedAboutEcmaVersion = true;\n      console.warn(\"Since Acorn 8.0.0, options.ecmaVersion is required.\\nDefaulting to 2020, but this will stop working in the future.\");\n    }\n    options.ecmaVersion = 11;\n  } else if (options.ecmaVersion >= 2015) {\n    options.ecmaVersion -= 2009;\n  }\n\n  if (options.allowReserved == null)\n    { options.allowReserved = options.ecmaVersion < 5; }\n\n  if (!opts || opts.allowHashBang == null)\n    { options.allowHashBang = options.ecmaVersion >= 14; }\n\n  if (isArray(options.onToken)) {\n    var tokens = options.onToken;\n    options.onToken = function (token) { return tokens.push(token); };\n  }\n  if (isArray(options.onComment))\n    { options.onComment = pushComment(options, options.onComment); }\n\n  return options\n}\n\nfunction pushComment(options, array) {\n  return function(block, text, start, end, startLoc, endLoc) {\n    var comment = {\n      type: block ? \"Block\" : \"Line\",\n      value: text,\n      start: start,\n      end: end\n    };\n    if (options.locations)\n      { comment.loc = new SourceLocation(this, startLoc, endLoc); }\n    if (options.ranges)\n      { comment.range = [start, end]; }\n    array.push(comment);\n  }\n}\n\n// Each scope gets a bitset that may contain these flags\nvar\n    SCOPE_TOP = 1,\n    SCOPE_FUNCTION = 2,\n    SCOPE_ASYNC = 4,\n    SCOPE_GENERATOR = 8,\n    SCOPE_ARROW = 16,\n    SCOPE_SIMPLE_CATCH = 32,\n    SCOPE_SUPER = 64,\n    SCOPE_DIRECT_SUPER = 128,\n    SCOPE_CLASS_STATIC_BLOCK = 256,\n    SCOPE_VAR = SCOPE_TOP | SCOPE_FUNCTION | SCOPE_CLASS_STATIC_BLOCK;\n\nfunction functionFlags(async, generator) {\n  return SCOPE_FUNCTION | (async ? SCOPE_ASYNC : 0) | (generator ? SCOPE_GENERATOR : 0)\n}\n\n// Used in checkLVal* and declareName to determine the type of a binding\nvar\n    BIND_NONE = 0, // Not a binding\n    BIND_VAR = 1, // Var-style binding\n    BIND_LEXICAL = 2, // Let- or const-style binding\n    BIND_FUNCTION = 3, // Function declaration\n    BIND_SIMPLE_CATCH = 4, // Simple (identifier pattern) catch binding\n    BIND_OUTSIDE = 5; // Special case for function names as bound inside the function\n\nvar Parser = function Parser(options, input, startPos) {\n  this.options = options = getOptions(options);\n  this.sourceFile = options.sourceFile;\n  this.keywords = wordsRegexp(keywords$1[options.ecmaVersion >= 6 ? 6 : options.sourceType === \"module\" ? \"5module\" : 5]);\n  var reserved = \"\";\n  if (options.allowReserved !== true) {\n    reserved = reservedWords[options.ecmaVersion >= 6 ? 6 : options.ecmaVersion === 5 ? 5 : 3];\n    if (options.sourceType === \"module\") { reserved += \" await\"; }\n  }\n  this.reservedWords = wordsRegexp(reserved);\n  var reservedStrict = (reserved ? reserved + \" \" : \"\") + reservedWords.strict;\n  this.reservedWordsStrict = wordsRegexp(reservedStrict);\n  this.reservedWordsStrictBind = wordsRegexp(reservedStrict + \" \" + reservedWords.strictBind);\n  this.input = String(input);\n\n  // Used to signal to callers of `readWord1` whether the word\n  // contained any escape sequences. This is needed because words with\n  // escape sequences must not be interpreted as keywords.\n  this.containsEsc = false;\n\n  // Set up token state\n\n  // The current position of the tokenizer in the input.\n  if (startPos) {\n    this.pos = startPos;\n    this.lineStart = this.input.lastIndexOf(\"\\n\", startPos - 1) + 1;\n    this.curLine = this.input.slice(0, this.lineStart).split(lineBreak).length;\n  } else {\n    this.pos = this.lineStart = 0;\n    this.curLine = 1;\n  }\n\n  // Properties of the current token:\n  // Its type\n  this.type = types$1.eof;\n  // For tokens that include more information than their type, the value\n  this.value = null;\n  // Its start and end offset\n  this.start = this.end = this.pos;\n  // And, if locations are used, the {line, column} object\n  // corresponding to those offsets\n  this.startLoc = this.endLoc = this.curPosition();\n\n  // Position information for the previous token\n  this.lastTokEndLoc = this.lastTokStartLoc = null;\n  this.lastTokStart = this.lastTokEnd = this.pos;\n\n  // The context stack is used to superficially track syntactic\n  // context to predict whether a regular expression is allowed in a\n  // given position.\n  this.context = this.initialContext();\n  this.exprAllowed = true;\n\n  // Figure out if it's a module code.\n  this.inModule = options.sourceType === \"module\";\n  this.strict = this.inModule || this.strictDirective(this.pos);\n\n  // Used to signify the start of a potential arrow function\n  this.potentialArrowAt = -1;\n  this.potentialArrowInForAwait = false;\n\n  // Positions to delayed-check that yield/await does not exist in default parameters.\n  this.yieldPos = this.awaitPos = this.awaitIdentPos = 0;\n  // Labels in scope.\n  this.labels = [];\n  // Thus-far undefined exports.\n  this.undefinedExports = Object.create(null);\n\n  // If enabled, skip leading hashbang line.\n  if (this.pos === 0 && options.allowHashBang && this.input.slice(0, 2) === \"#!\")\n    { this.skipLineComment(2); }\n\n  // Scope tracking for duplicate variable names (see scope.js)\n  this.scopeStack = [];\n  this.enterScope(SCOPE_TOP);\n\n  // For RegExp validation\n  this.regexpState = null;\n\n  // The stack of private names.\n  // Each element has two properties: 'declared' and 'used'.\n  // When it exited from the outermost class definition, all used private names must be declared.\n  this.privateNameStack = [];\n};\n\nvar prototypeAccessors = { inFunction: { configurable: true },inGenerator: { configurable: true },inAsync: { configurable: true },canAwait: { configurable: true },allowSuper: { configurable: true },allowDirectSuper: { configurable: true },treatFunctionsAsVar: { configurable: true },allowNewDotTarget: { configurable: true },inClassStaticBlock: { configurable: true } };\n\nParser.prototype.parse = function parse () {\n  var node = this.options.program || this.startNode();\n  this.nextToken();\n  return this.parseTopLevel(node)\n};\n\nprototypeAccessors.inFunction.get = function () { return (this.currentVarScope().flags & SCOPE_FUNCTION) > 0 };\n\nprototypeAccessors.inGenerator.get = function () { return (this.currentVarScope().flags & SCOPE_GENERATOR) > 0 && !this.currentVarScope().inClassFieldInit };\n\nprototypeAccessors.inAsync.get = function () { return (this.currentVarScope().flags & SCOPE_ASYNC) > 0 && !this.currentVarScope().inClassFieldInit };\n\nprototypeAccessors.canAwait.get = function () {\n  for (var i = this.scopeStack.length - 1; i >= 0; i--) {\n    var scope = this.scopeStack[i];\n    if (scope.inClassFieldInit || scope.flags & SCOPE_CLASS_STATIC_BLOCK) { return false }\n    if (scope.flags & SCOPE_FUNCTION) { return (scope.flags & SCOPE_ASYNC) > 0 }\n  }\n  return (this.inModule && this.options.ecmaVersion >= 13) || this.options.allowAwaitOutsideFunction\n};\n\nprototypeAccessors.allowSuper.get = function () {\n  var ref = this.currentThisScope();\n    var flags = ref.flags;\n    var inClassFieldInit = ref.inClassFieldInit;\n  return (flags & SCOPE_SUPER) > 0 || inClassFieldInit || this.options.allowSuperOutsideMethod\n};\n\nprototypeAccessors.allowDirectSuper.get = function () { return (this.currentThisScope().flags & SCOPE_DIRECT_SUPER) > 0 };\n\nprototypeAccessors.treatFunctionsAsVar.get = function () { return this.treatFunctionsAsVarInScope(this.currentScope()) };\n\nprototypeAccessors.allowNewDotTarget.get = function () {\n  var ref = this.currentThisScope();\n    var flags = ref.flags;\n    var inClassFieldInit = ref.inClassFieldInit;\n  return (flags & (SCOPE_FUNCTION | SCOPE_CLASS_STATIC_BLOCK)) > 0 || inClassFieldInit\n};\n\nprototypeAccessors.inClassStaticBlock.get = function () {\n  return (this.currentVarScope().flags & SCOPE_CLASS_STATIC_BLOCK) > 0\n};\n\nParser.extend = function extend () {\n    var plugins = [], len = arguments.length;\n    while ( len-- ) plugins[ len ] = arguments[ len ];\n\n  var cls = this;\n  for (var i = 0; i < plugins.length; i++) { cls = plugins[i](cls); }\n  return cls\n};\n\nParser.parse = function parse (input, options) {\n  return new this(options, input).parse()\n};\n\nParser.parseExpressionAt = function parseExpressionAt (input, pos, options) {\n  var parser = new this(options, input, pos);\n  parser.nextToken();\n  return parser.parseExpression()\n};\n\nParser.tokenizer = function tokenizer (input, options) {\n  return new this(options, input)\n};\n\nObject.defineProperties( Parser.prototype, prototypeAccessors );\n\nvar pp$9 = Parser.prototype;\n\n// ## Parser utilities\n\nvar literal = /^(?:'((?:\\\\.|[^'\\\\])*?)'|\"((?:\\\\.|[^\"\\\\])*?)\")/;\npp$9.strictDirective = function(start) {\n  if (this.options.ecmaVersion < 5) { return false }\n  for (;;) {\n    // Try to find string literal.\n    skipWhiteSpace.lastIndex = start;\n    start += skipWhiteSpace.exec(this.input)[0].length;\n    var match = literal.exec(this.input.slice(start));\n    if (!match) { return false }\n    if ((match[1] || match[2]) === \"use strict\") {\n      skipWhiteSpace.lastIndex = start + match[0].length;\n      var spaceAfter = skipWhiteSpace.exec(this.input), end = spaceAfter.index + spaceAfter[0].length;\n      var next = this.input.charAt(end);\n      return next === \";\" || next === \"}\" ||\n        (lineBreak.test(spaceAfter[0]) &&\n         !(/[(`.[+\\-/*%<>=,?^&]/.test(next) || next === \"!\" && this.input.charAt(end + 1) === \"=\"))\n    }\n    start += match[0].length;\n\n    // Skip semicolon, if any.\n    skipWhiteSpace.lastIndex = start;\n    start += skipWhiteSpace.exec(this.input)[0].length;\n    if (this.input[start] === \";\")\n      { start++; }\n  }\n};\n\n// Predicate that tests whether the next token is of the given\n// type, and if yes, consumes it as a side effect.\n\npp$9.eat = function(type) {\n  if (this.type === type) {\n    this.next();\n    return true\n  } else {\n    return false\n  }\n};\n\n// Tests whether parsed token is a contextual keyword.\n\npp$9.isContextual = function(name) {\n  return this.type === types$1.name && this.value === name && !this.containsEsc\n};\n\n// Consumes contextual keyword if possible.\n\npp$9.eatContextual = function(name) {\n  if (!this.isContextual(name)) { return false }\n  this.next();\n  return true\n};\n\n// Asserts that following token is given contextual keyword.\n\npp$9.expectContextual = function(name) {\n  if (!this.eatContextual(name)) { this.unexpected(); }\n};\n\n// Test whether a semicolon can be inserted at the current position.\n\npp$9.canInsertSemicolon = function() {\n  return this.type === types$1.eof ||\n    this.type === types$1.braceR ||\n    lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n};\n\npp$9.insertSemicolon = function() {\n  if (this.canInsertSemicolon()) {\n    if (this.options.onInsertedSemicolon)\n      { this.options.onInsertedSemicolon(this.lastTokEnd, this.lastTokEndLoc); }\n    return true\n  }\n};\n\n// Consume a semicolon, or, failing that, see if we are allowed to\n// pretend that there is a semicolon at this position.\n\npp$9.semicolon = function() {\n  if (!this.eat(types$1.semi) && !this.insertSemicolon()) { this.unexpected(); }\n};\n\npp$9.afterTrailingComma = function(tokType, notNext) {\n  if (this.type === tokType) {\n    if (this.options.onTrailingComma)\n      { this.options.onTrailingComma(this.lastTokStart, this.lastTokStartLoc); }\n    if (!notNext)\n      { this.next(); }\n    return true\n  }\n};\n\n// Expect a token of a given type. If found, consume it, otherwise,\n// raise an unexpected token error.\n\npp$9.expect = function(type) {\n  this.eat(type) || this.unexpected();\n};\n\n// Raise an unexpected token error.\n\npp$9.unexpected = function(pos) {\n  this.raise(pos != null ? pos : this.start, \"Unexpected token\");\n};\n\nvar DestructuringErrors = function DestructuringErrors() {\n  this.shorthandAssign =\n  this.trailingComma =\n  this.parenthesizedAssign =\n  this.parenthesizedBind =\n  this.doubleProto =\n    -1;\n};\n\npp$9.checkPatternErrors = function(refDestructuringErrors, isAssign) {\n  if (!refDestructuringErrors) { return }\n  if (refDestructuringErrors.trailingComma > -1)\n    { this.raiseRecoverable(refDestructuringErrors.trailingComma, \"Comma is not permitted after the rest element\"); }\n  var parens = isAssign ? refDestructuringErrors.parenthesizedAssign : refDestructuringErrors.parenthesizedBind;\n  if (parens > -1) { this.raiseRecoverable(parens, isAssign ? \"Assigning to rvalue\" : \"Parenthesized pattern\"); }\n};\n\npp$9.checkExpressionErrors = function(refDestructuringErrors, andThrow) {\n  if (!refDestructuringErrors) { return false }\n  var shorthandAssign = refDestructuringErrors.shorthandAssign;\n  var doubleProto = refDestructuringErrors.doubleProto;\n  if (!andThrow) { return shorthandAssign >= 0 || doubleProto >= 0 }\n  if (shorthandAssign >= 0)\n    { this.raise(shorthandAssign, \"Shorthand property assignments are valid only in destructuring patterns\"); }\n  if (doubleProto >= 0)\n    { this.raiseRecoverable(doubleProto, \"Redefinition of __proto__ property\"); }\n};\n\npp$9.checkYieldAwaitInDefaultParams = function() {\n  if (this.yieldPos && (!this.awaitPos || this.yieldPos < this.awaitPos))\n    { this.raise(this.yieldPos, \"Yield expression cannot be a default value\"); }\n  if (this.awaitPos)\n    { this.raise(this.awaitPos, \"Await expression cannot be a default value\"); }\n};\n\npp$9.isSimpleAssignTarget = function(expr) {\n  if (expr.type === \"ParenthesizedExpression\")\n    { return this.isSimpleAssignTarget(expr.expression) }\n  return expr.type === \"Identifier\" || expr.type === \"MemberExpression\"\n};\n\nvar pp$8 = Parser.prototype;\n\n// ### Statement parsing\n\n// Parse a program. Initializes the parser, reads any number of\n// statements, and wraps them in a Program node.  Optionally takes a\n// `program` argument.  If present, the statements will be appended\n// to its body instead of creating a new node.\n\npp$8.parseTopLevel = function(node) {\n  var exports = Object.create(null);\n  if (!node.body) { node.body = []; }\n  while (this.type !== types$1.eof) {\n    var stmt = this.parseStatement(null, true, exports);\n    node.body.push(stmt);\n  }\n  if (this.inModule)\n    { for (var i = 0, list = Object.keys(this.undefinedExports); i < list.length; i += 1)\n      {\n        var name = list[i];\n\n        this.raiseRecoverable(this.undefinedExports[name].start, (\"Export '\" + name + \"' is not defined\"));\n      } }\n  this.adaptDirectivePrologue(node.body);\n  this.next();\n  node.sourceType = this.options.sourceType;\n  return this.finishNode(node, \"Program\")\n};\n\nvar loopLabel = {kind: \"loop\"}, switchLabel = {kind: \"switch\"};\n\npp$8.isLet = function(context) {\n  if (this.options.ecmaVersion < 6 || !this.isContextual(\"let\")) { return false }\n  skipWhiteSpace.lastIndex = this.pos;\n  var skip = skipWhiteSpace.exec(this.input);\n  var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);\n  // For ambiguous cases, determine if a LexicalDeclaration (or only a\n  // Statement) is allowed here. If context is not empty then only a Statement\n  // is allowed. However, `let [` is an explicit negative lookahead for\n  // ExpressionStatement, so special-case it first.\n  if (nextCh === 91 || nextCh === 92) { return true } // '[', '/'\n  if (context) { return false }\n\n  if (nextCh === 123 || nextCh > 0xd7ff && nextCh < 0xdc00) { return true } // '{', astral\n  if (isIdentifierStart(nextCh, true)) {\n    var pos = next + 1;\n    while (isIdentifierChar(nextCh = this.input.charCodeAt(pos), true)) { ++pos; }\n    if (nextCh === 92 || nextCh > 0xd7ff && nextCh < 0xdc00) { return true }\n    var ident = this.input.slice(next, pos);\n    if (!keywordRelationalOperator.test(ident)) { return true }\n  }\n  return false\n};\n\n// check 'async [no LineTerminator here] function'\n// - 'async /*foo*/ function' is OK.\n// - 'async /*\\n*/ function' is invalid.\npp$8.isAsyncFunction = function() {\n  if (this.options.ecmaVersion < 8 || !this.isContextual(\"async\"))\n    { return false }\n\n  skipWhiteSpace.lastIndex = this.pos;\n  var skip = skipWhiteSpace.exec(this.input);\n  var next = this.pos + skip[0].length, after;\n  return !lineBreak.test(this.input.slice(this.pos, next)) &&\n    this.input.slice(next, next + 8) === \"function\" &&\n    (next + 8 === this.input.length ||\n     !(isIdentifierChar(after = this.input.charCodeAt(next + 8)) || after > 0xd7ff && after < 0xdc00))\n};\n\n// Parse a single statement.\n//\n// If expecting a statement and finding a slash operator, parse a\n// regular expression literal. This is to handle cases like\n// `if (foo) /blah/.exec(foo)`, where looking at the previous token\n// does not help.\n\npp$8.parseStatement = function(context, topLevel, exports) {\n  var starttype = this.type, node = this.startNode(), kind;\n\n  if (this.isLet(context)) {\n    starttype = types$1._var;\n    kind = \"let\";\n  }\n\n  // Most types of statements are recognized by the keyword they\n  // start with. Many are trivial to parse, some require a bit of\n  // complexity.\n\n  switch (starttype) {\n  case types$1._break: case types$1._continue: return this.parseBreakContinueStatement(node, starttype.keyword)\n  case types$1._debugger: return this.parseDebuggerStatement(node)\n  case types$1._do: return this.parseDoStatement(node)\n  case types$1._for: return this.parseForStatement(node)\n  case types$1._function:\n    // Function as sole body of either an if statement or a labeled statement\n    // works, but not when it is part of a labeled statement that is the sole\n    // body of an if statement.\n    if ((context && (this.strict || context !== \"if\" && context !== \"label\")) && this.options.ecmaVersion >= 6) { this.unexpected(); }\n    return this.parseFunctionStatement(node, false, !context)\n  case types$1._class:\n    if (context) { this.unexpected(); }\n    return this.parseClass(node, true)\n  case types$1._if: return this.parseIfStatement(node)\n  case types$1._return: return this.parseReturnStatement(node)\n  case types$1._switch: return this.parseSwitchStatement(node)\n  case types$1._throw: return this.parseThrowStatement(node)\n  case types$1._try: return this.parseTryStatement(node)\n  case types$1._const: case types$1._var:\n    kind = kind || this.value;\n    if (context && kind !== \"var\") { this.unexpected(); }\n    return this.parseVarStatement(node, kind)\n  case types$1._while: return this.parseWhileStatement(node)\n  case types$1._with: return this.parseWithStatement(node)\n  case types$1.braceL: return this.parseBlock(true, node)\n  case types$1.semi: return this.parseEmptyStatement(node)\n  case types$1._export:\n  case types$1._import:\n    if (this.options.ecmaVersion > 10 && starttype === types$1._import) {\n      skipWhiteSpace.lastIndex = this.pos;\n      var skip = skipWhiteSpace.exec(this.input);\n      var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);\n      if (nextCh === 40 || nextCh === 46) // '(' or '.'\n        { return this.parseExpressionStatement(node, this.parseExpression()) }\n    }\n\n    if (!this.options.allowImportExportEverywhere) {\n      if (!topLevel)\n        { this.raise(this.start, \"'import' and 'export' may only appear at the top level\"); }\n      if (!this.inModule)\n        { this.raise(this.start, \"'import' and 'export' may appear only with 'sourceType: module'\"); }\n    }\n    return starttype === types$1._import ? this.parseImport(node) : this.parseExport(node, exports)\n\n    // If the statement does not start with a statement keyword or a\n    // brace, it's an ExpressionStatement or LabeledStatement. We\n    // simply start parsing an expression, and afterwards, if the\n    // next token is a colon and the expression was a simple\n    // Identifier node, we switch to interpreting it as a label.\n  default:\n    if (this.isAsyncFunction()) {\n      if (context) { this.unexpected(); }\n      this.next();\n      return this.parseFunctionStatement(node, true, !context)\n    }\n\n    var maybeName = this.value, expr = this.parseExpression();\n    if (starttype === types$1.name && expr.type === \"Identifier\" && this.eat(types$1.colon))\n      { return this.parseLabeledStatement(node, maybeName, expr, context) }\n    else { return this.parseExpressionStatement(node, expr) }\n  }\n};\n\npp$8.parseBreakContinueStatement = function(node, keyword) {\n  var isBreak = keyword === \"break\";\n  this.next();\n  if (this.eat(types$1.semi) || this.insertSemicolon()) { node.label = null; }\n  else if (this.type !== types$1.name) { this.unexpected(); }\n  else {\n    node.label = this.parseIdent();\n    this.semicolon();\n  }\n\n  // Verify that there is an actual destination to break or\n  // continue to.\n  var i = 0;\n  for (; i < this.labels.length; ++i) {\n    var lab = this.labels[i];\n    if (node.label == null || lab.name === node.label.name) {\n      if (lab.kind != null && (isBreak || lab.kind === \"loop\")) { break }\n      if (node.label && isBreak) { break }\n    }\n  }\n  if (i === this.labels.length) { this.raise(node.start, \"Unsyntactic \" + keyword); }\n  return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\")\n};\n\npp$8.parseDebuggerStatement = function(node) {\n  this.next();\n  this.semicolon();\n  return this.finishNode(node, \"DebuggerStatement\")\n};\n\npp$8.parseDoStatement = function(node) {\n  this.next();\n  this.labels.push(loopLabel);\n  node.body = this.parseStatement(\"do\");\n  this.labels.pop();\n  this.expect(types$1._while);\n  node.test = this.parseParenExpression();\n  if (this.options.ecmaVersion >= 6)\n    { this.eat(types$1.semi); }\n  else\n    { this.semicolon(); }\n  return this.finishNode(node, \"DoWhileStatement\")\n};\n\n// Disambiguating between a `for` and a `for`/`in` or `for`/`of`\n// loop is non-trivial. Basically, we have to parse the init `var`\n// statement or expression, disallowing the `in` operator (see\n// the second parameter to `parseExpression`), and then check\n// whether the next token is `in` or `of`. When there is no init\n// part (semicolon immediately after the opening parenthesis), it\n// is a regular `for` loop.\n\npp$8.parseForStatement = function(node) {\n  this.next();\n  var awaitAt = (this.options.ecmaVersion >= 9 && this.canAwait && this.eatContextual(\"await\")) ? this.lastTokStart : -1;\n  this.labels.push(loopLabel);\n  this.enterScope(0);\n  this.expect(types$1.parenL);\n  if (this.type === types$1.semi) {\n    if (awaitAt > -1) { this.unexpected(awaitAt); }\n    return this.parseFor(node, null)\n  }\n  var isLet = this.isLet();\n  if (this.type === types$1._var || this.type === types$1._const || isLet) {\n    var init$1 = this.startNode(), kind = isLet ? \"let\" : this.value;\n    this.next();\n    this.parseVar(init$1, true, kind);\n    this.finishNode(init$1, \"VariableDeclaration\");\n    if ((this.type === types$1._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) && init$1.declarations.length === 1) {\n      if (this.options.ecmaVersion >= 9) {\n        if (this.type === types$1._in) {\n          if (awaitAt > -1) { this.unexpected(awaitAt); }\n        } else { node.await = awaitAt > -1; }\n      }\n      return this.parseForIn(node, init$1)\n    }\n    if (awaitAt > -1) { this.unexpected(awaitAt); }\n    return this.parseFor(node, init$1)\n  }\n  var startsWithLet = this.isContextual(\"let\"), isForOf = false;\n  var refDestructuringErrors = new DestructuringErrors;\n  var init = this.parseExpression(awaitAt > -1 ? \"await\" : true, refDestructuringErrors);\n  if (this.type === types$1._in || (isForOf = this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) {\n    if (this.options.ecmaVersion >= 9) {\n      if (this.type === types$1._in) {\n        if (awaitAt > -1) { this.unexpected(awaitAt); }\n      } else { node.await = awaitAt > -1; }\n    }\n    if (startsWithLet && isForOf) { this.raise(init.start, \"The left-hand side of a for-of loop may not start with 'let'.\"); }\n    this.toAssignable(init, false, refDestructuringErrors);\n    this.checkLValPattern(init);\n    return this.parseForIn(node, init)\n  } else {\n    this.checkExpressionErrors(refDestructuringErrors, true);\n  }\n  if (awaitAt > -1) { this.unexpected(awaitAt); }\n  return this.parseFor(node, init)\n};\n\npp$8.parseFunctionStatement = function(node, isAsync, declarationPosition) {\n  this.next();\n  return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), false, isAsync)\n};\n\npp$8.parseIfStatement = function(node) {\n  this.next();\n  node.test = this.parseParenExpression();\n  // allow function declarations in branches, but only in non-strict mode\n  node.consequent = this.parseStatement(\"if\");\n  node.alternate = this.eat(types$1._else) ? this.parseStatement(\"if\") : null;\n  return this.finishNode(node, \"IfStatement\")\n};\n\npp$8.parseReturnStatement = function(node) {\n  if (!this.inFunction && !this.options.allowReturnOutsideFunction)\n    { this.raise(this.start, \"'return' outside of function\"); }\n  this.next();\n\n  // In `return` (and `break`/`continue`), the keywords with\n  // optional arguments, we eagerly look for a semicolon or the\n  // possibility to insert one.\n\n  if (this.eat(types$1.semi) || this.insertSemicolon()) { node.argument = null; }\n  else { node.argument = this.parseExpression(); this.semicolon(); }\n  return this.finishNode(node, \"ReturnStatement\")\n};\n\npp$8.parseSwitchStatement = function(node) {\n  this.next();\n  node.discriminant = this.parseParenExpression();\n  node.cases = [];\n  this.expect(types$1.braceL);\n  this.labels.push(switchLabel);\n  this.enterScope(0);\n\n  // Statements under must be grouped (by label) in SwitchCase\n  // nodes. `cur` is used to keep the node that we are currently\n  // adding statements to.\n\n  var cur;\n  for (var sawDefault = false; this.type !== types$1.braceR;) {\n    if (this.type === types$1._case || this.type === types$1._default) {\n      var isCase = this.type === types$1._case;\n      if (cur) { this.finishNode(cur, \"SwitchCase\"); }\n      node.cases.push(cur = this.startNode());\n      cur.consequent = [];\n      this.next();\n      if (isCase) {\n        cur.test = this.parseExpression();\n      } else {\n        if (sawDefault) { this.raiseRecoverable(this.lastTokStart, \"Multiple default clauses\"); }\n        sawDefault = true;\n        cur.test = null;\n      }\n      this.expect(types$1.colon);\n    } else {\n      if (!cur) { this.unexpected(); }\n      cur.consequent.push(this.parseStatement(null));\n    }\n  }\n  this.exitScope();\n  if (cur) { this.finishNode(cur, \"SwitchCase\"); }\n  this.next(); // Closing brace\n  this.labels.pop();\n  return this.finishNode(node, \"SwitchStatement\")\n};\n\npp$8.parseThrowStatement = function(node) {\n  this.next();\n  if (lineBreak.test(this.input.slice(this.lastTokEnd, this.start)))\n    { this.raise(this.lastTokEnd, \"Illegal newline after throw\"); }\n  node.argument = this.parseExpression();\n  this.semicolon();\n  return this.finishNode(node, \"ThrowStatement\")\n};\n\n// Reused empty array added for node fields that are always empty.\n\nvar empty$1 = [];\n\npp$8.parseTryStatement = function(node) {\n  this.next();\n  node.block = this.parseBlock();\n  node.handler = null;\n  if (this.type === types$1._catch) {\n    var clause = this.startNode();\n    this.next();\n    if (this.eat(types$1.parenL)) {\n      clause.param = this.parseBindingAtom();\n      var simple = clause.param.type === \"Identifier\";\n      this.enterScope(simple ? SCOPE_SIMPLE_CATCH : 0);\n      this.checkLValPattern(clause.param, simple ? BIND_SIMPLE_CATCH : BIND_LEXICAL);\n      this.expect(types$1.parenR);\n    } else {\n      if (this.options.ecmaVersion < 10) { this.unexpected(); }\n      clause.param = null;\n      this.enterScope(0);\n    }\n    clause.body = this.parseBlock(false);\n    this.exitScope();\n    node.handler = this.finishNode(clause, \"CatchClause\");\n  }\n  node.finalizer = this.eat(types$1._finally) ? this.parseBlock() : null;\n  if (!node.handler && !node.finalizer)\n    { this.raise(node.start, \"Missing catch or finally clause\"); }\n  return this.finishNode(node, \"TryStatement\")\n};\n\npp$8.parseVarStatement = function(node, kind) {\n  this.next();\n  this.parseVar(node, false, kind);\n  this.semicolon();\n  return this.finishNode(node, \"VariableDeclaration\")\n};\n\npp$8.parseWhileStatement = function(node) {\n  this.next();\n  node.test = this.parseParenExpression();\n  this.labels.push(loopLabel);\n  node.body = this.parseStatement(\"while\");\n  this.labels.pop();\n  return this.finishNode(node, \"WhileStatement\")\n};\n\npp$8.parseWithStatement = function(node) {\n  if (this.strict) { this.raise(this.start, \"'with' in strict mode\"); }\n  this.next();\n  node.object = this.parseParenExpression();\n  node.body = this.parseStatement(\"with\");\n  return this.finishNode(node, \"WithStatement\")\n};\n\npp$8.parseEmptyStatement = function(node) {\n  this.next();\n  return this.finishNode(node, \"EmptyStatement\")\n};\n\npp$8.parseLabeledStatement = function(node, maybeName, expr, context) {\n  for (var i$1 = 0, list = this.labels; i$1 < list.length; i$1 += 1)\n    {\n    var label = list[i$1];\n\n    if (label.name === maybeName)\n      { this.raise(expr.start, \"Label '\" + maybeName + \"' is already declared\");\n  } }\n  var kind = this.type.isLoop ? \"loop\" : this.type === types$1._switch ? \"switch\" : null;\n  for (var i = this.labels.length - 1; i >= 0; i--) {\n    var label$1 = this.labels[i];\n    if (label$1.statementStart === node.start) {\n      // Update information about previous labels on this node\n      label$1.statementStart = this.start;\n      label$1.kind = kind;\n    } else { break }\n  }\n  this.labels.push({name: maybeName, kind: kind, statementStart: this.start});\n  node.body = this.parseStatement(context ? context.indexOf(\"label\") === -1 ? context + \"label\" : context : \"label\");\n  this.labels.pop();\n  node.label = expr;\n  return this.finishNode(node, \"LabeledStatement\")\n};\n\npp$8.parseExpressionStatement = function(node, expr) {\n  node.expression = expr;\n  this.semicolon();\n  return this.finishNode(node, \"ExpressionStatement\")\n};\n\n// Parse a semicolon-enclosed block of statements, handling `\"use\n// strict\"` declarations when `allowStrict` is true (used for\n// function bodies).\n\npp$8.parseBlock = function(createNewLexicalScope, node, exitStrict) {\n  if ( createNewLexicalScope === void 0 ) createNewLexicalScope = true;\n  if ( node === void 0 ) node = this.startNode();\n\n  node.body = [];\n  this.expect(types$1.braceL);\n  if (createNewLexicalScope) { this.enterScope(0); }\n  while (this.type !== types$1.braceR) {\n    var stmt = this.parseStatement(null);\n    node.body.push(stmt);\n  }\n  if (exitStrict) { this.strict = false; }\n  this.next();\n  if (createNewLexicalScope) { this.exitScope(); }\n  return this.finishNode(node, \"BlockStatement\")\n};\n\n// Parse a regular `for` loop. The disambiguation code in\n// `parseStatement` will already have parsed the init statement or\n// expression.\n\npp$8.parseFor = function(node, init) {\n  node.init = init;\n  this.expect(types$1.semi);\n  node.test = this.type === types$1.semi ? null : this.parseExpression();\n  this.expect(types$1.semi);\n  node.update = this.type === types$1.parenR ? null : this.parseExpression();\n  this.expect(types$1.parenR);\n  node.body = this.parseStatement(\"for\");\n  this.exitScope();\n  this.labels.pop();\n  return this.finishNode(node, \"ForStatement\")\n};\n\n// Parse a `for`/`in` and `for`/`of` loop, which are almost\n// same from parser's perspective.\n\npp$8.parseForIn = function(node, init) {\n  var isForIn = this.type === types$1._in;\n  this.next();\n\n  if (\n    init.type === \"VariableDeclaration\" &&\n    init.declarations[0].init != null &&\n    (\n      !isForIn ||\n      this.options.ecmaVersion < 8 ||\n      this.strict ||\n      init.kind !== \"var\" ||\n      init.declarations[0].id.type !== \"Identifier\"\n    )\n  ) {\n    this.raise(\n      init.start,\n      ((isForIn ? \"for-in\" : \"for-of\") + \" loop variable declaration may not have an initializer\")\n    );\n  }\n  node.left = init;\n  node.right = isForIn ? this.parseExpression() : this.parseMaybeAssign();\n  this.expect(types$1.parenR);\n  node.body = this.parseStatement(\"for\");\n  this.exitScope();\n  this.labels.pop();\n  return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\")\n};\n\n// Parse a list of variable declarations.\n\npp$8.parseVar = function(node, isFor, kind) {\n  node.declarations = [];\n  node.kind = kind;\n  for (;;) {\n    var decl = this.startNode();\n    this.parseVarId(decl, kind);\n    if (this.eat(types$1.eq)) {\n      decl.init = this.parseMaybeAssign(isFor);\n    } else if (kind === \"const\" && !(this.type === types$1._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\")))) {\n      this.unexpected();\n    } else if (decl.id.type !== \"Identifier\" && !(isFor && (this.type === types$1._in || this.isContextual(\"of\")))) {\n      this.raise(this.lastTokEnd, \"Complex binding patterns require an initialization value\");\n    } else {\n      decl.init = null;\n    }\n    node.declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n    if (!this.eat(types$1.comma)) { break }\n  }\n  return node\n};\n\npp$8.parseVarId = function(decl, kind) {\n  decl.id = this.parseBindingAtom();\n  this.checkLValPattern(decl.id, kind === \"var\" ? BIND_VAR : BIND_LEXICAL, false);\n};\n\nvar FUNC_STATEMENT = 1, FUNC_HANGING_STATEMENT = 2, FUNC_NULLABLE_ID = 4;\n\n// Parse a function declaration or literal (depending on the\n// `statement & FUNC_STATEMENT`).\n\n// Remove `allowExpressionBody` for 7.0.0, as it is only called with false\npp$8.parseFunction = function(node, statement, allowExpressionBody, isAsync, forInit) {\n  this.initFunction(node);\n  if (this.options.ecmaVersion >= 9 || this.options.ecmaVersion >= 6 && !isAsync) {\n    if (this.type === types$1.star && (statement & FUNC_HANGING_STATEMENT))\n      { this.unexpected(); }\n    node.generator = this.eat(types$1.star);\n  }\n  if (this.options.ecmaVersion >= 8)\n    { node.async = !!isAsync; }\n\n  if (statement & FUNC_STATEMENT) {\n    node.id = (statement & FUNC_NULLABLE_ID) && this.type !== types$1.name ? null : this.parseIdent();\n    if (node.id && !(statement & FUNC_HANGING_STATEMENT))\n      // If it is a regular function declaration in sloppy mode, then it is\n      // subject to Annex B semantics (BIND_FUNCTION). Otherwise, the binding\n      // mode depends on properties of the current scope (see\n      // treatFunctionsAsVar).\n      { this.checkLValSimple(node.id, (this.strict || node.generator || node.async) ? this.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION); }\n  }\n\n  var oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n  this.yieldPos = 0;\n  this.awaitPos = 0;\n  this.awaitIdentPos = 0;\n  this.enterScope(functionFlags(node.async, node.generator));\n\n  if (!(statement & FUNC_STATEMENT))\n    { node.id = this.type === types$1.name ? this.parseIdent() : null; }\n\n  this.parseFunctionParams(node);\n  this.parseFunctionBody(node, allowExpressionBody, false, forInit);\n\n  this.yieldPos = oldYieldPos;\n  this.awaitPos = oldAwaitPos;\n  this.awaitIdentPos = oldAwaitIdentPos;\n  return this.finishNode(node, (statement & FUNC_STATEMENT) ? \"FunctionDeclaration\" : \"FunctionExpression\")\n};\n\npp$8.parseFunctionParams = function(node) {\n  this.expect(types$1.parenL);\n  node.params = this.parseBindingList(types$1.parenR, false, this.options.ecmaVersion >= 8);\n  this.checkYieldAwaitInDefaultParams();\n};\n\n// Parse a class declaration or literal (depending on the\n// `isStatement` parameter).\n\npp$8.parseClass = function(node, isStatement) {\n  this.next();\n\n  // ecma-262 14.6 Class Definitions\n  // A class definition is always strict mode code.\n  var oldStrict = this.strict;\n  this.strict = true;\n\n  this.parseClassId(node, isStatement);\n  this.parseClassSuper(node);\n  var privateNameMap = this.enterClassBody();\n  var classBody = this.startNode();\n  var hadConstructor = false;\n  classBody.body = [];\n  this.expect(types$1.braceL);\n  while (this.type !== types$1.braceR) {\n    var element = this.parseClassElement(node.superClass !== null);\n    if (element) {\n      classBody.body.push(element);\n      if (element.type === \"MethodDefinition\" && element.kind === \"constructor\") {\n        if (hadConstructor) { this.raise(element.start, \"Duplicate constructor in the same class\"); }\n        hadConstructor = true;\n      } else if (element.key && element.key.type === \"PrivateIdentifier\" && isPrivateNameConflicted(privateNameMap, element)) {\n        this.raiseRecoverable(element.key.start, (\"Identifier '#\" + (element.key.name) + \"' has already been declared\"));\n      }\n    }\n  }\n  this.strict = oldStrict;\n  this.next();\n  node.body = this.finishNode(classBody, \"ClassBody\");\n  this.exitClassBody();\n  return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\")\n};\n\npp$8.parseClassElement = function(constructorAllowsSuper) {\n  if (this.eat(types$1.semi)) { return null }\n\n  var ecmaVersion = this.options.ecmaVersion;\n  var node = this.startNode();\n  var keyName = \"\";\n  var isGenerator = false;\n  var isAsync = false;\n  var kind = \"method\";\n  var isStatic = false;\n\n  if (this.eatContextual(\"static\")) {\n    // Parse static init block\n    if (ecmaVersion >= 13 && this.eat(types$1.braceL)) {\n      this.parseClassStaticBlock(node);\n      return node\n    }\n    if (this.isClassElementNameStart() || this.type === types$1.star) {\n      isStatic = true;\n    } else {\n      keyName = \"static\";\n    }\n  }\n  node.static = isStatic;\n  if (!keyName && ecmaVersion >= 8 && this.eatContextual(\"async\")) {\n    if ((this.isClassElementNameStart() || this.type === types$1.star) && !this.canInsertSemicolon()) {\n      isAsync = true;\n    } else {\n      keyName = \"async\";\n    }\n  }\n  if (!keyName && (ecmaVersion >= 9 || !isAsync) && this.eat(types$1.star)) {\n    isGenerator = true;\n  }\n  if (!keyName && !isAsync && !isGenerator) {\n    var lastValue = this.value;\n    if (this.eatContextual(\"get\") || this.eatContextual(\"set\")) {\n      if (this.isClassElementNameStart()) {\n        kind = lastValue;\n      } else {\n        keyName = lastValue;\n      }\n    }\n  }\n\n  // Parse element name\n  if (keyName) {\n    // 'async', 'get', 'set', or 'static' were not a keyword contextually.\n    // The last token is any of those. Make it the element name.\n    node.computed = false;\n    node.key = this.startNodeAt(this.lastTokStart, this.lastTokStartLoc);\n    node.key.name = keyName;\n    this.finishNode(node.key, \"Identifier\");\n  } else {\n    this.parseClassElementName(node);\n  }\n\n  // Parse element value\n  if (ecmaVersion < 13 || this.type === types$1.parenL || kind !== \"method\" || isGenerator || isAsync) {\n    var isConstructor = !node.static && checkKeyName(node, \"constructor\");\n    var allowsDirectSuper = isConstructor && constructorAllowsSuper;\n    // Couldn't move this check into the 'parseClassMethod' method for backward compatibility.\n    if (isConstructor && kind !== \"method\") { this.raise(node.key.start, \"Constructor can't have get/set modifier\"); }\n    node.kind = isConstructor ? \"constructor\" : kind;\n    this.parseClassMethod(node, isGenerator, isAsync, allowsDirectSuper);\n  } else {\n    this.parseClassField(node);\n  }\n\n  return node\n};\n\npp$8.isClassElementNameStart = function() {\n  return (\n    this.type === types$1.name ||\n    this.type === types$1.privateId ||\n    this.type === types$1.num ||\n    this.type === types$1.string ||\n    this.type === types$1.bracketL ||\n    this.type.keyword\n  )\n};\n\npp$8.parseClassElementName = function(element) {\n  if (this.type === types$1.privateId) {\n    if (this.value === \"constructor\") {\n      this.raise(this.start, \"Classes can't have an element named '#constructor'\");\n    }\n    element.computed = false;\n    element.key = this.parsePrivateIdent();\n  } else {\n    this.parsePropertyName(element);\n  }\n};\n\npp$8.parseClassMethod = function(method, isGenerator, isAsync, allowsDirectSuper) {\n  // Check key and flags\n  var key = method.key;\n  if (method.kind === \"constructor\") {\n    if (isGenerator) { this.raise(key.start, \"Constructor can't be a generator\"); }\n    if (isAsync) { this.raise(key.start, \"Constructor can't be an async method\"); }\n  } else if (method.static && checkKeyName(method, \"prototype\")) {\n    this.raise(key.start, \"Classes may not have a static property named prototype\");\n  }\n\n  // Parse value\n  var value = method.value = this.parseMethod(isGenerator, isAsync, allowsDirectSuper);\n\n  // Check value\n  if (method.kind === \"get\" && value.params.length !== 0)\n    { this.raiseRecoverable(value.start, \"getter should have no params\"); }\n  if (method.kind === \"set\" && value.params.length !== 1)\n    { this.raiseRecoverable(value.start, \"setter should have exactly one param\"); }\n  if (method.kind === \"set\" && value.params[0].type === \"RestElement\")\n    { this.raiseRecoverable(value.params[0].start, \"Setter cannot use rest params\"); }\n\n  return this.finishNode(method, \"MethodDefinition\")\n};\n\npp$8.parseClassField = function(field) {\n  if (checkKeyName(field, \"constructor\")) {\n    this.raise(field.key.start, \"Classes can't have a field named 'constructor'\");\n  } else if (field.static && checkKeyName(field, \"prototype\")) {\n    this.raise(field.key.start, \"Classes can't have a static field named 'prototype'\");\n  }\n\n  if (this.eat(types$1.eq)) {\n    // To raise SyntaxError if 'arguments' exists in the initializer.\n    var scope = this.currentThisScope();\n    var inClassFieldInit = scope.inClassFieldInit;\n    scope.inClassFieldInit = true;\n    field.value = this.parseMaybeAssign();\n    scope.inClassFieldInit = inClassFieldInit;\n  } else {\n    field.value = null;\n  }\n  this.semicolon();\n\n  return this.finishNode(field, \"PropertyDefinition\")\n};\n\npp$8.parseClassStaticBlock = function(node) {\n  node.body = [];\n\n  var oldLabels = this.labels;\n  this.labels = [];\n  this.enterScope(SCOPE_CLASS_STATIC_BLOCK | SCOPE_SUPER);\n  while (this.type !== types$1.braceR) {\n    var stmt = this.parseStatement(null);\n    node.body.push(stmt);\n  }\n  this.next();\n  this.exitScope();\n  this.labels = oldLabels;\n\n  return this.finishNode(node, \"StaticBlock\")\n};\n\npp$8.parseClassId = function(node, isStatement) {\n  if (this.type === types$1.name) {\n    node.id = this.parseIdent();\n    if (isStatement)\n      { this.checkLValSimple(node.id, BIND_LEXICAL, false); }\n  } else {\n    if (isStatement === true)\n      { this.unexpected(); }\n    node.id = null;\n  }\n};\n\npp$8.parseClassSuper = function(node) {\n  node.superClass = this.eat(types$1._extends) ? this.parseExprSubscripts(null, false) : null;\n};\n\npp$8.enterClassBody = function() {\n  var element = {declared: Object.create(null), used: []};\n  this.privateNameStack.push(element);\n  return element.declared\n};\n\npp$8.exitClassBody = function() {\n  var ref = this.privateNameStack.pop();\n  var declared = ref.declared;\n  var used = ref.used;\n  var len = this.privateNameStack.length;\n  var parent = len === 0 ? null : this.privateNameStack[len - 1];\n  for (var i = 0; i < used.length; ++i) {\n    var id = used[i];\n    if (!hasOwn(declared, id.name)) {\n      if (parent) {\n        parent.used.push(id);\n      } else {\n        this.raiseRecoverable(id.start, (\"Private field '#\" + (id.name) + \"' must be declared in an enclosing class\"));\n      }\n    }\n  }\n};\n\nfunction isPrivateNameConflicted(privateNameMap, element) {\n  var name = element.key.name;\n  var curr = privateNameMap[name];\n\n  var next = \"true\";\n  if (element.type === \"MethodDefinition\" && (element.kind === \"get\" || element.kind === \"set\")) {\n    next = (element.static ? \"s\" : \"i\") + element.kind;\n  }\n\n  // `class { get #a(){}; static set #a(_){} }` is also conflict.\n  if (\n    curr === \"iget\" && next === \"iset\" ||\n    curr === \"iset\" && next === \"iget\" ||\n    curr === \"sget\" && next === \"sset\" ||\n    curr === \"sset\" && next === \"sget\"\n  ) {\n    privateNameMap[name] = \"true\";\n    return false\n  } else if (!curr) {\n    privateNameMap[name] = next;\n    return false\n  } else {\n    return true\n  }\n}\n\nfunction checkKeyName(node, name) {\n  var computed = node.computed;\n  var key = node.key;\n  return !computed && (\n    key.type === \"Identifier\" && key.name === name ||\n    key.type === \"Literal\" && key.value === name\n  )\n}\n\n// Parses module export declaration.\n\npp$8.parseExport = function(node, exports) {\n  this.next();\n  // export * from '...'\n  if (this.eat(types$1.star)) {\n    if (this.options.ecmaVersion >= 11) {\n      if (this.eatContextual(\"as\")) {\n        node.exported = this.parseModuleExportName();\n        this.checkExport(exports, node.exported, this.lastTokStart);\n      } else {\n        node.exported = null;\n      }\n    }\n    this.expectContextual(\"from\");\n    if (this.type !== types$1.string) { this.unexpected(); }\n    node.source = this.parseExprAtom();\n    this.semicolon();\n    return this.finishNode(node, \"ExportAllDeclaration\")\n  }\n  if (this.eat(types$1._default)) { // export default ...\n    this.checkExport(exports, \"default\", this.lastTokStart);\n    var isAsync;\n    if (this.type === types$1._function || (isAsync = this.isAsyncFunction())) {\n      var fNode = this.startNode();\n      this.next();\n      if (isAsync) { this.next(); }\n      node.declaration = this.parseFunction(fNode, FUNC_STATEMENT | FUNC_NULLABLE_ID, false, isAsync);\n    } else if (this.type === types$1._class) {\n      var cNode = this.startNode();\n      node.declaration = this.parseClass(cNode, \"nullableID\");\n    } else {\n      node.declaration = this.parseMaybeAssign();\n      this.semicolon();\n    }\n    return this.finishNode(node, \"ExportDefaultDeclaration\")\n  }\n  // export var|const|let|function|class ...\n  if (this.shouldParseExportStatement()) {\n    node.declaration = this.parseStatement(null);\n    if (node.declaration.type === \"VariableDeclaration\")\n      { this.checkVariableExport(exports, node.declaration.declarations); }\n    else\n      { this.checkExport(exports, node.declaration.id, node.declaration.id.start); }\n    node.specifiers = [];\n    node.source = null;\n  } else { // export { x, y as z } [from '...']\n    node.declaration = null;\n    node.specifiers = this.parseExportSpecifiers(exports);\n    if (this.eatContextual(\"from\")) {\n      if (this.type !== types$1.string) { this.unexpected(); }\n      node.source = this.parseExprAtom();\n    } else {\n      for (var i = 0, list = node.specifiers; i < list.length; i += 1) {\n        // check for keywords used as local names\n        var spec = list[i];\n\n        this.checkUnreserved(spec.local);\n        // check if export is defined\n        this.checkLocalExport(spec.local);\n\n        if (spec.local.type === \"Literal\") {\n          this.raise(spec.local.start, \"A string literal cannot be used as an exported binding without `from`.\");\n        }\n      }\n\n      node.source = null;\n    }\n    this.semicolon();\n  }\n  return this.finishNode(node, \"ExportNamedDeclaration\")\n};\n\npp$8.checkExport = function(exports, name, pos) {\n  if (!exports) { return }\n  if (typeof name !== \"string\")\n    { name = name.type === \"Identifier\" ? name.name : name.value; }\n  if (hasOwn(exports, name))\n    { this.raiseRecoverable(pos, \"Duplicate export '\" + name + \"'\"); }\n  exports[name] = true;\n};\n\npp$8.checkPatternExport = function(exports, pat) {\n  var type = pat.type;\n  if (type === \"Identifier\")\n    { this.checkExport(exports, pat, pat.start); }\n  else if (type === \"ObjectPattern\")\n    { for (var i = 0, list = pat.properties; i < list.length; i += 1)\n      {\n        var prop = list[i];\n\n        this.checkPatternExport(exports, prop);\n      } }\n  else if (type === \"ArrayPattern\")\n    { for (var i$1 = 0, list$1 = pat.elements; i$1 < list$1.length; i$1 += 1) {\n      var elt = list$1[i$1];\n\n        if (elt) { this.checkPatternExport(exports, elt); }\n    } }\n  else if (type === \"Property\")\n    { this.checkPatternExport(exports, pat.value); }\n  else if (type === \"AssignmentPattern\")\n    { this.checkPatternExport(exports, pat.left); }\n  else if (type === \"RestElement\")\n    { this.checkPatternExport(exports, pat.argument); }\n  else if (type === \"ParenthesizedExpression\")\n    { this.checkPatternExport(exports, pat.expression); }\n};\n\npp$8.checkVariableExport = function(exports, decls) {\n  if (!exports) { return }\n  for (var i = 0, list = decls; i < list.length; i += 1)\n    {\n    var decl = list[i];\n\n    this.checkPatternExport(exports, decl.id);\n  }\n};\n\npp$8.shouldParseExportStatement = function() {\n  return this.type.keyword === \"var\" ||\n    this.type.keyword === \"const\" ||\n    this.type.keyword === \"class\" ||\n    this.type.keyword === \"function\" ||\n    this.isLet() ||\n    this.isAsyncFunction()\n};\n\n// Parses a comma-separated list of module exports.\n\npp$8.parseExportSpecifiers = function(exports) {\n  var nodes = [], first = true;\n  // export { x, y as z } [from '...']\n  this.expect(types$1.braceL);\n  while (!this.eat(types$1.braceR)) {\n    if (!first) {\n      this.expect(types$1.comma);\n      if (this.afterTrailingComma(types$1.braceR)) { break }\n    } else { first = false; }\n\n    var node = this.startNode();\n    node.local = this.parseModuleExportName();\n    node.exported = this.eatContextual(\"as\") ? this.parseModuleExportName() : node.local;\n    this.checkExport(\n      exports,\n      node.exported,\n      node.exported.start\n    );\n    nodes.push(this.finishNode(node, \"ExportSpecifier\"));\n  }\n  return nodes\n};\n\n// Parses import declaration.\n\npp$8.parseImport = function(node) {\n  this.next();\n  // import '...'\n  if (this.type === types$1.string) {\n    node.specifiers = empty$1;\n    node.source = this.parseExprAtom();\n  } else {\n    node.specifiers = this.parseImportSpecifiers();\n    this.expectContextual(\"from\");\n    node.source = this.type === types$1.string ? this.parseExprAtom() : this.unexpected();\n  }\n  this.semicolon();\n  return this.finishNode(node, \"ImportDeclaration\")\n};\n\n// Parses a comma-separated list of module imports.\n\npp$8.parseImportSpecifiers = function() {\n  var nodes = [], first = true;\n  if (this.type === types$1.name) {\n    // import defaultObj, { x, y as z } from '...'\n    var node = this.startNode();\n    node.local = this.parseIdent();\n    this.checkLValSimple(node.local, BIND_LEXICAL);\n    nodes.push(this.finishNode(node, \"ImportDefaultSpecifier\"));\n    if (!this.eat(types$1.comma)) { return nodes }\n  }\n  if (this.type === types$1.star) {\n    var node$1 = this.startNode();\n    this.next();\n    this.expectContextual(\"as\");\n    node$1.local = this.parseIdent();\n    this.checkLValSimple(node$1.local, BIND_LEXICAL);\n    nodes.push(this.finishNode(node$1, \"ImportNamespaceSpecifier\"));\n    return nodes\n  }\n  this.expect(types$1.braceL);\n  while (!this.eat(types$1.braceR)) {\n    if (!first) {\n      this.expect(types$1.comma);\n      if (this.afterTrailingComma(types$1.braceR)) { break }\n    } else { first = false; }\n\n    var node$2 = this.startNode();\n    node$2.imported = this.parseModuleExportName();\n    if (this.eatContextual(\"as\")) {\n      node$2.local = this.parseIdent();\n    } else {\n      this.checkUnreserved(node$2.imported);\n      node$2.local = node$2.imported;\n    }\n    this.checkLValSimple(node$2.local, BIND_LEXICAL);\n    nodes.push(this.finishNode(node$2, \"ImportSpecifier\"));\n  }\n  return nodes\n};\n\npp$8.parseModuleExportName = function() {\n  if (this.options.ecmaVersion >= 13 && this.type === types$1.string) {\n    var stringLiteral = this.parseLiteral(this.value);\n    if (loneSurrogate.test(stringLiteral.value)) {\n      this.raise(stringLiteral.start, \"An export name cannot include a lone surrogate.\");\n    }\n    return stringLiteral\n  }\n  return this.parseIdent(true)\n};\n\n// Set `ExpressionStatement#directive` property for directive prologues.\npp$8.adaptDirectivePrologue = function(statements) {\n  for (var i = 0; i < statements.length && this.isDirectiveCandidate(statements[i]); ++i) {\n    statements[i].directive = statements[i].expression.raw.slice(1, -1);\n  }\n};\npp$8.isDirectiveCandidate = function(statement) {\n  return (\n    this.options.ecmaVersion >= 5 &&\n    statement.type === \"ExpressionStatement\" &&\n    statement.expression.type === \"Literal\" &&\n    typeof statement.expression.value === \"string\" &&\n    // Reject parenthesized strings.\n    (this.input[statement.start] === \"\\\"\" || this.input[statement.start] === \"'\")\n  )\n};\n\nvar pp$7 = Parser.prototype;\n\n// Convert existing expression atom to assignable pattern\n// if possible.\n\npp$7.toAssignable = function(node, isBinding, refDestructuringErrors) {\n  if (this.options.ecmaVersion >= 6 && node) {\n    switch (node.type) {\n    case \"Identifier\":\n      if (this.inAsync && node.name === \"await\")\n        { this.raise(node.start, \"Cannot use 'await' as identifier inside an async function\"); }\n      break\n\n    case \"ObjectPattern\":\n    case \"ArrayPattern\":\n    case \"AssignmentPattern\":\n    case \"RestElement\":\n      break\n\n    case \"ObjectExpression\":\n      node.type = \"ObjectPattern\";\n      if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n      for (var i = 0, list = node.properties; i < list.length; i += 1) {\n        var prop = list[i];\n\n      this.toAssignable(prop, isBinding);\n        // Early error:\n        //   AssignmentRestProperty[Yield, Await] :\n        //     `...` DestructuringAssignmentTarget[Yield, Await]\n        //\n        //   It is a Syntax Error if |DestructuringAssignmentTarget| is an |ArrayLiteral| or an |ObjectLiteral|.\n        if (\n          prop.type === \"RestElement\" &&\n          (prop.argument.type === \"ArrayPattern\" || prop.argument.type === \"ObjectPattern\")\n        ) {\n          this.raise(prop.argument.start, \"Unexpected token\");\n        }\n      }\n      break\n\n    case \"Property\":\n      // AssignmentProperty has type === \"Property\"\n      if (node.kind !== \"init\") { this.raise(node.key.start, \"Object pattern can't contain getter or setter\"); }\n      this.toAssignable(node.value, isBinding);\n      break\n\n    case \"ArrayExpression\":\n      node.type = \"ArrayPattern\";\n      if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n      this.toAssignableList(node.elements, isBinding);\n      break\n\n    case \"SpreadElement\":\n      node.type = \"RestElement\";\n      this.toAssignable(node.argument, isBinding);\n      if (node.argument.type === \"AssignmentPattern\")\n        { this.raise(node.argument.start, \"Rest elements cannot have a default value\"); }\n      break\n\n    case \"AssignmentExpression\":\n      if (node.operator !== \"=\") { this.raise(node.left.end, \"Only '=' operator can be used for specifying default value.\"); }\n      node.type = \"AssignmentPattern\";\n      delete node.operator;\n      this.toAssignable(node.left, isBinding);\n      break\n\n    case \"ParenthesizedExpression\":\n      this.toAssignable(node.expression, isBinding, refDestructuringErrors);\n      break\n\n    case \"ChainExpression\":\n      this.raiseRecoverable(node.start, \"Optional chaining cannot appear in left-hand side\");\n      break\n\n    case \"MemberExpression\":\n      if (!isBinding) { break }\n\n    default:\n      this.raise(node.start, \"Assigning to rvalue\");\n    }\n  } else if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n  return node\n};\n\n// Convert list of expression atoms to binding list.\n\npp$7.toAssignableList = function(exprList, isBinding) {\n  var end = exprList.length;\n  for (var i = 0; i < end; i++) {\n    var elt = exprList[i];\n    if (elt) { this.toAssignable(elt, isBinding); }\n  }\n  if (end) {\n    var last = exprList[end - 1];\n    if (this.options.ecmaVersion === 6 && isBinding && last && last.type === \"RestElement\" && last.argument.type !== \"Identifier\")\n      { this.unexpected(last.argument.start); }\n  }\n  return exprList\n};\n\n// Parses spread element.\n\npp$7.parseSpread = function(refDestructuringErrors) {\n  var node = this.startNode();\n  this.next();\n  node.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n  return this.finishNode(node, \"SpreadElement\")\n};\n\npp$7.parseRestBinding = function() {\n  var node = this.startNode();\n  this.next();\n\n  // RestElement inside of a function parameter must be an identifier\n  if (this.options.ecmaVersion === 6 && this.type !== types$1.name)\n    { this.unexpected(); }\n\n  node.argument = this.parseBindingAtom();\n\n  return this.finishNode(node, \"RestElement\")\n};\n\n// Parses lvalue (assignable) atom.\n\npp$7.parseBindingAtom = function() {\n  if (this.options.ecmaVersion >= 6) {\n    switch (this.type) {\n    case types$1.bracketL:\n      var node = this.startNode();\n      this.next();\n      node.elements = this.parseBindingList(types$1.bracketR, true, true);\n      return this.finishNode(node, \"ArrayPattern\")\n\n    case types$1.braceL:\n      return this.parseObj(true)\n    }\n  }\n  return this.parseIdent()\n};\n\npp$7.parseBindingList = function(close, allowEmpty, allowTrailingComma) {\n  var elts = [], first = true;\n  while (!this.eat(close)) {\n    if (first) { first = false; }\n    else { this.expect(types$1.comma); }\n    if (allowEmpty && this.type === types$1.comma) {\n      elts.push(null);\n    } else if (allowTrailingComma && this.afterTrailingComma(close)) {\n      break\n    } else if (this.type === types$1.ellipsis) {\n      var rest = this.parseRestBinding();\n      this.parseBindingListItem(rest);\n      elts.push(rest);\n      if (this.type === types$1.comma) { this.raise(this.start, \"Comma is not permitted after the rest element\"); }\n      this.expect(close);\n      break\n    } else {\n      var elem = this.parseMaybeDefault(this.start, this.startLoc);\n      this.parseBindingListItem(elem);\n      elts.push(elem);\n    }\n  }\n  return elts\n};\n\npp$7.parseBindingListItem = function(param) {\n  return param\n};\n\n// Parses assignment pattern around given atom if possible.\n\npp$7.parseMaybeDefault = function(startPos, startLoc, left) {\n  left = left || this.parseBindingAtom();\n  if (this.options.ecmaVersion < 6 || !this.eat(types$1.eq)) { return left }\n  var node = this.startNodeAt(startPos, startLoc);\n  node.left = left;\n  node.right = this.parseMaybeAssign();\n  return this.finishNode(node, \"AssignmentPattern\")\n};\n\n// The following three functions all verify that a node is an lvalue —\n// something that can be bound, or assigned to. In order to do so, they perform\n// a variety of checks:\n//\n// - Check that none of the bound/assigned-to identifiers are reserved words.\n// - Record name declarations for bindings in the appropriate scope.\n// - Check duplicate argument names, if checkClashes is set.\n//\n// If a complex binding pattern is encountered (e.g., object and array\n// destructuring), the entire pattern is recursively checked.\n//\n// There are three versions of checkLVal*() appropriate for different\n// circumstances:\n//\n// - checkLValSimple() shall be used if the syntactic construct supports\n//   nothing other than identifiers and member expressions. Parenthesized\n//   expressions are also correctly handled. This is generally appropriate for\n//   constructs for which the spec says\n//\n//   > It is a Syntax Error if AssignmentTargetType of [the production] is not\n//   > simple.\n//\n//   It is also appropriate for checking if an identifier is valid and not\n//   defined elsewhere, like import declarations or function/class identifiers.\n//\n//   Examples where this is used include:\n//     a += …;\n//     import a from '…';\n//   where a is the node to be checked.\n//\n// - checkLValPattern() shall be used if the syntactic construct supports\n//   anything checkLValSimple() supports, as well as object and array\n//   destructuring patterns. This is generally appropriate for constructs for\n//   which the spec says\n//\n//   > It is a Syntax Error if [the production] is neither an ObjectLiteral nor\n//   > an ArrayLiteral and AssignmentTargetType of [the production] is not\n//   > simple.\n//\n//   Examples where this is used include:\n//     (a = …);\n//     const a = …;\n//     try { … } catch (a) { … }\n//   where a is the node to be checked.\n//\n// - checkLValInnerPattern() shall be used if the syntactic construct supports\n//   anything checkLValPattern() supports, as well as default assignment\n//   patterns, rest elements, and other constructs that may appear within an\n//   object or array destructuring pattern.\n//\n//   As a special case, function parameters also use checkLValInnerPattern(),\n//   as they also support defaults and rest constructs.\n//\n// These functions deliberately support both assignment and binding constructs,\n// as the logic for both is exceedingly similar. If the node is the target of\n// an assignment, then bindingType should be set to BIND_NONE. Otherwise, it\n// should be set to the appropriate BIND_* constant, like BIND_VAR or\n// BIND_LEXICAL.\n//\n// If the function is called with a non-BIND_NONE bindingType, then\n// additionally a checkClashes object may be specified to allow checking for\n// duplicate argument names. checkClashes is ignored if the provided construct\n// is an assignment (i.e., bindingType is BIND_NONE).\n\npp$7.checkLValSimple = function(expr, bindingType, checkClashes) {\n  if ( bindingType === void 0 ) bindingType = BIND_NONE;\n\n  var isBind = bindingType !== BIND_NONE;\n\n  switch (expr.type) {\n  case \"Identifier\":\n    if (this.strict && this.reservedWordsStrictBind.test(expr.name))\n      { this.raiseRecoverable(expr.start, (isBind ? \"Binding \" : \"Assigning to \") + expr.name + \" in strict mode\"); }\n    if (isBind) {\n      if (bindingType === BIND_LEXICAL && expr.name === \"let\")\n        { this.raiseRecoverable(expr.start, \"let is disallowed as a lexically bound name\"); }\n      if (checkClashes) {\n        if (hasOwn(checkClashes, expr.name))\n          { this.raiseRecoverable(expr.start, \"Argument name clash\"); }\n        checkClashes[expr.name] = true;\n      }\n      if (bindingType !== BIND_OUTSIDE) { this.declareName(expr.name, bindingType, expr.start); }\n    }\n    break\n\n  case \"ChainExpression\":\n    this.raiseRecoverable(expr.start, \"Optional chaining cannot appear in left-hand side\");\n    break\n\n  case \"MemberExpression\":\n    if (isBind) { this.raiseRecoverable(expr.start, \"Binding member expression\"); }\n    break\n\n  case \"ParenthesizedExpression\":\n    if (isBind) { this.raiseRecoverable(expr.start, \"Binding parenthesized expression\"); }\n    return this.checkLValSimple(expr.expression, bindingType, checkClashes)\n\n  default:\n    this.raise(expr.start, (isBind ? \"Binding\" : \"Assigning to\") + \" rvalue\");\n  }\n};\n\npp$7.checkLValPattern = function(expr, bindingType, checkClashes) {\n  if ( bindingType === void 0 ) bindingType = BIND_NONE;\n\n  switch (expr.type) {\n  case \"ObjectPattern\":\n    for (var i = 0, list = expr.properties; i < list.length; i += 1) {\n      var prop = list[i];\n\n    this.checkLValInnerPattern(prop, bindingType, checkClashes);\n    }\n    break\n\n  case \"ArrayPattern\":\n    for (var i$1 = 0, list$1 = expr.elements; i$1 < list$1.length; i$1 += 1) {\n      var elem = list$1[i$1];\n\n    if (elem) { this.checkLValInnerPattern(elem, bindingType, checkClashes); }\n    }\n    break\n\n  default:\n    this.checkLValSimple(expr, bindingType, checkClashes);\n  }\n};\n\npp$7.checkLValInnerPattern = function(expr, bindingType, checkClashes) {\n  if ( bindingType === void 0 ) bindingType = BIND_NONE;\n\n  switch (expr.type) {\n  case \"Property\":\n    // AssignmentProperty has type === \"Property\"\n    this.checkLValInnerPattern(expr.value, bindingType, checkClashes);\n    break\n\n  case \"AssignmentPattern\":\n    this.checkLValPattern(expr.left, bindingType, checkClashes);\n    break\n\n  case \"RestElement\":\n    this.checkLValPattern(expr.argument, bindingType, checkClashes);\n    break\n\n  default:\n    this.checkLValPattern(expr, bindingType, checkClashes);\n  }\n};\n\n// The algorithm used to determine whether a regexp can appear at a\n\nvar TokContext = function TokContext(token, isExpr, preserveSpace, override, generator) {\n  this.token = token;\n  this.isExpr = !!isExpr;\n  this.preserveSpace = !!preserveSpace;\n  this.override = override;\n  this.generator = !!generator;\n};\n\nvar types = {\n  b_stat: new TokContext(\"{\", false),\n  b_expr: new TokContext(\"{\", true),\n  b_tmpl: new TokContext(\"${\", false),\n  p_stat: new TokContext(\"(\", false),\n  p_expr: new TokContext(\"(\", true),\n  q_tmpl: new TokContext(\"`\", true, true, function (p) { return p.tryReadTemplateToken(); }),\n  f_stat: new TokContext(\"function\", false),\n  f_expr: new TokContext(\"function\", true),\n  f_expr_gen: new TokContext(\"function\", true, false, null, true),\n  f_gen: new TokContext(\"function\", false, false, null, true)\n};\n\nvar pp$6 = Parser.prototype;\n\npp$6.initialContext = function() {\n  return [types.b_stat]\n};\n\npp$6.curContext = function() {\n  return this.context[this.context.length - 1]\n};\n\npp$6.braceIsBlock = function(prevType) {\n  var parent = this.curContext();\n  if (parent === types.f_expr || parent === types.f_stat)\n    { return true }\n  if (prevType === types$1.colon && (parent === types.b_stat || parent === types.b_expr))\n    { return !parent.isExpr }\n\n  // The check for `tt.name && exprAllowed` detects whether we are\n  // after a `yield` or `of` construct. See the `updateContext` for\n  // `tt.name`.\n  if (prevType === types$1._return || prevType === types$1.name && this.exprAllowed)\n    { return lineBreak.test(this.input.slice(this.lastTokEnd, this.start)) }\n  if (prevType === types$1._else || prevType === types$1.semi || prevType === types$1.eof || prevType === types$1.parenR || prevType === types$1.arrow)\n    { return true }\n  if (prevType === types$1.braceL)\n    { return parent === types.b_stat }\n  if (prevType === types$1._var || prevType === types$1._const || prevType === types$1.name)\n    { return false }\n  return !this.exprAllowed\n};\n\npp$6.inGeneratorContext = function() {\n  for (var i = this.context.length - 1; i >= 1; i--) {\n    var context = this.context[i];\n    if (context.token === \"function\")\n      { return context.generator }\n  }\n  return false\n};\n\npp$6.updateContext = function(prevType) {\n  var update, type = this.type;\n  if (type.keyword && prevType === types$1.dot)\n    { this.exprAllowed = false; }\n  else if (update = type.updateContext)\n    { update.call(this, prevType); }\n  else\n    { this.exprAllowed = type.beforeExpr; }\n};\n\n// Used to handle egde cases when token context could not be inferred correctly during tokenization phase\n\npp$6.overrideContext = function(tokenCtx) {\n  if (this.curContext() !== tokenCtx) {\n    this.context[this.context.length - 1] = tokenCtx;\n  }\n};\n\n// Token-specific context update code\n\ntypes$1.parenR.updateContext = types$1.braceR.updateContext = function() {\n  if (this.context.length === 1) {\n    this.exprAllowed = true;\n    return\n  }\n  var out = this.context.pop();\n  if (out === types.b_stat && this.curContext().token === \"function\") {\n    out = this.context.pop();\n  }\n  this.exprAllowed = !out.isExpr;\n};\n\ntypes$1.braceL.updateContext = function(prevType) {\n  this.context.push(this.braceIsBlock(prevType) ? types.b_stat : types.b_expr);\n  this.exprAllowed = true;\n};\n\ntypes$1.dollarBraceL.updateContext = function() {\n  this.context.push(types.b_tmpl);\n  this.exprAllowed = true;\n};\n\ntypes$1.parenL.updateContext = function(prevType) {\n  var statementParens = prevType === types$1._if || prevType === types$1._for || prevType === types$1._with || prevType === types$1._while;\n  this.context.push(statementParens ? types.p_stat : types.p_expr);\n  this.exprAllowed = true;\n};\n\ntypes$1.incDec.updateContext = function() {\n  // tokExprAllowed stays unchanged\n};\n\ntypes$1._function.updateContext = types$1._class.updateContext = function(prevType) {\n  if (prevType.beforeExpr && prevType !== types$1._else &&\n      !(prevType === types$1.semi && this.curContext() !== types.p_stat) &&\n      !(prevType === types$1._return && lineBreak.test(this.input.slice(this.lastTokEnd, this.start))) &&\n      !((prevType === types$1.colon || prevType === types$1.braceL) && this.curContext() === types.b_stat))\n    { this.context.push(types.f_expr); }\n  else\n    { this.context.push(types.f_stat); }\n  this.exprAllowed = false;\n};\n\ntypes$1.backQuote.updateContext = function() {\n  if (this.curContext() === types.q_tmpl)\n    { this.context.pop(); }\n  else\n    { this.context.push(types.q_tmpl); }\n  this.exprAllowed = false;\n};\n\ntypes$1.star.updateContext = function(prevType) {\n  if (prevType === types$1._function) {\n    var index = this.context.length - 1;\n    if (this.context[index] === types.f_expr)\n      { this.context[index] = types.f_expr_gen; }\n    else\n      { this.context[index] = types.f_gen; }\n  }\n  this.exprAllowed = true;\n};\n\ntypes$1.name.updateContext = function(prevType) {\n  var allowed = false;\n  if (this.options.ecmaVersion >= 6 && prevType !== types$1.dot) {\n    if (this.value === \"of\" && !this.exprAllowed ||\n        this.value === \"yield\" && this.inGeneratorContext())\n      { allowed = true; }\n  }\n  this.exprAllowed = allowed;\n};\n\n// A recursive descent parser operates by defining functions for all\n\nvar pp$5 = Parser.prototype;\n\n// Check if property name clashes with already added.\n// Object/class getters and setters are not allowed to clash —\n// either with each other or with an init property — and in\n// strict mode, init properties are also not allowed to be repeated.\n\npp$5.checkPropClash = function(prop, propHash, refDestructuringErrors) {\n  if (this.options.ecmaVersion >= 9 && prop.type === \"SpreadElement\")\n    { return }\n  if (this.options.ecmaVersion >= 6 && (prop.computed || prop.method || prop.shorthand))\n    { return }\n  var key = prop.key;\n  var name;\n  switch (key.type) {\n  case \"Identifier\": name = key.name; break\n  case \"Literal\": name = String(key.value); break\n  default: return\n  }\n  var kind = prop.kind;\n  if (this.options.ecmaVersion >= 6) {\n    if (name === \"__proto__\" && kind === \"init\") {\n      if (propHash.proto) {\n        if (refDestructuringErrors) {\n          if (refDestructuringErrors.doubleProto < 0) {\n            refDestructuringErrors.doubleProto = key.start;\n          }\n        } else {\n          this.raiseRecoverable(key.start, \"Redefinition of __proto__ property\");\n        }\n      }\n      propHash.proto = true;\n    }\n    return\n  }\n  name = \"$\" + name;\n  var other = propHash[name];\n  if (other) {\n    var redefinition;\n    if (kind === \"init\") {\n      redefinition = this.strict && other.init || other.get || other.set;\n    } else {\n      redefinition = other.init || other[kind];\n    }\n    if (redefinition)\n      { this.raiseRecoverable(key.start, \"Redefinition of property\"); }\n  } else {\n    other = propHash[name] = {\n      init: false,\n      get: false,\n      set: false\n    };\n  }\n  other[kind] = true;\n};\n\n// ### Expression parsing\n\n// These nest, from the most general expression type at the top to\n// 'atomic', nondivisible expression types at the bottom. Most of\n// the functions will simply let the function(s) below them parse,\n// and, *if* the syntactic construct they handle is present, wrap\n// the AST node that the inner parser gave them in another node.\n\n// Parse a full expression. The optional arguments are used to\n// forbid the `in` operator (in for loops initalization expressions)\n// and provide reference for storing '=' operator inside shorthand\n// property assignment in contexts where both object expression\n// and object pattern might appear (so it's possible to raise\n// delayed syntax error at correct position).\n\npp$5.parseExpression = function(forInit, refDestructuringErrors) {\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseMaybeAssign(forInit, refDestructuringErrors);\n  if (this.type === types$1.comma) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.expressions = [expr];\n    while (this.eat(types$1.comma)) { node.expressions.push(this.parseMaybeAssign(forInit, refDestructuringErrors)); }\n    return this.finishNode(node, \"SequenceExpression\")\n  }\n  return expr\n};\n\n// Parse an assignment expression. This includes applications of\n// operators like `+=`.\n\npp$5.parseMaybeAssign = function(forInit, refDestructuringErrors, afterLeftParse) {\n  if (this.isContextual(\"yield\")) {\n    if (this.inGenerator) { return this.parseYield(forInit) }\n    // The tokenizer will assume an expression is allowed after\n    // `yield`, but this isn't that kind of yield\n    else { this.exprAllowed = false; }\n  }\n\n  var ownDestructuringErrors = false, oldParenAssign = -1, oldTrailingComma = -1, oldDoubleProto = -1;\n  if (refDestructuringErrors) {\n    oldParenAssign = refDestructuringErrors.parenthesizedAssign;\n    oldTrailingComma = refDestructuringErrors.trailingComma;\n    oldDoubleProto = refDestructuringErrors.doubleProto;\n    refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = -1;\n  } else {\n    refDestructuringErrors = new DestructuringErrors;\n    ownDestructuringErrors = true;\n  }\n\n  var startPos = this.start, startLoc = this.startLoc;\n  if (this.type === types$1.parenL || this.type === types$1.name) {\n    this.potentialArrowAt = this.start;\n    this.potentialArrowInForAwait = forInit === \"await\";\n  }\n  var left = this.parseMaybeConditional(forInit, refDestructuringErrors);\n  if (afterLeftParse) { left = afterLeftParse.call(this, left, startPos, startLoc); }\n  if (this.type.isAssign) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.operator = this.value;\n    if (this.type === types$1.eq)\n      { left = this.toAssignable(left, false, refDestructuringErrors); }\n    if (!ownDestructuringErrors) {\n      refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = refDestructuringErrors.doubleProto = -1;\n    }\n    if (refDestructuringErrors.shorthandAssign >= left.start)\n      { refDestructuringErrors.shorthandAssign = -1; } // reset because shorthand default was used correctly\n    if (this.type === types$1.eq)\n      { this.checkLValPattern(left); }\n    else\n      { this.checkLValSimple(left); }\n    node.left = left;\n    this.next();\n    node.right = this.parseMaybeAssign(forInit);\n    if (oldDoubleProto > -1) { refDestructuringErrors.doubleProto = oldDoubleProto; }\n    return this.finishNode(node, \"AssignmentExpression\")\n  } else {\n    if (ownDestructuringErrors) { this.checkExpressionErrors(refDestructuringErrors, true); }\n  }\n  if (oldParenAssign > -1) { refDestructuringErrors.parenthesizedAssign = oldParenAssign; }\n  if (oldTrailingComma > -1) { refDestructuringErrors.trailingComma = oldTrailingComma; }\n  return left\n};\n\n// Parse a ternary conditional (`?:`) operator.\n\npp$5.parseMaybeConditional = function(forInit, refDestructuringErrors) {\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseExprOps(forInit, refDestructuringErrors);\n  if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n  if (this.eat(types$1.question)) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.test = expr;\n    node.consequent = this.parseMaybeAssign();\n    this.expect(types$1.colon);\n    node.alternate = this.parseMaybeAssign(forInit);\n    return this.finishNode(node, \"ConditionalExpression\")\n  }\n  return expr\n};\n\n// Start the precedence parser.\n\npp$5.parseExprOps = function(forInit, refDestructuringErrors) {\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseMaybeUnary(refDestructuringErrors, false, false, forInit);\n  if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n  return expr.start === startPos && expr.type === \"ArrowFunctionExpression\" ? expr : this.parseExprOp(expr, startPos, startLoc, -1, forInit)\n};\n\n// Parse binary operators with the operator precedence parsing\n// algorithm. `left` is the left-hand side of the operator.\n// `minPrec` provides context that allows the function to stop and\n// defer further parser to one of its callers when it encounters an\n// operator that has a lower precedence than the set it is parsing.\n\npp$5.parseExprOp = function(left, leftStartPos, leftStartLoc, minPrec, forInit) {\n  var prec = this.type.binop;\n  if (prec != null && (!forInit || this.type !== types$1._in)) {\n    if (prec > minPrec) {\n      var logical = this.type === types$1.logicalOR || this.type === types$1.logicalAND;\n      var coalesce = this.type === types$1.coalesce;\n      if (coalesce) {\n        // Handle the precedence of `tt.coalesce` as equal to the range of logical expressions.\n        // In other words, `node.right` shouldn't contain logical expressions in order to check the mixed error.\n        prec = types$1.logicalAND.binop;\n      }\n      var op = this.value;\n      this.next();\n      var startPos = this.start, startLoc = this.startLoc;\n      var right = this.parseExprOp(this.parseMaybeUnary(null, false, false, forInit), startPos, startLoc, prec, forInit);\n      var node = this.buildBinary(leftStartPos, leftStartLoc, left, right, op, logical || coalesce);\n      if ((logical && this.type === types$1.coalesce) || (coalesce && (this.type === types$1.logicalOR || this.type === types$1.logicalAND))) {\n        this.raiseRecoverable(this.start, \"Logical expressions and coalesce expressions cannot be mixed. Wrap either by parentheses\");\n      }\n      return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec, forInit)\n    }\n  }\n  return left\n};\n\npp$5.buildBinary = function(startPos, startLoc, left, right, op, logical) {\n  if (right.type === \"PrivateIdentifier\") { this.raise(right.start, \"Private identifier can only be left side of binary expression\"); }\n  var node = this.startNodeAt(startPos, startLoc);\n  node.left = left;\n  node.operator = op;\n  node.right = right;\n  return this.finishNode(node, logical ? \"LogicalExpression\" : \"BinaryExpression\")\n};\n\n// Parse unary operators, both prefix and postfix.\n\npp$5.parseMaybeUnary = function(refDestructuringErrors, sawUnary, incDec, forInit) {\n  var startPos = this.start, startLoc = this.startLoc, expr;\n  if (this.isContextual(\"await\") && this.canAwait) {\n    expr = this.parseAwait(forInit);\n    sawUnary = true;\n  } else if (this.type.prefix) {\n    var node = this.startNode(), update = this.type === types$1.incDec;\n    node.operator = this.value;\n    node.prefix = true;\n    this.next();\n    node.argument = this.parseMaybeUnary(null, true, update, forInit);\n    this.checkExpressionErrors(refDestructuringErrors, true);\n    if (update) { this.checkLValSimple(node.argument); }\n    else if (this.strict && node.operator === \"delete\" &&\n             node.argument.type === \"Identifier\")\n      { this.raiseRecoverable(node.start, \"Deleting local variable in strict mode\"); }\n    else if (node.operator === \"delete\" && isPrivateFieldAccess(node.argument))\n      { this.raiseRecoverable(node.start, \"Private fields can not be deleted\"); }\n    else { sawUnary = true; }\n    expr = this.finishNode(node, update ? \"UpdateExpression\" : \"UnaryExpression\");\n  } else if (!sawUnary && this.type === types$1.privateId) {\n    if (forInit || this.privateNameStack.length === 0) { this.unexpected(); }\n    expr = this.parsePrivateIdent();\n    // only could be private fields in 'in', such as #x in obj\n    if (this.type !== types$1._in) { this.unexpected(); }\n  } else {\n    expr = this.parseExprSubscripts(refDestructuringErrors, forInit);\n    if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n    while (this.type.postfix && !this.canInsertSemicolon()) {\n      var node$1 = this.startNodeAt(startPos, startLoc);\n      node$1.operator = this.value;\n      node$1.prefix = false;\n      node$1.argument = expr;\n      this.checkLValSimple(expr);\n      this.next();\n      expr = this.finishNode(node$1, \"UpdateExpression\");\n    }\n  }\n\n  if (!incDec && this.eat(types$1.starstar)) {\n    if (sawUnary)\n      { this.unexpected(this.lastTokStart); }\n    else\n      { return this.buildBinary(startPos, startLoc, expr, this.parseMaybeUnary(null, false, false, forInit), \"**\", false) }\n  } else {\n    return expr\n  }\n};\n\nfunction isPrivateFieldAccess(node) {\n  return (\n    node.type === \"MemberExpression\" && node.property.type === \"PrivateIdentifier\" ||\n    node.type === \"ChainExpression\" && isPrivateFieldAccess(node.expression)\n  )\n}\n\n// Parse call, dot, and `[]`-subscript expressions.\n\npp$5.parseExprSubscripts = function(refDestructuringErrors, forInit) {\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseExprAtom(refDestructuringErrors, forInit);\n  if (expr.type === \"ArrowFunctionExpression\" && this.input.slice(this.lastTokStart, this.lastTokEnd) !== \")\")\n    { return expr }\n  var result = this.parseSubscripts(expr, startPos, startLoc, false, forInit);\n  if (refDestructuringErrors && result.type === \"MemberExpression\") {\n    if (refDestructuringErrors.parenthesizedAssign >= result.start) { refDestructuringErrors.parenthesizedAssign = -1; }\n    if (refDestructuringErrors.parenthesizedBind >= result.start) { refDestructuringErrors.parenthesizedBind = -1; }\n    if (refDestructuringErrors.trailingComma >= result.start) { refDestructuringErrors.trailingComma = -1; }\n  }\n  return result\n};\n\npp$5.parseSubscripts = function(base, startPos, startLoc, noCalls, forInit) {\n  var maybeAsyncArrow = this.options.ecmaVersion >= 8 && base.type === \"Identifier\" && base.name === \"async\" &&\n      this.lastTokEnd === base.end && !this.canInsertSemicolon() && base.end - base.start === 5 &&\n      this.potentialArrowAt === base.start;\n  var optionalChained = false;\n\n  while (true) {\n    var element = this.parseSubscript(base, startPos, startLoc, noCalls, maybeAsyncArrow, optionalChained, forInit);\n\n    if (element.optional) { optionalChained = true; }\n    if (element === base || element.type === \"ArrowFunctionExpression\") {\n      if (optionalChained) {\n        var chainNode = this.startNodeAt(startPos, startLoc);\n        chainNode.expression = element;\n        element = this.finishNode(chainNode, \"ChainExpression\");\n      }\n      return element\n    }\n\n    base = element;\n  }\n};\n\npp$5.parseSubscript = function(base, startPos, startLoc, noCalls, maybeAsyncArrow, optionalChained, forInit) {\n  var optionalSupported = this.options.ecmaVersion >= 11;\n  var optional = optionalSupported && this.eat(types$1.questionDot);\n  if (noCalls && optional) { this.raise(this.lastTokStart, \"Optional chaining cannot appear in the callee of new expressions\"); }\n\n  var computed = this.eat(types$1.bracketL);\n  if (computed || (optional && this.type !== types$1.parenL && this.type !== types$1.backQuote) || this.eat(types$1.dot)) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    if (computed) {\n      node.property = this.parseExpression();\n      this.expect(types$1.bracketR);\n    } else if (this.type === types$1.privateId && base.type !== \"Super\") {\n      node.property = this.parsePrivateIdent();\n    } else {\n      node.property = this.parseIdent(this.options.allowReserved !== \"never\");\n    }\n    node.computed = !!computed;\n    if (optionalSupported) {\n      node.optional = optional;\n    }\n    base = this.finishNode(node, \"MemberExpression\");\n  } else if (!noCalls && this.eat(types$1.parenL)) {\n    var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    this.awaitIdentPos = 0;\n    var exprList = this.parseExprList(types$1.parenR, this.options.ecmaVersion >= 8, false, refDestructuringErrors);\n    if (maybeAsyncArrow && !optional && !this.canInsertSemicolon() && this.eat(types$1.arrow)) {\n      this.checkPatternErrors(refDestructuringErrors, false);\n      this.checkYieldAwaitInDefaultParams();\n      if (this.awaitIdentPos > 0)\n        { this.raise(this.awaitIdentPos, \"Cannot use 'await' as identifier inside an async function\"); }\n      this.yieldPos = oldYieldPos;\n      this.awaitPos = oldAwaitPos;\n      this.awaitIdentPos = oldAwaitIdentPos;\n      return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList, true, forInit)\n    }\n    this.checkExpressionErrors(refDestructuringErrors, true);\n    this.yieldPos = oldYieldPos || this.yieldPos;\n    this.awaitPos = oldAwaitPos || this.awaitPos;\n    this.awaitIdentPos = oldAwaitIdentPos || this.awaitIdentPos;\n    var node$1 = this.startNodeAt(startPos, startLoc);\n    node$1.callee = base;\n    node$1.arguments = exprList;\n    if (optionalSupported) {\n      node$1.optional = optional;\n    }\n    base = this.finishNode(node$1, \"CallExpression\");\n  } else if (this.type === types$1.backQuote) {\n    if (optional || optionalChained) {\n      this.raise(this.start, \"Optional chaining cannot appear in the tag of tagged template expressions\");\n    }\n    var node$2 = this.startNodeAt(startPos, startLoc);\n    node$2.tag = base;\n    node$2.quasi = this.parseTemplate({isTagged: true});\n    base = this.finishNode(node$2, \"TaggedTemplateExpression\");\n  }\n  return base\n};\n\n// Parse an atomic expression — either a single token that is an\n// expression, an expression started by a keyword like `function` or\n// `new`, or an expression wrapped in punctuation like `()`, `[]`,\n// or `{}`.\n\npp$5.parseExprAtom = function(refDestructuringErrors, forInit) {\n  // If a division operator appears in an expression position, the\n  // tokenizer got confused, and we force it to read a regexp instead.\n  if (this.type === types$1.slash) { this.readRegexp(); }\n\n  var node, canBeArrow = this.potentialArrowAt === this.start;\n  switch (this.type) {\n  case types$1._super:\n    if (!this.allowSuper)\n      { this.raise(this.start, \"'super' keyword outside a method\"); }\n    node = this.startNode();\n    this.next();\n    if (this.type === types$1.parenL && !this.allowDirectSuper)\n      { this.raise(node.start, \"super() call outside constructor of a subclass\"); }\n    // The `super` keyword can appear at below:\n    // SuperProperty:\n    //     super [ Expression ]\n    //     super . IdentifierName\n    // SuperCall:\n    //     super ( Arguments )\n    if (this.type !== types$1.dot && this.type !== types$1.bracketL && this.type !== types$1.parenL)\n      { this.unexpected(); }\n    return this.finishNode(node, \"Super\")\n\n  case types$1._this:\n    node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"ThisExpression\")\n\n  case types$1.name:\n    var startPos = this.start, startLoc = this.startLoc, containsEsc = this.containsEsc;\n    var id = this.parseIdent(false);\n    if (this.options.ecmaVersion >= 8 && !containsEsc && id.name === \"async\" && !this.canInsertSemicolon() && this.eat(types$1._function)) {\n      this.overrideContext(types.f_expr);\n      return this.parseFunction(this.startNodeAt(startPos, startLoc), 0, false, true, forInit)\n    }\n    if (canBeArrow && !this.canInsertSemicolon()) {\n      if (this.eat(types$1.arrow))\n        { return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], false, forInit) }\n      if (this.options.ecmaVersion >= 8 && id.name === \"async\" && this.type === types$1.name && !containsEsc &&\n          (!this.potentialArrowInForAwait || this.value !== \"of\" || this.containsEsc)) {\n        id = this.parseIdent(false);\n        if (this.canInsertSemicolon() || !this.eat(types$1.arrow))\n          { this.unexpected(); }\n        return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], true, forInit)\n      }\n    }\n    return id\n\n  case types$1.regexp:\n    var value = this.value;\n    node = this.parseLiteral(value.value);\n    node.regex = {pattern: value.pattern, flags: value.flags};\n    return node\n\n  case types$1.num: case types$1.string:\n    return this.parseLiteral(this.value)\n\n  case types$1._null: case types$1._true: case types$1._false:\n    node = this.startNode();\n    node.value = this.type === types$1._null ? null : this.type === types$1._true;\n    node.raw = this.type.keyword;\n    this.next();\n    return this.finishNode(node, \"Literal\")\n\n  case types$1.parenL:\n    var start = this.start, expr = this.parseParenAndDistinguishExpression(canBeArrow, forInit);\n    if (refDestructuringErrors) {\n      if (refDestructuringErrors.parenthesizedAssign < 0 && !this.isSimpleAssignTarget(expr))\n        { refDestructuringErrors.parenthesizedAssign = start; }\n      if (refDestructuringErrors.parenthesizedBind < 0)\n        { refDestructuringErrors.parenthesizedBind = start; }\n    }\n    return expr\n\n  case types$1.bracketL:\n    node = this.startNode();\n    this.next();\n    node.elements = this.parseExprList(types$1.bracketR, true, true, refDestructuringErrors);\n    return this.finishNode(node, \"ArrayExpression\")\n\n  case types$1.braceL:\n    this.overrideContext(types.b_expr);\n    return this.parseObj(false, refDestructuringErrors)\n\n  case types$1._function:\n    node = this.startNode();\n    this.next();\n    return this.parseFunction(node, 0)\n\n  case types$1._class:\n    return this.parseClass(this.startNode(), false)\n\n  case types$1._new:\n    return this.parseNew()\n\n  case types$1.backQuote:\n    return this.parseTemplate()\n\n  case types$1._import:\n    if (this.options.ecmaVersion >= 11) {\n      return this.parseExprImport()\n    } else {\n      return this.unexpected()\n    }\n\n  default:\n    this.unexpected();\n  }\n};\n\npp$5.parseExprImport = function() {\n  var node = this.startNode();\n\n  // Consume `import` as an identifier for `import.meta`.\n  // Because `this.parseIdent(true)` doesn't check escape sequences, it needs the check of `this.containsEsc`.\n  if (this.containsEsc) { this.raiseRecoverable(this.start, \"Escape sequence in keyword import\"); }\n  var meta = this.parseIdent(true);\n\n  switch (this.type) {\n  case types$1.parenL:\n    return this.parseDynamicImport(node)\n  case types$1.dot:\n    node.meta = meta;\n    return this.parseImportMeta(node)\n  default:\n    this.unexpected();\n  }\n};\n\npp$5.parseDynamicImport = function(node) {\n  this.next(); // skip `(`\n\n  // Parse node.source.\n  node.source = this.parseMaybeAssign();\n\n  // Verify ending.\n  if (!this.eat(types$1.parenR)) {\n    var errorPos = this.start;\n    if (this.eat(types$1.comma) && this.eat(types$1.parenR)) {\n      this.raiseRecoverable(errorPos, \"Trailing comma is not allowed in import()\");\n    } else {\n      this.unexpected(errorPos);\n    }\n  }\n\n  return this.finishNode(node, \"ImportExpression\")\n};\n\npp$5.parseImportMeta = function(node) {\n  this.next(); // skip `.`\n\n  var containsEsc = this.containsEsc;\n  node.property = this.parseIdent(true);\n\n  if (node.property.name !== \"meta\")\n    { this.raiseRecoverable(node.property.start, \"The only valid meta property for import is 'import.meta'\"); }\n  if (containsEsc)\n    { this.raiseRecoverable(node.start, \"'import.meta' must not contain escaped characters\"); }\n  if (this.options.sourceType !== \"module\" && !this.options.allowImportExportEverywhere)\n    { this.raiseRecoverable(node.start, \"Cannot use 'import.meta' outside a module\"); }\n\n  return this.finishNode(node, \"MetaProperty\")\n};\n\npp$5.parseLiteral = function(value) {\n  var node = this.startNode();\n  node.value = value;\n  node.raw = this.input.slice(this.start, this.end);\n  if (node.raw.charCodeAt(node.raw.length - 1) === 110) { node.bigint = node.raw.slice(0, -1).replace(/_/g, \"\"); }\n  this.next();\n  return this.finishNode(node, \"Literal\")\n};\n\npp$5.parseParenExpression = function() {\n  this.expect(types$1.parenL);\n  var val = this.parseExpression();\n  this.expect(types$1.parenR);\n  return val\n};\n\npp$5.parseParenAndDistinguishExpression = function(canBeArrow, forInit) {\n  var startPos = this.start, startLoc = this.startLoc, val, allowTrailingComma = this.options.ecmaVersion >= 8;\n  if (this.options.ecmaVersion >= 6) {\n    this.next();\n\n    var innerStartPos = this.start, innerStartLoc = this.startLoc;\n    var exprList = [], first = true, lastIsComma = false;\n    var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, spreadStart;\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    // Do not save awaitIdentPos to allow checking awaits nested in parameters\n    while (this.type !== types$1.parenR) {\n      first ? first = false : this.expect(types$1.comma);\n      if (allowTrailingComma && this.afterTrailingComma(types$1.parenR, true)) {\n        lastIsComma = true;\n        break\n      } else if (this.type === types$1.ellipsis) {\n        spreadStart = this.start;\n        exprList.push(this.parseParenItem(this.parseRestBinding()));\n        if (this.type === types$1.comma) { this.raise(this.start, \"Comma is not permitted after the rest element\"); }\n        break\n      } else {\n        exprList.push(this.parseMaybeAssign(false, refDestructuringErrors, this.parseParenItem));\n      }\n    }\n    var innerEndPos = this.lastTokEnd, innerEndLoc = this.lastTokEndLoc;\n    this.expect(types$1.parenR);\n\n    if (canBeArrow && !this.canInsertSemicolon() && this.eat(types$1.arrow)) {\n      this.checkPatternErrors(refDestructuringErrors, false);\n      this.checkYieldAwaitInDefaultParams();\n      this.yieldPos = oldYieldPos;\n      this.awaitPos = oldAwaitPos;\n      return this.parseParenArrowList(startPos, startLoc, exprList, forInit)\n    }\n\n    if (!exprList.length || lastIsComma) { this.unexpected(this.lastTokStart); }\n    if (spreadStart) { this.unexpected(spreadStart); }\n    this.checkExpressionErrors(refDestructuringErrors, true);\n    this.yieldPos = oldYieldPos || this.yieldPos;\n    this.awaitPos = oldAwaitPos || this.awaitPos;\n\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n  } else {\n    val = this.parseParenExpression();\n  }\n\n  if (this.options.preserveParens) {\n    var par = this.startNodeAt(startPos, startLoc);\n    par.expression = val;\n    return this.finishNode(par, \"ParenthesizedExpression\")\n  } else {\n    return val\n  }\n};\n\npp$5.parseParenItem = function(item) {\n  return item\n};\n\npp$5.parseParenArrowList = function(startPos, startLoc, exprList, forInit) {\n  return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList, false, forInit)\n};\n\n// New's precedence is slightly tricky. It must allow its argument to\n// be a `[]` or dot subscript expression, but not a call — at least,\n// not without wrapping it in parentheses. Thus, it uses the noCalls\n// argument to parseSubscripts to prevent it from consuming the\n// argument list.\n\nvar empty = [];\n\npp$5.parseNew = function() {\n  if (this.containsEsc) { this.raiseRecoverable(this.start, \"Escape sequence in keyword new\"); }\n  var node = this.startNode();\n  var meta = this.parseIdent(true);\n  if (this.options.ecmaVersion >= 6 && this.eat(types$1.dot)) {\n    node.meta = meta;\n    var containsEsc = this.containsEsc;\n    node.property = this.parseIdent(true);\n    if (node.property.name !== \"target\")\n      { this.raiseRecoverable(node.property.start, \"The only valid meta property for new is 'new.target'\"); }\n    if (containsEsc)\n      { this.raiseRecoverable(node.start, \"'new.target' must not contain escaped characters\"); }\n    if (!this.allowNewDotTarget)\n      { this.raiseRecoverable(node.start, \"'new.target' can only be used in functions and class static block\"); }\n    return this.finishNode(node, \"MetaProperty\")\n  }\n  var startPos = this.start, startLoc = this.startLoc, isImport = this.type === types$1._import;\n  node.callee = this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true, false);\n  if (isImport && node.callee.type === \"ImportExpression\") {\n    this.raise(startPos, \"Cannot use new with import()\");\n  }\n  if (this.eat(types$1.parenL)) { node.arguments = this.parseExprList(types$1.parenR, this.options.ecmaVersion >= 8, false); }\n  else { node.arguments = empty; }\n  return this.finishNode(node, \"NewExpression\")\n};\n\n// Parse template expression.\n\npp$5.parseTemplateElement = function(ref) {\n  var isTagged = ref.isTagged;\n\n  var elem = this.startNode();\n  if (this.type === types$1.invalidTemplate) {\n    if (!isTagged) {\n      this.raiseRecoverable(this.start, \"Bad escape sequence in untagged template literal\");\n    }\n    elem.value = {\n      raw: this.value,\n      cooked: null\n    };\n  } else {\n    elem.value = {\n      raw: this.input.slice(this.start, this.end).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: this.value\n    };\n  }\n  this.next();\n  elem.tail = this.type === types$1.backQuote;\n  return this.finishNode(elem, \"TemplateElement\")\n};\n\npp$5.parseTemplate = function(ref) {\n  if ( ref === void 0 ) ref = {};\n  var isTagged = ref.isTagged; if ( isTagged === void 0 ) isTagged = false;\n\n  var node = this.startNode();\n  this.next();\n  node.expressions = [];\n  var curElt = this.parseTemplateElement({isTagged: isTagged});\n  node.quasis = [curElt];\n  while (!curElt.tail) {\n    if (this.type === types$1.eof) { this.raise(this.pos, \"Unterminated template literal\"); }\n    this.expect(types$1.dollarBraceL);\n    node.expressions.push(this.parseExpression());\n    this.expect(types$1.braceR);\n    node.quasis.push(curElt = this.parseTemplateElement({isTagged: isTagged}));\n  }\n  this.next();\n  return this.finishNode(node, \"TemplateLiteral\")\n};\n\npp$5.isAsyncProp = function(prop) {\n  return !prop.computed && prop.key.type === \"Identifier\" && prop.key.name === \"async\" &&\n    (this.type === types$1.name || this.type === types$1.num || this.type === types$1.string || this.type === types$1.bracketL || this.type.keyword || (this.options.ecmaVersion >= 9 && this.type === types$1.star)) &&\n    !lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n};\n\n// Parse an object literal or binding pattern.\n\npp$5.parseObj = function(isPattern, refDestructuringErrors) {\n  var node = this.startNode(), first = true, propHash = {};\n  node.properties = [];\n  this.next();\n  while (!this.eat(types$1.braceR)) {\n    if (!first) {\n      this.expect(types$1.comma);\n      if (this.options.ecmaVersion >= 5 && this.afterTrailingComma(types$1.braceR)) { break }\n    } else { first = false; }\n\n    var prop = this.parseProperty(isPattern, refDestructuringErrors);\n    if (!isPattern) { this.checkPropClash(prop, propHash, refDestructuringErrors); }\n    node.properties.push(prop);\n  }\n  return this.finishNode(node, isPattern ? \"ObjectPattern\" : \"ObjectExpression\")\n};\n\npp$5.parseProperty = function(isPattern, refDestructuringErrors) {\n  var prop = this.startNode(), isGenerator, isAsync, startPos, startLoc;\n  if (this.options.ecmaVersion >= 9 && this.eat(types$1.ellipsis)) {\n    if (isPattern) {\n      prop.argument = this.parseIdent(false);\n      if (this.type === types$1.comma) {\n        this.raise(this.start, \"Comma is not permitted after the rest element\");\n      }\n      return this.finishNode(prop, \"RestElement\")\n    }\n    // Parse argument.\n    prop.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n    // To disallow trailing comma via `this.toAssignable()`.\n    if (this.type === types$1.comma && refDestructuringErrors && refDestructuringErrors.trailingComma < 0) {\n      refDestructuringErrors.trailingComma = this.start;\n    }\n    // Finish\n    return this.finishNode(prop, \"SpreadElement\")\n  }\n  if (this.options.ecmaVersion >= 6) {\n    prop.method = false;\n    prop.shorthand = false;\n    if (isPattern || refDestructuringErrors) {\n      startPos = this.start;\n      startLoc = this.startLoc;\n    }\n    if (!isPattern)\n      { isGenerator = this.eat(types$1.star); }\n  }\n  var containsEsc = this.containsEsc;\n  this.parsePropertyName(prop);\n  if (!isPattern && !containsEsc && this.options.ecmaVersion >= 8 && !isGenerator && this.isAsyncProp(prop)) {\n    isAsync = true;\n    isGenerator = this.options.ecmaVersion >= 9 && this.eat(types$1.star);\n    this.parsePropertyName(prop);\n  } else {\n    isAsync = false;\n  }\n  this.parsePropertyValue(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc);\n  return this.finishNode(prop, \"Property\")\n};\n\npp$5.parsePropertyValue = function(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc) {\n  if ((isGenerator || isAsync) && this.type === types$1.colon)\n    { this.unexpected(); }\n\n  if (this.eat(types$1.colon)) {\n    prop.value = isPattern ? this.parseMaybeDefault(this.start, this.startLoc) : this.parseMaybeAssign(false, refDestructuringErrors);\n    prop.kind = \"init\";\n  } else if (this.options.ecmaVersion >= 6 && this.type === types$1.parenL) {\n    if (isPattern) { this.unexpected(); }\n    prop.kind = \"init\";\n    prop.method = true;\n    prop.value = this.parseMethod(isGenerator, isAsync);\n  } else if (!isPattern && !containsEsc &&\n             this.options.ecmaVersion >= 5 && !prop.computed && prop.key.type === \"Identifier\" &&\n             (prop.key.name === \"get\" || prop.key.name === \"set\") &&\n             (this.type !== types$1.comma && this.type !== types$1.braceR && this.type !== types$1.eq)) {\n    if (isGenerator || isAsync) { this.unexpected(); }\n    prop.kind = prop.key.name;\n    this.parsePropertyName(prop);\n    prop.value = this.parseMethod(false);\n    var paramCount = prop.kind === \"get\" ? 0 : 1;\n    if (prop.value.params.length !== paramCount) {\n      var start = prop.value.start;\n      if (prop.kind === \"get\")\n        { this.raiseRecoverable(start, \"getter should have no params\"); }\n      else\n        { this.raiseRecoverable(start, \"setter should have exactly one param\"); }\n    } else {\n      if (prop.kind === \"set\" && prop.value.params[0].type === \"RestElement\")\n        { this.raiseRecoverable(prop.value.params[0].start, \"Setter cannot use rest params\"); }\n    }\n  } else if (this.options.ecmaVersion >= 6 && !prop.computed && prop.key.type === \"Identifier\") {\n    if (isGenerator || isAsync) { this.unexpected(); }\n    this.checkUnreserved(prop.key);\n    if (prop.key.name === \"await\" && !this.awaitIdentPos)\n      { this.awaitIdentPos = startPos; }\n    prop.kind = \"init\";\n    if (isPattern) {\n      prop.value = this.parseMaybeDefault(startPos, startLoc, this.copyNode(prop.key));\n    } else if (this.type === types$1.eq && refDestructuringErrors) {\n      if (refDestructuringErrors.shorthandAssign < 0)\n        { refDestructuringErrors.shorthandAssign = this.start; }\n      prop.value = this.parseMaybeDefault(startPos, startLoc, this.copyNode(prop.key));\n    } else {\n      prop.value = this.copyNode(prop.key);\n    }\n    prop.shorthand = true;\n  } else { this.unexpected(); }\n};\n\npp$5.parsePropertyName = function(prop) {\n  if (this.options.ecmaVersion >= 6) {\n    if (this.eat(types$1.bracketL)) {\n      prop.computed = true;\n      prop.key = this.parseMaybeAssign();\n      this.expect(types$1.bracketR);\n      return prop.key\n    } else {\n      prop.computed = false;\n    }\n  }\n  return prop.key = this.type === types$1.num || this.type === types$1.string ? this.parseExprAtom() : this.parseIdent(this.options.allowReserved !== \"never\")\n};\n\n// Initialize empty function node.\n\npp$5.initFunction = function(node) {\n  node.id = null;\n  if (this.options.ecmaVersion >= 6) { node.generator = node.expression = false; }\n  if (this.options.ecmaVersion >= 8) { node.async = false; }\n};\n\n// Parse object or class method.\n\npp$5.parseMethod = function(isGenerator, isAsync, allowDirectSuper) {\n  var node = this.startNode(), oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n\n  this.initFunction(node);\n  if (this.options.ecmaVersion >= 6)\n    { node.generator = isGenerator; }\n  if (this.options.ecmaVersion >= 8)\n    { node.async = !!isAsync; }\n\n  this.yieldPos = 0;\n  this.awaitPos = 0;\n  this.awaitIdentPos = 0;\n  this.enterScope(functionFlags(isAsync, node.generator) | SCOPE_SUPER | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));\n\n  this.expect(types$1.parenL);\n  node.params = this.parseBindingList(types$1.parenR, false, this.options.ecmaVersion >= 8);\n  this.checkYieldAwaitInDefaultParams();\n  this.parseFunctionBody(node, false, true, false);\n\n  this.yieldPos = oldYieldPos;\n  this.awaitPos = oldAwaitPos;\n  this.awaitIdentPos = oldAwaitIdentPos;\n  return this.finishNode(node, \"FunctionExpression\")\n};\n\n// Parse arrow function expression with given parameters.\n\npp$5.parseArrowExpression = function(node, params, isAsync, forInit) {\n  var oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n\n  this.enterScope(functionFlags(isAsync, false) | SCOPE_ARROW);\n  this.initFunction(node);\n  if (this.options.ecmaVersion >= 8) { node.async = !!isAsync; }\n\n  this.yieldPos = 0;\n  this.awaitPos = 0;\n  this.awaitIdentPos = 0;\n\n  node.params = this.toAssignableList(params, true);\n  this.parseFunctionBody(node, true, false, forInit);\n\n  this.yieldPos = oldYieldPos;\n  this.awaitPos = oldAwaitPos;\n  this.awaitIdentPos = oldAwaitIdentPos;\n  return this.finishNode(node, \"ArrowFunctionExpression\")\n};\n\n// Parse function body and check parameters.\n\npp$5.parseFunctionBody = function(node, isArrowFunction, isMethod, forInit) {\n  var isExpression = isArrowFunction && this.type !== types$1.braceL;\n  var oldStrict = this.strict, useStrict = false;\n\n  if (isExpression) {\n    node.body = this.parseMaybeAssign(forInit);\n    node.expression = true;\n    this.checkParams(node, false);\n  } else {\n    var nonSimple = this.options.ecmaVersion >= 7 && !this.isSimpleParamList(node.params);\n    if (!oldStrict || nonSimple) {\n      useStrict = this.strictDirective(this.end);\n      // If this is a strict mode function, verify that argument names\n      // are not repeated, and it does not try to bind the words `eval`\n      // or `arguments`.\n      if (useStrict && nonSimple)\n        { this.raiseRecoverable(node.start, \"Illegal 'use strict' directive in function with non-simple parameter list\"); }\n    }\n    // Start a new scope with regard to labels and the `inFunction`\n    // flag (restore them to their old value afterwards).\n    var oldLabels = this.labels;\n    this.labels = [];\n    if (useStrict) { this.strict = true; }\n\n    // Add the params to varDeclaredNames to ensure that an error is thrown\n    // if a let/const declaration in the function clashes with one of the params.\n    this.checkParams(node, !oldStrict && !useStrict && !isArrowFunction && !isMethod && this.isSimpleParamList(node.params));\n    // Ensure the function name isn't a forbidden identifier in strict mode, e.g. 'eval'\n    if (this.strict && node.id) { this.checkLValSimple(node.id, BIND_OUTSIDE); }\n    node.body = this.parseBlock(false, undefined, useStrict && !oldStrict);\n    node.expression = false;\n    this.adaptDirectivePrologue(node.body.body);\n    this.labels = oldLabels;\n  }\n  this.exitScope();\n};\n\npp$5.isSimpleParamList = function(params) {\n  for (var i = 0, list = params; i < list.length; i += 1)\n    {\n    var param = list[i];\n\n    if (param.type !== \"Identifier\") { return false\n  } }\n  return true\n};\n\n// Checks function params for various disallowed patterns such as using \"eval\"\n// or \"arguments\" and duplicate parameters.\n\npp$5.checkParams = function(node, allowDuplicates) {\n  var nameHash = Object.create(null);\n  for (var i = 0, list = node.params; i < list.length; i += 1)\n    {\n    var param = list[i];\n\n    this.checkLValInnerPattern(param, BIND_VAR, allowDuplicates ? null : nameHash);\n  }\n};\n\n// Parses a comma-separated list of expressions, and returns them as\n// an array. `close` is the token type that ends the list, and\n// `allowEmpty` can be turned on to allow subsequent commas with\n// nothing in between them to be parsed as `null` (which is needed\n// for array literals).\n\npp$5.parseExprList = function(close, allowTrailingComma, allowEmpty, refDestructuringErrors) {\n  var elts = [], first = true;\n  while (!this.eat(close)) {\n    if (!first) {\n      this.expect(types$1.comma);\n      if (allowTrailingComma && this.afterTrailingComma(close)) { break }\n    } else { first = false; }\n\n    var elt = (void 0);\n    if (allowEmpty && this.type === types$1.comma)\n      { elt = null; }\n    else if (this.type === types$1.ellipsis) {\n      elt = this.parseSpread(refDestructuringErrors);\n      if (refDestructuringErrors && this.type === types$1.comma && refDestructuringErrors.trailingComma < 0)\n        { refDestructuringErrors.trailingComma = this.start; }\n    } else {\n      elt = this.parseMaybeAssign(false, refDestructuringErrors);\n    }\n    elts.push(elt);\n  }\n  return elts\n};\n\npp$5.checkUnreserved = function(ref) {\n  var start = ref.start;\n  var end = ref.end;\n  var name = ref.name;\n\n  if (this.inGenerator && name === \"yield\")\n    { this.raiseRecoverable(start, \"Cannot use 'yield' as identifier inside a generator\"); }\n  if (this.inAsync && name === \"await\")\n    { this.raiseRecoverable(start, \"Cannot use 'await' as identifier inside an async function\"); }\n  if (this.currentThisScope().inClassFieldInit && name === \"arguments\")\n    { this.raiseRecoverable(start, \"Cannot use 'arguments' in class field initializer\"); }\n  if (this.inClassStaticBlock && (name === \"arguments\" || name === \"await\"))\n    { this.raise(start, (\"Cannot use \" + name + \" in class static initialization block\")); }\n  if (this.keywords.test(name))\n    { this.raise(start, (\"Unexpected keyword '\" + name + \"'\")); }\n  if (this.options.ecmaVersion < 6 &&\n    this.input.slice(start, end).indexOf(\"\\\\\") !== -1) { return }\n  var re = this.strict ? this.reservedWordsStrict : this.reservedWords;\n  if (re.test(name)) {\n    if (!this.inAsync && name === \"await\")\n      { this.raiseRecoverable(start, \"Cannot use keyword 'await' outside an async function\"); }\n    this.raiseRecoverable(start, (\"The keyword '\" + name + \"' is reserved\"));\n  }\n};\n\n// Parse the next token as an identifier. If `liberal` is true (used\n// when parsing properties), it will also convert keywords into\n// identifiers.\n\npp$5.parseIdent = function(liberal) {\n  var node = this.startNode();\n  if (this.type === types$1.name) {\n    node.name = this.value;\n  } else if (this.type.keyword) {\n    node.name = this.type.keyword;\n\n    // To fix https://github.com/acornjs/acorn/issues/575\n    // `class` and `function` keywords push new context into this.context.\n    // But there is no chance to pop the context if the keyword is consumed as an identifier such as a property name.\n    // If the previous token is a dot, this does not apply because the context-managing code already ignored the keyword\n    if ((node.name === \"class\" || node.name === \"function\") &&\n        (this.lastTokEnd !== this.lastTokStart + 1 || this.input.charCodeAt(this.lastTokStart) !== 46)) {\n      this.context.pop();\n    }\n  } else {\n    this.unexpected();\n  }\n  this.next(!!liberal);\n  this.finishNode(node, \"Identifier\");\n  if (!liberal) {\n    this.checkUnreserved(node);\n    if (node.name === \"await\" && !this.awaitIdentPos)\n      { this.awaitIdentPos = node.start; }\n  }\n  return node\n};\n\npp$5.parsePrivateIdent = function() {\n  var node = this.startNode();\n  if (this.type === types$1.privateId) {\n    node.name = this.value;\n  } else {\n    this.unexpected();\n  }\n  this.next();\n  this.finishNode(node, \"PrivateIdentifier\");\n\n  // For validating existence\n  if (this.privateNameStack.length === 0) {\n    this.raise(node.start, (\"Private field '#\" + (node.name) + \"' must be declared in an enclosing class\"));\n  } else {\n    this.privateNameStack[this.privateNameStack.length - 1].used.push(node);\n  }\n\n  return node\n};\n\n// Parses yield expression inside generator.\n\npp$5.parseYield = function(forInit) {\n  if (!this.yieldPos) { this.yieldPos = this.start; }\n\n  var node = this.startNode();\n  this.next();\n  if (this.type === types$1.semi || this.canInsertSemicolon() || (this.type !== types$1.star && !this.type.startsExpr)) {\n    node.delegate = false;\n    node.argument = null;\n  } else {\n    node.delegate = this.eat(types$1.star);\n    node.argument = this.parseMaybeAssign(forInit);\n  }\n  return this.finishNode(node, \"YieldExpression\")\n};\n\npp$5.parseAwait = function(forInit) {\n  if (!this.awaitPos) { this.awaitPos = this.start; }\n\n  var node = this.startNode();\n  this.next();\n  node.argument = this.parseMaybeUnary(null, true, false, forInit);\n  return this.finishNode(node, \"AwaitExpression\")\n};\n\nvar pp$4 = Parser.prototype;\n\n// This function is used to raise exceptions on parse errors. It\n// takes an offset integer (into the current `input`) to indicate\n// the location of the error, attaches the position to the end\n// of the error message, and then raises a `SyntaxError` with that\n// message.\n\npp$4.raise = function(pos, message) {\n  var loc = getLineInfo(this.input, pos);\n  message += \" (\" + loc.line + \":\" + loc.column + \")\";\n  var err = new SyntaxError(message);\n  err.pos = pos; err.loc = loc; err.raisedAt = this.pos;\n  throw err\n};\n\npp$4.raiseRecoverable = pp$4.raise;\n\npp$4.curPosition = function() {\n  if (this.options.locations) {\n    return new Position(this.curLine, this.pos - this.lineStart)\n  }\n};\n\nvar pp$3 = Parser.prototype;\n\nvar Scope = function Scope(flags) {\n  this.flags = flags;\n  // A list of var-declared names in the current lexical scope\n  this.var = [];\n  // A list of lexically-declared names in the current lexical scope\n  this.lexical = [];\n  // A list of lexically-declared FunctionDeclaration names in the current lexical scope\n  this.functions = [];\n  // A switch to disallow the identifier reference 'arguments'\n  this.inClassFieldInit = false;\n};\n\n// The functions in this module keep track of declared variables in the current scope in order to detect duplicate variable names.\n\npp$3.enterScope = function(flags) {\n  this.scopeStack.push(new Scope(flags));\n};\n\npp$3.exitScope = function() {\n  this.scopeStack.pop();\n};\n\n// The spec says:\n// > At the top level of a function, or script, function declarations are\n// > treated like var declarations rather than like lexical declarations.\npp$3.treatFunctionsAsVarInScope = function(scope) {\n  return (scope.flags & SCOPE_FUNCTION) || !this.inModule && (scope.flags & SCOPE_TOP)\n};\n\npp$3.declareName = function(name, bindingType, pos) {\n  var redeclared = false;\n  if (bindingType === BIND_LEXICAL) {\n    var scope = this.currentScope();\n    redeclared = scope.lexical.indexOf(name) > -1 || scope.functions.indexOf(name) > -1 || scope.var.indexOf(name) > -1;\n    scope.lexical.push(name);\n    if (this.inModule && (scope.flags & SCOPE_TOP))\n      { delete this.undefinedExports[name]; }\n  } else if (bindingType === BIND_SIMPLE_CATCH) {\n    var scope$1 = this.currentScope();\n    scope$1.lexical.push(name);\n  } else if (bindingType === BIND_FUNCTION) {\n    var scope$2 = this.currentScope();\n    if (this.treatFunctionsAsVar)\n      { redeclared = scope$2.lexical.indexOf(name) > -1; }\n    else\n      { redeclared = scope$2.lexical.indexOf(name) > -1 || scope$2.var.indexOf(name) > -1; }\n    scope$2.functions.push(name);\n  } else {\n    for (var i = this.scopeStack.length - 1; i >= 0; --i) {\n      var scope$3 = this.scopeStack[i];\n      if (scope$3.lexical.indexOf(name) > -1 && !((scope$3.flags & SCOPE_SIMPLE_CATCH) && scope$3.lexical[0] === name) ||\n          !this.treatFunctionsAsVarInScope(scope$3) && scope$3.functions.indexOf(name) > -1) {\n        redeclared = true;\n        break\n      }\n      scope$3.var.push(name);\n      if (this.inModule && (scope$3.flags & SCOPE_TOP))\n        { delete this.undefinedExports[name]; }\n      if (scope$3.flags & SCOPE_VAR) { break }\n    }\n  }\n  if (redeclared) { this.raiseRecoverable(pos, (\"Identifier '\" + name + \"' has already been declared\")); }\n};\n\npp$3.checkLocalExport = function(id) {\n  // scope.functions must be empty as Module code is always strict.\n  if (this.scopeStack[0].lexical.indexOf(id.name) === -1 &&\n      this.scopeStack[0].var.indexOf(id.name) === -1) {\n    this.undefinedExports[id.name] = id;\n  }\n};\n\npp$3.currentScope = function() {\n  return this.scopeStack[this.scopeStack.length - 1]\n};\n\npp$3.currentVarScope = function() {\n  for (var i = this.scopeStack.length - 1;; i--) {\n    var scope = this.scopeStack[i];\n    if (scope.flags & SCOPE_VAR) { return scope }\n  }\n};\n\n// Could be useful for `this`, `new.target`, `super()`, `super.property`, and `super[property]`.\npp$3.currentThisScope = function() {\n  for (var i = this.scopeStack.length - 1;; i--) {\n    var scope = this.scopeStack[i];\n    if (scope.flags & SCOPE_VAR && !(scope.flags & SCOPE_ARROW)) { return scope }\n  }\n};\n\nvar Node = function Node(parser, pos, loc) {\n  this.type = \"\";\n  this.start = pos;\n  this.end = 0;\n  if (parser.options.locations)\n    { this.loc = new SourceLocation(parser, loc); }\n  if (parser.options.directSourceFile)\n    { this.sourceFile = parser.options.directSourceFile; }\n  if (parser.options.ranges)\n    { this.range = [pos, 0]; }\n};\n\n// Start an AST node, attaching a start offset.\n\nvar pp$2 = Parser.prototype;\n\npp$2.startNode = function() {\n  return new Node(this, this.start, this.startLoc)\n};\n\npp$2.startNodeAt = function(pos, loc) {\n  return new Node(this, pos, loc)\n};\n\n// Finish an AST node, adding `type` and `end` properties.\n\nfunction finishNodeAt(node, type, pos, loc) {\n  node.type = type;\n  node.end = pos;\n  if (this.options.locations)\n    { node.loc.end = loc; }\n  if (this.options.ranges)\n    { node.range[1] = pos; }\n  return node\n}\n\npp$2.finishNode = function(node, type) {\n  return finishNodeAt.call(this, node, type, this.lastTokEnd, this.lastTokEndLoc)\n};\n\n// Finish node at given position\n\npp$2.finishNodeAt = function(node, type, pos, loc) {\n  return finishNodeAt.call(this, node, type, pos, loc)\n};\n\npp$2.copyNode = function(node) {\n  var newNode = new Node(this, node.start, this.startLoc);\n  for (var prop in node) { newNode[prop] = node[prop]; }\n  return newNode\n};\n\n// This file contains Unicode properties extracted from the ECMAScript specification.\n// The lists are extracted like so:\n// $$('#table-binary-unicode-properties > figure > table > tbody > tr > td:nth-child(1) code').map(el => el.innerText)\n\n// #table-binary-unicode-properties\nvar ecma9BinaryProperties = \"ASCII ASCII_Hex_Digit AHex Alphabetic Alpha Any Assigned Bidi_Control Bidi_C Bidi_Mirrored Bidi_M Case_Ignorable CI Cased Changes_When_Casefolded CWCF Changes_When_Casemapped CWCM Changes_When_Lowercased CWL Changes_When_NFKC_Casefolded CWKCF Changes_When_Titlecased CWT Changes_When_Uppercased CWU Dash Default_Ignorable_Code_Point DI Deprecated Dep Diacritic Dia Emoji Emoji_Component Emoji_Modifier Emoji_Modifier_Base Emoji_Presentation Extender Ext Grapheme_Base Gr_Base Grapheme_Extend Gr_Ext Hex_Digit Hex IDS_Binary_Operator IDSB IDS_Trinary_Operator IDST ID_Continue IDC ID_Start IDS Ideographic Ideo Join_Control Join_C Logical_Order_Exception LOE Lowercase Lower Math Noncharacter_Code_Point NChar Pattern_Syntax Pat_Syn Pattern_White_Space Pat_WS Quotation_Mark QMark Radical Regional_Indicator RI Sentence_Terminal STerm Soft_Dotted SD Terminal_Punctuation Term Unified_Ideograph UIdeo Uppercase Upper Variation_Selector VS White_Space space XID_Continue XIDC XID_Start XIDS\";\nvar ecma10BinaryProperties = ecma9BinaryProperties + \" Extended_Pictographic\";\nvar ecma11BinaryProperties = ecma10BinaryProperties;\nvar ecma12BinaryProperties = ecma11BinaryProperties + \" EBase EComp EMod EPres ExtPict\";\nvar ecma13BinaryProperties = ecma12BinaryProperties;\nvar ecma14BinaryProperties = ecma13BinaryProperties;\n\nvar unicodeBinaryProperties = {\n  9: ecma9BinaryProperties,\n  10: ecma10BinaryProperties,\n  11: ecma11BinaryProperties,\n  12: ecma12BinaryProperties,\n  13: ecma13BinaryProperties,\n  14: ecma14BinaryProperties\n};\n\n// #table-unicode-general-category-values\nvar unicodeGeneralCategoryValues = \"Cased_Letter LC Close_Punctuation Pe Connector_Punctuation Pc Control Cc cntrl Currency_Symbol Sc Dash_Punctuation Pd Decimal_Number Nd digit Enclosing_Mark Me Final_Punctuation Pf Format Cf Initial_Punctuation Pi Letter L Letter_Number Nl Line_Separator Zl Lowercase_Letter Ll Mark M Combining_Mark Math_Symbol Sm Modifier_Letter Lm Modifier_Symbol Sk Nonspacing_Mark Mn Number N Open_Punctuation Ps Other C Other_Letter Lo Other_Number No Other_Punctuation Po Other_Symbol So Paragraph_Separator Zp Private_Use Co Punctuation P punct Separator Z Space_Separator Zs Spacing_Mark Mc Surrogate Cs Symbol S Titlecase_Letter Lt Unassigned Cn Uppercase_Letter Lu\";\n\n// #table-unicode-script-values\nvar ecma9ScriptValues = \"Adlam Adlm Ahom Anatolian_Hieroglyphs Hluw Arabic Arab Armenian Armn Avestan Avst Balinese Bali Bamum Bamu Bassa_Vah Bass Batak Batk Bengali Beng Bhaiksuki Bhks Bopomofo Bopo Brahmi Brah Braille Brai Buginese Bugi Buhid Buhd Canadian_Aboriginal Cans Carian Cari Caucasian_Albanian Aghb Chakma Cakm Cham Cham Cherokee Cher Common Zyyy Coptic Copt Qaac Cuneiform Xsux Cypriot Cprt Cyrillic Cyrl Deseret Dsrt Devanagari Deva Duployan Dupl Egyptian_Hieroglyphs Egyp Elbasan Elba Ethiopic Ethi Georgian Geor Glagolitic Glag Gothic Goth Grantha Gran Greek Grek Gujarati Gujr Gurmukhi Guru Han Hani Hangul Hang Hanunoo Hano Hatran Hatr Hebrew Hebr Hiragana Hira Imperial_Aramaic Armi Inherited Zinh Qaai Inscriptional_Pahlavi Phli Inscriptional_Parthian Prti Javanese Java Kaithi Kthi Kannada Knda Katakana Kana Kayah_Li Kali Kharoshthi Khar Khmer Khmr Khojki Khoj Khudawadi Sind Lao Laoo Latin Latn Lepcha Lepc Limbu Limb Linear_A Lina Linear_B Linb Lisu Lisu Lycian Lyci Lydian Lydi Mahajani Mahj Malayalam Mlym Mandaic Mand Manichaean Mani Marchen Marc Masaram_Gondi Gonm Meetei_Mayek Mtei Mende_Kikakui Mend Meroitic_Cursive Merc Meroitic_Hieroglyphs Mero Miao Plrd Modi Mongolian Mong Mro Mroo Multani Mult Myanmar Mymr Nabataean Nbat New_Tai_Lue Talu Newa Newa Nko Nkoo Nushu Nshu Ogham Ogam Ol_Chiki Olck Old_Hungarian Hung Old_Italic Ital Old_North_Arabian Narb Old_Permic Perm Old_Persian Xpeo Old_South_Arabian Sarb Old_Turkic Orkh Oriya Orya Osage Osge Osmanya Osma Pahawh_Hmong Hmng Palmyrene Palm Pau_Cin_Hau Pauc Phags_Pa Phag Phoenician Phnx Psalter_Pahlavi Phlp Rejang Rjng Runic Runr Samaritan Samr Saurashtra Saur Sharada Shrd Shavian Shaw Siddham Sidd SignWriting Sgnw Sinhala Sinh Sora_Sompeng Sora Soyombo Soyo Sundanese Sund Syloti_Nagri Sylo Syriac Syrc Tagalog Tglg Tagbanwa Tagb Tai_Le Tale Tai_Tham Lana Tai_Viet Tavt Takri Takr Tamil Taml Tangut Tang Telugu Telu Thaana Thaa Thai Thai Tibetan Tibt Tifinagh Tfng Tirhuta Tirh Ugaritic Ugar Vai Vaii Warang_Citi Wara Yi Yiii Zanabazar_Square Zanb\";\nvar ecma10ScriptValues = ecma9ScriptValues + \" Dogra Dogr Gunjala_Gondi Gong Hanifi_Rohingya Rohg Makasar Maka Medefaidrin Medf Old_Sogdian Sogo Sogdian Sogd\";\nvar ecma11ScriptValues = ecma10ScriptValues + \" Elymaic Elym Nandinagari Nand Nyiakeng_Puachue_Hmong Hmnp Wancho Wcho\";\nvar ecma12ScriptValues = ecma11ScriptValues + \" Chorasmian Chrs Diak Dives_Akuru Khitan_Small_Script Kits Yezi Yezidi\";\nvar ecma13ScriptValues = ecma12ScriptValues + \" Cypro_Minoan Cpmn Old_Uyghur Ougr Tangsa Tnsa Toto Vithkuqi Vith\";\nvar ecma14ScriptValues = ecma13ScriptValues + \" Kawi Nag_Mundari Nagm\";\n\nvar unicodeScriptValues = {\n  9: ecma9ScriptValues,\n  10: ecma10ScriptValues,\n  11: ecma11ScriptValues,\n  12: ecma12ScriptValues,\n  13: ecma13ScriptValues,\n  14: ecma14ScriptValues\n};\n\nvar data = {};\nfunction buildUnicodeData(ecmaVersion) {\n  var d = data[ecmaVersion] = {\n    binary: wordsRegexp(unicodeBinaryProperties[ecmaVersion] + \" \" + unicodeGeneralCategoryValues),\n    nonBinary: {\n      General_Category: wordsRegexp(unicodeGeneralCategoryValues),\n      Script: wordsRegexp(unicodeScriptValues[ecmaVersion])\n    }\n  };\n  d.nonBinary.Script_Extensions = d.nonBinary.Script;\n\n  d.nonBinary.gc = d.nonBinary.General_Category;\n  d.nonBinary.sc = d.nonBinary.Script;\n  d.nonBinary.scx = d.nonBinary.Script_Extensions;\n}\n\nfor (var i = 0, list = [9, 10, 11, 12, 13, 14]; i < list.length; i += 1) {\n  var ecmaVersion = list[i];\n\n  buildUnicodeData(ecmaVersion);\n}\n\nvar pp$1 = Parser.prototype;\n\nvar RegExpValidationState = function RegExpValidationState(parser) {\n  this.parser = parser;\n  this.validFlags = \"gim\" + (parser.options.ecmaVersion >= 6 ? \"uy\" : \"\") + (parser.options.ecmaVersion >= 9 ? \"s\" : \"\") + (parser.options.ecmaVersion >= 13 ? \"d\" : \"\");\n  this.unicodeProperties = data[parser.options.ecmaVersion >= 14 ? 14 : parser.options.ecmaVersion];\n  this.source = \"\";\n  this.flags = \"\";\n  this.start = 0;\n  this.switchU = false;\n  this.switchN = false;\n  this.pos = 0;\n  this.lastIntValue = 0;\n  this.lastStringValue = \"\";\n  this.lastAssertionIsQuantifiable = false;\n  this.numCapturingParens = 0;\n  this.maxBackReference = 0;\n  this.groupNames = [];\n  this.backReferenceNames = [];\n};\n\nRegExpValidationState.prototype.reset = function reset (start, pattern, flags) {\n  var unicode = flags.indexOf(\"u\") !== -1;\n  this.start = start | 0;\n  this.source = pattern + \"\";\n  this.flags = flags;\n  this.switchU = unicode && this.parser.options.ecmaVersion >= 6;\n  this.switchN = unicode && this.parser.options.ecmaVersion >= 9;\n};\n\nRegExpValidationState.prototype.raise = function raise (message) {\n  this.parser.raiseRecoverable(this.start, (\"Invalid regular expression: /\" + (this.source) + \"/: \" + message));\n};\n\n// If u flag is given, this returns the code point at the index (it combines a surrogate pair).\n// Otherwise, this returns the code unit of the index (can be a part of a surrogate pair).\nRegExpValidationState.prototype.at = function at (i, forceU) {\n    if ( forceU === void 0 ) forceU = false;\n\n  var s = this.source;\n  var l = s.length;\n  if (i >= l) {\n    return -1\n  }\n  var c = s.charCodeAt(i);\n  if (!(forceU || this.switchU) || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l) {\n    return c\n  }\n  var next = s.charCodeAt(i + 1);\n  return next >= 0xDC00 && next <= 0xDFFF ? (c << 10) + next - 0x35FDC00 : c\n};\n\nRegExpValidationState.prototype.nextIndex = function nextIndex (i, forceU) {\n    if ( forceU === void 0 ) forceU = false;\n\n  var s = this.source;\n  var l = s.length;\n  if (i >= l) {\n    return l\n  }\n  var c = s.charCodeAt(i), next;\n  if (!(forceU || this.switchU) || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l ||\n      (next = s.charCodeAt(i + 1)) < 0xDC00 || next > 0xDFFF) {\n    return i + 1\n  }\n  return i + 2\n};\n\nRegExpValidationState.prototype.current = function current (forceU) {\n    if ( forceU === void 0 ) forceU = false;\n\n  return this.at(this.pos, forceU)\n};\n\nRegExpValidationState.prototype.lookahead = function lookahead (forceU) {\n    if ( forceU === void 0 ) forceU = false;\n\n  return this.at(this.nextIndex(this.pos, forceU), forceU)\n};\n\nRegExpValidationState.prototype.advance = function advance (forceU) {\n    if ( forceU === void 0 ) forceU = false;\n\n  this.pos = this.nextIndex(this.pos, forceU);\n};\n\nRegExpValidationState.prototype.eat = function eat (ch, forceU) {\n    if ( forceU === void 0 ) forceU = false;\n\n  if (this.current(forceU) === ch) {\n    this.advance(forceU);\n    return true\n  }\n  return false\n};\n\n/**\n * Validate the flags part of a given RegExpLiteral.\n *\n * @param {RegExpValidationState} state The state to validate RegExp.\n * @returns {void}\n */\npp$1.validateRegExpFlags = function(state) {\n  var validFlags = state.validFlags;\n  var flags = state.flags;\n\n  for (var i = 0; i < flags.length; i++) {\n    var flag = flags.charAt(i);\n    if (validFlags.indexOf(flag) === -1) {\n      this.raise(state.start, \"Invalid regular expression flag\");\n    }\n    if (flags.indexOf(flag, i + 1) > -1) {\n      this.raise(state.start, \"Duplicate regular expression flag\");\n    }\n  }\n};\n\n/**\n * Validate the pattern part of a given RegExpLiteral.\n *\n * @param {RegExpValidationState} state The state to validate RegExp.\n * @returns {void}\n */\npp$1.validateRegExpPattern = function(state) {\n  this.regexp_pattern(state);\n\n  // The goal symbol for the parse is |Pattern[~U, ~N]|. If the result of\n  // parsing contains a |GroupName|, reparse with the goal symbol\n  // |Pattern[~U, +N]| and use this result instead. Throw a *SyntaxError*\n  // exception if _P_ did not conform to the grammar, if any elements of _P_\n  // were not matched by the parse, or if any Early Error conditions exist.\n  if (!state.switchN && this.options.ecmaVersion >= 9 && state.groupNames.length > 0) {\n    state.switchN = true;\n    this.regexp_pattern(state);\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Pattern\npp$1.regexp_pattern = function(state) {\n  state.pos = 0;\n  state.lastIntValue = 0;\n  state.lastStringValue = \"\";\n  state.lastAssertionIsQuantifiable = false;\n  state.numCapturingParens = 0;\n  state.maxBackReference = 0;\n  state.groupNames.length = 0;\n  state.backReferenceNames.length = 0;\n\n  this.regexp_disjunction(state);\n\n  if (state.pos !== state.source.length) {\n    // Make the same messages as V8.\n    if (state.eat(0x29 /* ) */)) {\n      state.raise(\"Unmatched ')'\");\n    }\n    if (state.eat(0x5D /* ] */) || state.eat(0x7D /* } */)) {\n      state.raise(\"Lone quantifier brackets\");\n    }\n  }\n  if (state.maxBackReference > state.numCapturingParens) {\n    state.raise(\"Invalid escape\");\n  }\n  for (var i = 0, list = state.backReferenceNames; i < list.length; i += 1) {\n    var name = list[i];\n\n    if (state.groupNames.indexOf(name) === -1) {\n      state.raise(\"Invalid named capture referenced\");\n    }\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Disjunction\npp$1.regexp_disjunction = function(state) {\n  this.regexp_alternative(state);\n  while (state.eat(0x7C /* | */)) {\n    this.regexp_alternative(state);\n  }\n\n  // Make the same message as V8.\n  if (this.regexp_eatQuantifier(state, true)) {\n    state.raise(\"Nothing to repeat\");\n  }\n  if (state.eat(0x7B /* { */)) {\n    state.raise(\"Lone quantifier brackets\");\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Alternative\npp$1.regexp_alternative = function(state) {\n  while (state.pos < state.source.length && this.regexp_eatTerm(state))\n    { }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Term\npp$1.regexp_eatTerm = function(state) {\n  if (this.regexp_eatAssertion(state)) {\n    // Handle `QuantifiableAssertion Quantifier` alternative.\n    // `state.lastAssertionIsQuantifiable` is true if the last eaten Assertion\n    // is a QuantifiableAssertion.\n    if (state.lastAssertionIsQuantifiable && this.regexp_eatQuantifier(state)) {\n      // Make the same message as V8.\n      if (state.switchU) {\n        state.raise(\"Invalid quantifier\");\n      }\n    }\n    return true\n  }\n\n  if (state.switchU ? this.regexp_eatAtom(state) : this.regexp_eatExtendedAtom(state)) {\n    this.regexp_eatQuantifier(state);\n    return true\n  }\n\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Assertion\npp$1.regexp_eatAssertion = function(state) {\n  var start = state.pos;\n  state.lastAssertionIsQuantifiable = false;\n\n  // ^, $\n  if (state.eat(0x5E /* ^ */) || state.eat(0x24 /* $ */)) {\n    return true\n  }\n\n  // \\b \\B\n  if (state.eat(0x5C /* \\ */)) {\n    if (state.eat(0x42 /* B */) || state.eat(0x62 /* b */)) {\n      return true\n    }\n    state.pos = start;\n  }\n\n  // Lookahead / Lookbehind\n  if (state.eat(0x28 /* ( */) && state.eat(0x3F /* ? */)) {\n    var lookbehind = false;\n    if (this.options.ecmaVersion >= 9) {\n      lookbehind = state.eat(0x3C /* < */);\n    }\n    if (state.eat(0x3D /* = */) || state.eat(0x21 /* ! */)) {\n      this.regexp_disjunction(state);\n      if (!state.eat(0x29 /* ) */)) {\n        state.raise(\"Unterminated group\");\n      }\n      state.lastAssertionIsQuantifiable = !lookbehind;\n      return true\n    }\n  }\n\n  state.pos = start;\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Quantifier\npp$1.regexp_eatQuantifier = function(state, noError) {\n  if ( noError === void 0 ) noError = false;\n\n  if (this.regexp_eatQuantifierPrefix(state, noError)) {\n    state.eat(0x3F /* ? */);\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-QuantifierPrefix\npp$1.regexp_eatQuantifierPrefix = function(state, noError) {\n  return (\n    state.eat(0x2A /* * */) ||\n    state.eat(0x2B /* + */) ||\n    state.eat(0x3F /* ? */) ||\n    this.regexp_eatBracedQuantifier(state, noError)\n  )\n};\npp$1.regexp_eatBracedQuantifier = function(state, noError) {\n  var start = state.pos;\n  if (state.eat(0x7B /* { */)) {\n    var min = 0, max = -1;\n    if (this.regexp_eatDecimalDigits(state)) {\n      min = state.lastIntValue;\n      if (state.eat(0x2C /* , */) && this.regexp_eatDecimalDigits(state)) {\n        max = state.lastIntValue;\n      }\n      if (state.eat(0x7D /* } */)) {\n        // SyntaxError in https://www.ecma-international.org/ecma-262/8.0/#sec-term\n        if (max !== -1 && max < min && !noError) {\n          state.raise(\"numbers out of order in {} quantifier\");\n        }\n        return true\n      }\n    }\n    if (state.switchU && !noError) {\n      state.raise(\"Incomplete quantifier\");\n    }\n    state.pos = start;\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Atom\npp$1.regexp_eatAtom = function(state) {\n  return (\n    this.regexp_eatPatternCharacters(state) ||\n    state.eat(0x2E /* . */) ||\n    this.regexp_eatReverseSolidusAtomEscape(state) ||\n    this.regexp_eatCharacterClass(state) ||\n    this.regexp_eatUncapturingGroup(state) ||\n    this.regexp_eatCapturingGroup(state)\n  )\n};\npp$1.regexp_eatReverseSolidusAtomEscape = function(state) {\n  var start = state.pos;\n  if (state.eat(0x5C /* \\ */)) {\n    if (this.regexp_eatAtomEscape(state)) {\n      return true\n    }\n    state.pos = start;\n  }\n  return false\n};\npp$1.regexp_eatUncapturingGroup = function(state) {\n  var start = state.pos;\n  if (state.eat(0x28 /* ( */)) {\n    if (state.eat(0x3F /* ? */) && state.eat(0x3A /* : */)) {\n      this.regexp_disjunction(state);\n      if (state.eat(0x29 /* ) */)) {\n        return true\n      }\n      state.raise(\"Unterminated group\");\n    }\n    state.pos = start;\n  }\n  return false\n};\npp$1.regexp_eatCapturingGroup = function(state) {\n  if (state.eat(0x28 /* ( */)) {\n    if (this.options.ecmaVersion >= 9) {\n      this.regexp_groupSpecifier(state);\n    } else if (state.current() === 0x3F /* ? */) {\n      state.raise(\"Invalid group\");\n    }\n    this.regexp_disjunction(state);\n    if (state.eat(0x29 /* ) */)) {\n      state.numCapturingParens += 1;\n      return true\n    }\n    state.raise(\"Unterminated group\");\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedAtom\npp$1.regexp_eatExtendedAtom = function(state) {\n  return (\n    state.eat(0x2E /* . */) ||\n    this.regexp_eatReverseSolidusAtomEscape(state) ||\n    this.regexp_eatCharacterClass(state) ||\n    this.regexp_eatUncapturingGroup(state) ||\n    this.regexp_eatCapturingGroup(state) ||\n    this.regexp_eatInvalidBracedQuantifier(state) ||\n    this.regexp_eatExtendedPatternCharacter(state)\n  )\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-InvalidBracedQuantifier\npp$1.regexp_eatInvalidBracedQuantifier = function(state) {\n  if (this.regexp_eatBracedQuantifier(state, true)) {\n    state.raise(\"Nothing to repeat\");\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-SyntaxCharacter\npp$1.regexp_eatSyntaxCharacter = function(state) {\n  var ch = state.current();\n  if (isSyntaxCharacter(ch)) {\n    state.lastIntValue = ch;\n    state.advance();\n    return true\n  }\n  return false\n};\nfunction isSyntaxCharacter(ch) {\n  return (\n    ch === 0x24 /* $ */ ||\n    ch >= 0x28 /* ( */ && ch <= 0x2B /* + */ ||\n    ch === 0x2E /* . */ ||\n    ch === 0x3F /* ? */ ||\n    ch >= 0x5B /* [ */ && ch <= 0x5E /* ^ */ ||\n    ch >= 0x7B /* { */ && ch <= 0x7D /* } */\n  )\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-PatternCharacter\n// But eat eager.\npp$1.regexp_eatPatternCharacters = function(state) {\n  var start = state.pos;\n  var ch = 0;\n  while ((ch = state.current()) !== -1 && !isSyntaxCharacter(ch)) {\n    state.advance();\n  }\n  return state.pos !== start\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedPatternCharacter\npp$1.regexp_eatExtendedPatternCharacter = function(state) {\n  var ch = state.current();\n  if (\n    ch !== -1 &&\n    ch !== 0x24 /* $ */ &&\n    !(ch >= 0x28 /* ( */ && ch <= 0x2B /* + */) &&\n    ch !== 0x2E /* . */ &&\n    ch !== 0x3F /* ? */ &&\n    ch !== 0x5B /* [ */ &&\n    ch !== 0x5E /* ^ */ &&\n    ch !== 0x7C /* | */\n  ) {\n    state.advance();\n    return true\n  }\n  return false\n};\n\n// GroupSpecifier ::\n//   [empty]\n//   `?` GroupName\npp$1.regexp_groupSpecifier = function(state) {\n  if (state.eat(0x3F /* ? */)) {\n    if (this.regexp_eatGroupName(state)) {\n      if (state.groupNames.indexOf(state.lastStringValue) !== -1) {\n        state.raise(\"Duplicate capture group name\");\n      }\n      state.groupNames.push(state.lastStringValue);\n      return\n    }\n    state.raise(\"Invalid group\");\n  }\n};\n\n// GroupName ::\n//   `<` RegExpIdentifierName `>`\n// Note: this updates `state.lastStringValue` property with the eaten name.\npp$1.regexp_eatGroupName = function(state) {\n  state.lastStringValue = \"\";\n  if (state.eat(0x3C /* < */)) {\n    if (this.regexp_eatRegExpIdentifierName(state) && state.eat(0x3E /* > */)) {\n      return true\n    }\n    state.raise(\"Invalid capture group name\");\n  }\n  return false\n};\n\n// RegExpIdentifierName ::\n//   RegExpIdentifierStart\n//   RegExpIdentifierName RegExpIdentifierPart\n// Note: this updates `state.lastStringValue` property with the eaten name.\npp$1.regexp_eatRegExpIdentifierName = function(state) {\n  state.lastStringValue = \"\";\n  if (this.regexp_eatRegExpIdentifierStart(state)) {\n    state.lastStringValue += codePointToString(state.lastIntValue);\n    while (this.regexp_eatRegExpIdentifierPart(state)) {\n      state.lastStringValue += codePointToString(state.lastIntValue);\n    }\n    return true\n  }\n  return false\n};\n\n// RegExpIdentifierStart ::\n//   UnicodeIDStart\n//   `$`\n//   `_`\n//   `\\` RegExpUnicodeEscapeSequence[+U]\npp$1.regexp_eatRegExpIdentifierStart = function(state) {\n  var start = state.pos;\n  var forceU = this.options.ecmaVersion >= 11;\n  var ch = state.current(forceU);\n  state.advance(forceU);\n\n  if (ch === 0x5C /* \\ */ && this.regexp_eatRegExpUnicodeEscapeSequence(state, forceU)) {\n    ch = state.lastIntValue;\n  }\n  if (isRegExpIdentifierStart(ch)) {\n    state.lastIntValue = ch;\n    return true\n  }\n\n  state.pos = start;\n  return false\n};\nfunction isRegExpIdentifierStart(ch) {\n  return isIdentifierStart(ch, true) || ch === 0x24 /* $ */ || ch === 0x5F /* _ */\n}\n\n// RegExpIdentifierPart ::\n//   UnicodeIDContinue\n//   `$`\n//   `_`\n//   `\\` RegExpUnicodeEscapeSequence[+U]\n//   <ZWNJ>\n//   <ZWJ>\npp$1.regexp_eatRegExpIdentifierPart = function(state) {\n  var start = state.pos;\n  var forceU = this.options.ecmaVersion >= 11;\n  var ch = state.current(forceU);\n  state.advance(forceU);\n\n  if (ch === 0x5C /* \\ */ && this.regexp_eatRegExpUnicodeEscapeSequence(state, forceU)) {\n    ch = state.lastIntValue;\n  }\n  if (isRegExpIdentifierPart(ch)) {\n    state.lastIntValue = ch;\n    return true\n  }\n\n  state.pos = start;\n  return false\n};\nfunction isRegExpIdentifierPart(ch) {\n  return isIdentifierChar(ch, true) || ch === 0x24 /* $ */ || ch === 0x5F /* _ */ || ch === 0x200C /* <ZWNJ> */ || ch === 0x200D /* <ZWJ> */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-AtomEscape\npp$1.regexp_eatAtomEscape = function(state) {\n  if (\n    this.regexp_eatBackReference(state) ||\n    this.regexp_eatCharacterClassEscape(state) ||\n    this.regexp_eatCharacterEscape(state) ||\n    (state.switchN && this.regexp_eatKGroupName(state))\n  ) {\n    return true\n  }\n  if (state.switchU) {\n    // Make the same message as V8.\n    if (state.current() === 0x63 /* c */) {\n      state.raise(\"Invalid unicode escape\");\n    }\n    state.raise(\"Invalid escape\");\n  }\n  return false\n};\npp$1.regexp_eatBackReference = function(state) {\n  var start = state.pos;\n  if (this.regexp_eatDecimalEscape(state)) {\n    var n = state.lastIntValue;\n    if (state.switchU) {\n      // For SyntaxError in https://www.ecma-international.org/ecma-262/8.0/#sec-atomescape\n      if (n > state.maxBackReference) {\n        state.maxBackReference = n;\n      }\n      return true\n    }\n    if (n <= state.numCapturingParens) {\n      return true\n    }\n    state.pos = start;\n  }\n  return false\n};\npp$1.regexp_eatKGroupName = function(state) {\n  if (state.eat(0x6B /* k */)) {\n    if (this.regexp_eatGroupName(state)) {\n      state.backReferenceNames.push(state.lastStringValue);\n      return true\n    }\n    state.raise(\"Invalid named reference\");\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-CharacterEscape\npp$1.regexp_eatCharacterEscape = function(state) {\n  return (\n    this.regexp_eatControlEscape(state) ||\n    this.regexp_eatCControlLetter(state) ||\n    this.regexp_eatZero(state) ||\n    this.regexp_eatHexEscapeSequence(state) ||\n    this.regexp_eatRegExpUnicodeEscapeSequence(state, false) ||\n    (!state.switchU && this.regexp_eatLegacyOctalEscapeSequence(state)) ||\n    this.regexp_eatIdentityEscape(state)\n  )\n};\npp$1.regexp_eatCControlLetter = function(state) {\n  var start = state.pos;\n  if (state.eat(0x63 /* c */)) {\n    if (this.regexp_eatControlLetter(state)) {\n      return true\n    }\n    state.pos = start;\n  }\n  return false\n};\npp$1.regexp_eatZero = function(state) {\n  if (state.current() === 0x30 /* 0 */ && !isDecimalDigit(state.lookahead())) {\n    state.lastIntValue = 0;\n    state.advance();\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ControlEscape\npp$1.regexp_eatControlEscape = function(state) {\n  var ch = state.current();\n  if (ch === 0x74 /* t */) {\n    state.lastIntValue = 0x09; /* \\t */\n    state.advance();\n    return true\n  }\n  if (ch === 0x6E /* n */) {\n    state.lastIntValue = 0x0A; /* \\n */\n    state.advance();\n    return true\n  }\n  if (ch === 0x76 /* v */) {\n    state.lastIntValue = 0x0B; /* \\v */\n    state.advance();\n    return true\n  }\n  if (ch === 0x66 /* f */) {\n    state.lastIntValue = 0x0C; /* \\f */\n    state.advance();\n    return true\n  }\n  if (ch === 0x72 /* r */) {\n    state.lastIntValue = 0x0D; /* \\r */\n    state.advance();\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ControlLetter\npp$1.regexp_eatControlLetter = function(state) {\n  var ch = state.current();\n  if (isControlLetter(ch)) {\n    state.lastIntValue = ch % 0x20;\n    state.advance();\n    return true\n  }\n  return false\n};\nfunction isControlLetter(ch) {\n  return (\n    (ch >= 0x41 /* A */ && ch <= 0x5A /* Z */) ||\n    (ch >= 0x61 /* a */ && ch <= 0x7A /* z */)\n  )\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-RegExpUnicodeEscapeSequence\npp$1.regexp_eatRegExpUnicodeEscapeSequence = function(state, forceU) {\n  if ( forceU === void 0 ) forceU = false;\n\n  var start = state.pos;\n  var switchU = forceU || state.switchU;\n\n  if (state.eat(0x75 /* u */)) {\n    if (this.regexp_eatFixedHexDigits(state, 4)) {\n      var lead = state.lastIntValue;\n      if (switchU && lead >= 0xD800 && lead <= 0xDBFF) {\n        var leadSurrogateEnd = state.pos;\n        if (state.eat(0x5C /* \\ */) && state.eat(0x75 /* u */) && this.regexp_eatFixedHexDigits(state, 4)) {\n          var trail = state.lastIntValue;\n          if (trail >= 0xDC00 && trail <= 0xDFFF) {\n            state.lastIntValue = (lead - 0xD800) * 0x400 + (trail - 0xDC00) + 0x10000;\n            return true\n          }\n        }\n        state.pos = leadSurrogateEnd;\n        state.lastIntValue = lead;\n      }\n      return true\n    }\n    if (\n      switchU &&\n      state.eat(0x7B /* { */) &&\n      this.regexp_eatHexDigits(state) &&\n      state.eat(0x7D /* } */) &&\n      isValidUnicode(state.lastIntValue)\n    ) {\n      return true\n    }\n    if (switchU) {\n      state.raise(\"Invalid unicode escape\");\n    }\n    state.pos = start;\n  }\n\n  return false\n};\nfunction isValidUnicode(ch) {\n  return ch >= 0 && ch <= 0x10FFFF\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-IdentityEscape\npp$1.regexp_eatIdentityEscape = function(state) {\n  if (state.switchU) {\n    if (this.regexp_eatSyntaxCharacter(state)) {\n      return true\n    }\n    if (state.eat(0x2F /* / */)) {\n      state.lastIntValue = 0x2F; /* / */\n      return true\n    }\n    return false\n  }\n\n  var ch = state.current();\n  if (ch !== 0x63 /* c */ && (!state.switchN || ch !== 0x6B /* k */)) {\n    state.lastIntValue = ch;\n    state.advance();\n    return true\n  }\n\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalEscape\npp$1.regexp_eatDecimalEscape = function(state) {\n  state.lastIntValue = 0;\n  var ch = state.current();\n  if (ch >= 0x31 /* 1 */ && ch <= 0x39 /* 9 */) {\n    do {\n      state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 /* 0 */);\n      state.advance();\n    } while ((ch = state.current()) >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */)\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClassEscape\npp$1.regexp_eatCharacterClassEscape = function(state) {\n  var ch = state.current();\n\n  if (isCharacterClassEscape(ch)) {\n    state.lastIntValue = -1;\n    state.advance();\n    return true\n  }\n\n  if (\n    state.switchU &&\n    this.options.ecmaVersion >= 9 &&\n    (ch === 0x50 /* P */ || ch === 0x70 /* p */)\n  ) {\n    state.lastIntValue = -1;\n    state.advance();\n    if (\n      state.eat(0x7B /* { */) &&\n      this.regexp_eatUnicodePropertyValueExpression(state) &&\n      state.eat(0x7D /* } */)\n    ) {\n      return true\n    }\n    state.raise(\"Invalid property name\");\n  }\n\n  return false\n};\nfunction isCharacterClassEscape(ch) {\n  return (\n    ch === 0x64 /* d */ ||\n    ch === 0x44 /* D */ ||\n    ch === 0x73 /* s */ ||\n    ch === 0x53 /* S */ ||\n    ch === 0x77 /* w */ ||\n    ch === 0x57 /* W */\n  )\n}\n\n// UnicodePropertyValueExpression ::\n//   UnicodePropertyName `=` UnicodePropertyValue\n//   LoneUnicodePropertyNameOrValue\npp$1.regexp_eatUnicodePropertyValueExpression = function(state) {\n  var start = state.pos;\n\n  // UnicodePropertyName `=` UnicodePropertyValue\n  if (this.regexp_eatUnicodePropertyName(state) && state.eat(0x3D /* = */)) {\n    var name = state.lastStringValue;\n    if (this.regexp_eatUnicodePropertyValue(state)) {\n      var value = state.lastStringValue;\n      this.regexp_validateUnicodePropertyNameAndValue(state, name, value);\n      return true\n    }\n  }\n  state.pos = start;\n\n  // LoneUnicodePropertyNameOrValue\n  if (this.regexp_eatLoneUnicodePropertyNameOrValue(state)) {\n    var nameOrValue = state.lastStringValue;\n    this.regexp_validateUnicodePropertyNameOrValue(state, nameOrValue);\n    return true\n  }\n  return false\n};\npp$1.regexp_validateUnicodePropertyNameAndValue = function(state, name, value) {\n  if (!hasOwn(state.unicodeProperties.nonBinary, name))\n    { state.raise(\"Invalid property name\"); }\n  if (!state.unicodeProperties.nonBinary[name].test(value))\n    { state.raise(\"Invalid property value\"); }\n};\npp$1.regexp_validateUnicodePropertyNameOrValue = function(state, nameOrValue) {\n  if (!state.unicodeProperties.binary.test(nameOrValue))\n    { state.raise(\"Invalid property name\"); }\n};\n\n// UnicodePropertyName ::\n//   UnicodePropertyNameCharacters\npp$1.regexp_eatUnicodePropertyName = function(state) {\n  var ch = 0;\n  state.lastStringValue = \"\";\n  while (isUnicodePropertyNameCharacter(ch = state.current())) {\n    state.lastStringValue += codePointToString(ch);\n    state.advance();\n  }\n  return state.lastStringValue !== \"\"\n};\nfunction isUnicodePropertyNameCharacter(ch) {\n  return isControlLetter(ch) || ch === 0x5F /* _ */\n}\n\n// UnicodePropertyValue ::\n//   UnicodePropertyValueCharacters\npp$1.regexp_eatUnicodePropertyValue = function(state) {\n  var ch = 0;\n  state.lastStringValue = \"\";\n  while (isUnicodePropertyValueCharacter(ch = state.current())) {\n    state.lastStringValue += codePointToString(ch);\n    state.advance();\n  }\n  return state.lastStringValue !== \"\"\n};\nfunction isUnicodePropertyValueCharacter(ch) {\n  return isUnicodePropertyNameCharacter(ch) || isDecimalDigit(ch)\n}\n\n// LoneUnicodePropertyNameOrValue ::\n//   UnicodePropertyValueCharacters\npp$1.regexp_eatLoneUnicodePropertyNameOrValue = function(state) {\n  return this.regexp_eatUnicodePropertyValue(state)\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClass\npp$1.regexp_eatCharacterClass = function(state) {\n  if (state.eat(0x5B /* [ */)) {\n    state.eat(0x5E /* ^ */);\n    this.regexp_classRanges(state);\n    if (state.eat(0x5D /* ] */)) {\n      return true\n    }\n    // Unreachable since it threw \"unterminated regular expression\" error before.\n    state.raise(\"Unterminated character class\");\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ClassRanges\n// https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRanges\n// https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRangesNoDash\npp$1.regexp_classRanges = function(state) {\n  while (this.regexp_eatClassAtom(state)) {\n    var left = state.lastIntValue;\n    if (state.eat(0x2D /* - */) && this.regexp_eatClassAtom(state)) {\n      var right = state.lastIntValue;\n      if (state.switchU && (left === -1 || right === -1)) {\n        state.raise(\"Invalid character class\");\n      }\n      if (left !== -1 && right !== -1 && left > right) {\n        state.raise(\"Range out of order in character class\");\n      }\n    }\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtom\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtomNoDash\npp$1.regexp_eatClassAtom = function(state) {\n  var start = state.pos;\n\n  if (state.eat(0x5C /* \\ */)) {\n    if (this.regexp_eatClassEscape(state)) {\n      return true\n    }\n    if (state.switchU) {\n      // Make the same message as V8.\n      var ch$1 = state.current();\n      if (ch$1 === 0x63 /* c */ || isOctalDigit(ch$1)) {\n        state.raise(\"Invalid class escape\");\n      }\n      state.raise(\"Invalid escape\");\n    }\n    state.pos = start;\n  }\n\n  var ch = state.current();\n  if (ch !== 0x5D /* ] */) {\n    state.lastIntValue = ch;\n    state.advance();\n    return true\n  }\n\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassEscape\npp$1.regexp_eatClassEscape = function(state) {\n  var start = state.pos;\n\n  if (state.eat(0x62 /* b */)) {\n    state.lastIntValue = 0x08; /* <BS> */\n    return true\n  }\n\n  if (state.switchU && state.eat(0x2D /* - */)) {\n    state.lastIntValue = 0x2D; /* - */\n    return true\n  }\n\n  if (!state.switchU && state.eat(0x63 /* c */)) {\n    if (this.regexp_eatClassControlLetter(state)) {\n      return true\n    }\n    state.pos = start;\n  }\n\n  return (\n    this.regexp_eatCharacterClassEscape(state) ||\n    this.regexp_eatCharacterEscape(state)\n  )\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassControlLetter\npp$1.regexp_eatClassControlLetter = function(state) {\n  var ch = state.current();\n  if (isDecimalDigit(ch) || ch === 0x5F /* _ */) {\n    state.lastIntValue = ch % 0x20;\n    state.advance();\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence\npp$1.regexp_eatHexEscapeSequence = function(state) {\n  var start = state.pos;\n  if (state.eat(0x78 /* x */)) {\n    if (this.regexp_eatFixedHexDigits(state, 2)) {\n      return true\n    }\n    if (state.switchU) {\n      state.raise(\"Invalid escape\");\n    }\n    state.pos = start;\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalDigits\npp$1.regexp_eatDecimalDigits = function(state) {\n  var start = state.pos;\n  var ch = 0;\n  state.lastIntValue = 0;\n  while (isDecimalDigit(ch = state.current())) {\n    state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 /* 0 */);\n    state.advance();\n  }\n  return state.pos !== start\n};\nfunction isDecimalDigit(ch) {\n  return ch >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigits\npp$1.regexp_eatHexDigits = function(state) {\n  var start = state.pos;\n  var ch = 0;\n  state.lastIntValue = 0;\n  while (isHexDigit(ch = state.current())) {\n    state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n    state.advance();\n  }\n  return state.pos !== start\n};\nfunction isHexDigit(ch) {\n  return (\n    (ch >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */) ||\n    (ch >= 0x41 /* A */ && ch <= 0x46 /* F */) ||\n    (ch >= 0x61 /* a */ && ch <= 0x66 /* f */)\n  )\n}\nfunction hexToInt(ch) {\n  if (ch >= 0x41 /* A */ && ch <= 0x46 /* F */) {\n    return 10 + (ch - 0x41 /* A */)\n  }\n  if (ch >= 0x61 /* a */ && ch <= 0x66 /* f */) {\n    return 10 + (ch - 0x61 /* a */)\n  }\n  return ch - 0x30 /* 0 */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-LegacyOctalEscapeSequence\n// Allows only 0-377(octal) i.e. 0-255(decimal).\npp$1.regexp_eatLegacyOctalEscapeSequence = function(state) {\n  if (this.regexp_eatOctalDigit(state)) {\n    var n1 = state.lastIntValue;\n    if (this.regexp_eatOctalDigit(state)) {\n      var n2 = state.lastIntValue;\n      if (n1 <= 3 && this.regexp_eatOctalDigit(state)) {\n        state.lastIntValue = n1 * 64 + n2 * 8 + state.lastIntValue;\n      } else {\n        state.lastIntValue = n1 * 8 + n2;\n      }\n    } else {\n      state.lastIntValue = n1;\n    }\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-OctalDigit\npp$1.regexp_eatOctalDigit = function(state) {\n  var ch = state.current();\n  if (isOctalDigit(ch)) {\n    state.lastIntValue = ch - 0x30; /* 0 */\n    state.advance();\n    return true\n  }\n  state.lastIntValue = 0;\n  return false\n};\nfunction isOctalDigit(ch) {\n  return ch >= 0x30 /* 0 */ && ch <= 0x37 /* 7 */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Hex4Digits\n// https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigit\n// And HexDigit HexDigit in https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence\npp$1.regexp_eatFixedHexDigits = function(state, length) {\n  var start = state.pos;\n  state.lastIntValue = 0;\n  for (var i = 0; i < length; ++i) {\n    var ch = state.current();\n    if (!isHexDigit(ch)) {\n      state.pos = start;\n      return false\n    }\n    state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n    state.advance();\n  }\n  return true\n};\n\n// Object type used to represent tokens. Note that normally, tokens\n// simply exist as properties on the parser object. This is only\n// used for the onToken callback and the external tokenizer.\n\nvar Token = function Token(p) {\n  this.type = p.type;\n  this.value = p.value;\n  this.start = p.start;\n  this.end = p.end;\n  if (p.options.locations)\n    { this.loc = new SourceLocation(p, p.startLoc, p.endLoc); }\n  if (p.options.ranges)\n    { this.range = [p.start, p.end]; }\n};\n\n// ## Tokenizer\n\nvar pp = Parser.prototype;\n\n// Move to the next token\n\npp.next = function(ignoreEscapeSequenceInKeyword) {\n  if (!ignoreEscapeSequenceInKeyword && this.type.keyword && this.containsEsc)\n    { this.raiseRecoverable(this.start, \"Escape sequence in keyword \" + this.type.keyword); }\n  if (this.options.onToken)\n    { this.options.onToken(new Token(this)); }\n\n  this.lastTokEnd = this.end;\n  this.lastTokStart = this.start;\n  this.lastTokEndLoc = this.endLoc;\n  this.lastTokStartLoc = this.startLoc;\n  this.nextToken();\n};\n\npp.getToken = function() {\n  this.next();\n  return new Token(this)\n};\n\n// If we're in an ES6 environment, make parsers iterable\nif (typeof Symbol !== \"undefined\")\n  { pp[Symbol.iterator] = function() {\n    var this$1$1 = this;\n\n    return {\n      next: function () {\n        var token = this$1$1.getToken();\n        return {\n          done: token.type === types$1.eof,\n          value: token\n        }\n      }\n    }\n  }; }\n\n// Toggle strict mode. Re-reads the next number or string to please\n// pedantic tests (`\"use strict\"; 010;` should fail).\n\n// Read a single token, updating the parser object's token-related\n// properties.\n\npp.nextToken = function() {\n  var curContext = this.curContext();\n  if (!curContext || !curContext.preserveSpace) { this.skipSpace(); }\n\n  this.start = this.pos;\n  if (this.options.locations) { this.startLoc = this.curPosition(); }\n  if (this.pos >= this.input.length) { return this.finishToken(types$1.eof) }\n\n  if (curContext.override) { return curContext.override(this) }\n  else { this.readToken(this.fullCharCodeAtPos()); }\n};\n\npp.readToken = function(code) {\n  // Identifier or keyword. '\\uXXXX' sequences are allowed in\n  // identifiers, so '\\' also dispatches to that.\n  if (isIdentifierStart(code, this.options.ecmaVersion >= 6) || code === 92 /* '\\' */)\n    { return this.readWord() }\n\n  return this.getTokenFromCode(code)\n};\n\npp.fullCharCodeAtPos = function() {\n  var code = this.input.charCodeAt(this.pos);\n  if (code <= 0xd7ff || code >= 0xdc00) { return code }\n  var next = this.input.charCodeAt(this.pos + 1);\n  return next <= 0xdbff || next >= 0xe000 ? code : (code << 10) + next - 0x35fdc00\n};\n\npp.skipBlockComment = function() {\n  var startLoc = this.options.onComment && this.curPosition();\n  var start = this.pos, end = this.input.indexOf(\"*/\", this.pos += 2);\n  if (end === -1) { this.raise(this.pos - 2, \"Unterminated comment\"); }\n  this.pos = end + 2;\n  if (this.options.locations) {\n    for (var nextBreak = (void 0), pos = start; (nextBreak = nextLineBreak(this.input, pos, this.pos)) > -1;) {\n      ++this.curLine;\n      pos = this.lineStart = nextBreak;\n    }\n  }\n  if (this.options.onComment)\n    { this.options.onComment(true, this.input.slice(start + 2, end), start, this.pos,\n                           startLoc, this.curPosition()); }\n};\n\npp.skipLineComment = function(startSkip) {\n  var start = this.pos;\n  var startLoc = this.options.onComment && this.curPosition();\n  var ch = this.input.charCodeAt(this.pos += startSkip);\n  while (this.pos < this.input.length && !isNewLine(ch)) {\n    ch = this.input.charCodeAt(++this.pos);\n  }\n  if (this.options.onComment)\n    { this.options.onComment(false, this.input.slice(start + startSkip, this.pos), start, this.pos,\n                           startLoc, this.curPosition()); }\n};\n\n// Called at the start of the parse and after every token. Skips\n// whitespace and comments, and.\n\npp.skipSpace = function() {\n  loop: while (this.pos < this.input.length) {\n    var ch = this.input.charCodeAt(this.pos);\n    switch (ch) {\n    case 32: case 160: // ' '\n      ++this.pos;\n      break\n    case 13:\n      if (this.input.charCodeAt(this.pos + 1) === 10) {\n        ++this.pos;\n      }\n    case 10: case 8232: case 8233:\n      ++this.pos;\n      if (this.options.locations) {\n        ++this.curLine;\n        this.lineStart = this.pos;\n      }\n      break\n    case 47: // '/'\n      switch (this.input.charCodeAt(this.pos + 1)) {\n      case 42: // '*'\n        this.skipBlockComment();\n        break\n      case 47:\n        this.skipLineComment(2);\n        break\n      default:\n        break loop\n      }\n      break\n    default:\n      if (ch > 8 && ch < 14 || ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {\n        ++this.pos;\n      } else {\n        break loop\n      }\n    }\n  }\n};\n\n// Called at the end of every token. Sets `end`, `val`, and\n// maintains `context` and `exprAllowed`, and skips the space after\n// the token, so that the next one's `start` will point at the\n// right position.\n\npp.finishToken = function(type, val) {\n  this.end = this.pos;\n  if (this.options.locations) { this.endLoc = this.curPosition(); }\n  var prevType = this.type;\n  this.type = type;\n  this.value = val;\n\n  this.updateContext(prevType);\n};\n\n// ### Token reading\n\n// This is the function that is called to fetch the next token. It\n// is somewhat obscure, because it works in character codes rather\n// than characters, and because operator parsing has been inlined\n// into it.\n//\n// All in the name of speed.\n//\npp.readToken_dot = function() {\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next >= 48 && next <= 57) { return this.readNumber(true) }\n  var next2 = this.input.charCodeAt(this.pos + 2);\n  if (this.options.ecmaVersion >= 6 && next === 46 && next2 === 46) { // 46 = dot '.'\n    this.pos += 3;\n    return this.finishToken(types$1.ellipsis)\n  } else {\n    ++this.pos;\n    return this.finishToken(types$1.dot)\n  }\n};\n\npp.readToken_slash = function() { // '/'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (this.exprAllowed) { ++this.pos; return this.readRegexp() }\n  if (next === 61) { return this.finishOp(types$1.assign, 2) }\n  return this.finishOp(types$1.slash, 1)\n};\n\npp.readToken_mult_modulo_exp = function(code) { // '%*'\n  var next = this.input.charCodeAt(this.pos + 1);\n  var size = 1;\n  var tokentype = code === 42 ? types$1.star : types$1.modulo;\n\n  // exponentiation operator ** and **=\n  if (this.options.ecmaVersion >= 7 && code === 42 && next === 42) {\n    ++size;\n    tokentype = types$1.starstar;\n    next = this.input.charCodeAt(this.pos + 2);\n  }\n\n  if (next === 61) { return this.finishOp(types$1.assign, size + 1) }\n  return this.finishOp(tokentype, size)\n};\n\npp.readToken_pipe_amp = function(code) { // '|&'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === code) {\n    if (this.options.ecmaVersion >= 12) {\n      var next2 = this.input.charCodeAt(this.pos + 2);\n      if (next2 === 61) { return this.finishOp(types$1.assign, 3) }\n    }\n    return this.finishOp(code === 124 ? types$1.logicalOR : types$1.logicalAND, 2)\n  }\n  if (next === 61) { return this.finishOp(types$1.assign, 2) }\n  return this.finishOp(code === 124 ? types$1.bitwiseOR : types$1.bitwiseAND, 1)\n};\n\npp.readToken_caret = function() { // '^'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === 61) { return this.finishOp(types$1.assign, 2) }\n  return this.finishOp(types$1.bitwiseXOR, 1)\n};\n\npp.readToken_plus_min = function(code) { // '+-'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === code) {\n    if (next === 45 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 62 &&\n        (this.lastTokEnd === 0 || lineBreak.test(this.input.slice(this.lastTokEnd, this.pos)))) {\n      // A `-->` line comment\n      this.skipLineComment(3);\n      this.skipSpace();\n      return this.nextToken()\n    }\n    return this.finishOp(types$1.incDec, 2)\n  }\n  if (next === 61) { return this.finishOp(types$1.assign, 2) }\n  return this.finishOp(types$1.plusMin, 1)\n};\n\npp.readToken_lt_gt = function(code) { // '<>'\n  var next = this.input.charCodeAt(this.pos + 1);\n  var size = 1;\n  if (next === code) {\n    size = code === 62 && this.input.charCodeAt(this.pos + 2) === 62 ? 3 : 2;\n    if (this.input.charCodeAt(this.pos + size) === 61) { return this.finishOp(types$1.assign, size + 1) }\n    return this.finishOp(types$1.bitShift, size)\n  }\n  if (next === 33 && code === 60 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 45 &&\n      this.input.charCodeAt(this.pos + 3) === 45) {\n    // `<!--`, an XML-style comment that should be interpreted as a line comment\n    this.skipLineComment(4);\n    this.skipSpace();\n    return this.nextToken()\n  }\n  if (next === 61) { size = 2; }\n  return this.finishOp(types$1.relational, size)\n};\n\npp.readToken_eq_excl = function(code) { // '=!'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === 61) { return this.finishOp(types$1.equality, this.input.charCodeAt(this.pos + 2) === 61 ? 3 : 2) }\n  if (code === 61 && next === 62 && this.options.ecmaVersion >= 6) { // '=>'\n    this.pos += 2;\n    return this.finishToken(types$1.arrow)\n  }\n  return this.finishOp(code === 61 ? types$1.eq : types$1.prefix, 1)\n};\n\npp.readToken_question = function() { // '?'\n  var ecmaVersion = this.options.ecmaVersion;\n  if (ecmaVersion >= 11) {\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === 46) {\n      var next2 = this.input.charCodeAt(this.pos + 2);\n      if (next2 < 48 || next2 > 57) { return this.finishOp(types$1.questionDot, 2) }\n    }\n    if (next === 63) {\n      if (ecmaVersion >= 12) {\n        var next2$1 = this.input.charCodeAt(this.pos + 2);\n        if (next2$1 === 61) { return this.finishOp(types$1.assign, 3) }\n      }\n      return this.finishOp(types$1.coalesce, 2)\n    }\n  }\n  return this.finishOp(types$1.question, 1)\n};\n\npp.readToken_numberSign = function() { // '#'\n  var ecmaVersion = this.options.ecmaVersion;\n  var code = 35; // '#'\n  if (ecmaVersion >= 13) {\n    ++this.pos;\n    code = this.fullCharCodeAtPos();\n    if (isIdentifierStart(code, true) || code === 92 /* '\\' */) {\n      return this.finishToken(types$1.privateId, this.readWord1())\n    }\n  }\n\n  this.raise(this.pos, \"Unexpected character '\" + codePointToString(code) + \"'\");\n};\n\npp.getTokenFromCode = function(code) {\n  switch (code) {\n  // The interpretation of a dot depends on whether it is followed\n  // by a digit or another two dots.\n  case 46: // '.'\n    return this.readToken_dot()\n\n  // Punctuation tokens.\n  case 40: ++this.pos; return this.finishToken(types$1.parenL)\n  case 41: ++this.pos; return this.finishToken(types$1.parenR)\n  case 59: ++this.pos; return this.finishToken(types$1.semi)\n  case 44: ++this.pos; return this.finishToken(types$1.comma)\n  case 91: ++this.pos; return this.finishToken(types$1.bracketL)\n  case 93: ++this.pos; return this.finishToken(types$1.bracketR)\n  case 123: ++this.pos; return this.finishToken(types$1.braceL)\n  case 125: ++this.pos; return this.finishToken(types$1.braceR)\n  case 58: ++this.pos; return this.finishToken(types$1.colon)\n\n  case 96: // '`'\n    if (this.options.ecmaVersion < 6) { break }\n    ++this.pos;\n    return this.finishToken(types$1.backQuote)\n\n  case 48: // '0'\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === 120 || next === 88) { return this.readRadixNumber(16) } // '0x', '0X' - hex number\n    if (this.options.ecmaVersion >= 6) {\n      if (next === 111 || next === 79) { return this.readRadixNumber(8) } // '0o', '0O' - octal number\n      if (next === 98 || next === 66) { return this.readRadixNumber(2) } // '0b', '0B' - binary number\n    }\n\n  // Anything else beginning with a digit is an integer, octal\n  // number, or float.\n  case 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 57: // 1-9\n    return this.readNumber(false)\n\n  // Quotes produce strings.\n  case 34: case 39: // '\"', \"'\"\n    return this.readString(code)\n\n  // Operators are parsed inline in tiny state machines. '=' (61) is\n  // often referred to. `finishOp` simply skips the amount of\n  // characters it is given as second argument, and returns a token\n  // of the type given by its first argument.\n  case 47: // '/'\n    return this.readToken_slash()\n\n  case 37: case 42: // '%*'\n    return this.readToken_mult_modulo_exp(code)\n\n  case 124: case 38: // '|&'\n    return this.readToken_pipe_amp(code)\n\n  case 94: // '^'\n    return this.readToken_caret()\n\n  case 43: case 45: // '+-'\n    return this.readToken_plus_min(code)\n\n  case 60: case 62: // '<>'\n    return this.readToken_lt_gt(code)\n\n  case 61: case 33: // '=!'\n    return this.readToken_eq_excl(code)\n\n  case 63: // '?'\n    return this.readToken_question()\n\n  case 126: // '~'\n    return this.finishOp(types$1.prefix, 1)\n\n  case 35: // '#'\n    return this.readToken_numberSign()\n  }\n\n  this.raise(this.pos, \"Unexpected character '\" + codePointToString(code) + \"'\");\n};\n\npp.finishOp = function(type, size) {\n  var str = this.input.slice(this.pos, this.pos + size);\n  this.pos += size;\n  return this.finishToken(type, str)\n};\n\npp.readRegexp = function() {\n  var escaped, inClass, start = this.pos;\n  for (;;) {\n    if (this.pos >= this.input.length) { this.raise(start, \"Unterminated regular expression\"); }\n    var ch = this.input.charAt(this.pos);\n    if (lineBreak.test(ch)) { this.raise(start, \"Unterminated regular expression\"); }\n    if (!escaped) {\n      if (ch === \"[\") { inClass = true; }\n      else if (ch === \"]\" && inClass) { inClass = false; }\n      else if (ch === \"/\" && !inClass) { break }\n      escaped = ch === \"\\\\\";\n    } else { escaped = false; }\n    ++this.pos;\n  }\n  var pattern = this.input.slice(start, this.pos);\n  ++this.pos;\n  var flagsStart = this.pos;\n  var flags = this.readWord1();\n  if (this.containsEsc) { this.unexpected(flagsStart); }\n\n  // Validate pattern\n  var state = this.regexpState || (this.regexpState = new RegExpValidationState(this));\n  state.reset(start, pattern, flags);\n  this.validateRegExpFlags(state);\n  this.validateRegExpPattern(state);\n\n  // Create Literal#value property value.\n  var value = null;\n  try {\n    value = new RegExp(pattern, flags);\n  } catch (e) {\n    // ESTree requires null if it failed to instantiate RegExp object.\n    // https://github.com/estree/estree/blob/a27003adf4fd7bfad44de9cef372a2eacd527b1c/es5.md#regexpliteral\n  }\n\n  return this.finishToken(types$1.regexp, {pattern: pattern, flags: flags, value: value})\n};\n\n// Read an integer in the given radix. Return null if zero digits\n// were read, the integer value otherwise. When `len` is given, this\n// will return `null` unless the integer has exactly `len` digits.\n\npp.readInt = function(radix, len, maybeLegacyOctalNumericLiteral) {\n  // `len` is used for character escape sequences. In that case, disallow separators.\n  var allowSeparators = this.options.ecmaVersion >= 12 && len === undefined;\n\n  // `maybeLegacyOctalNumericLiteral` is true if it doesn't have prefix (0x,0o,0b)\n  // and isn't fraction part nor exponent part. In that case, if the first digit\n  // is zero then disallow separators.\n  var isLegacyOctalNumericLiteral = maybeLegacyOctalNumericLiteral && this.input.charCodeAt(this.pos) === 48;\n\n  var start = this.pos, total = 0, lastCode = 0;\n  for (var i = 0, e = len == null ? Infinity : len; i < e; ++i, ++this.pos) {\n    var code = this.input.charCodeAt(this.pos), val = (void 0);\n\n    if (allowSeparators && code === 95) {\n      if (isLegacyOctalNumericLiteral) { this.raiseRecoverable(this.pos, \"Numeric separator is not allowed in legacy octal numeric literals\"); }\n      if (lastCode === 95) { this.raiseRecoverable(this.pos, \"Numeric separator must be exactly one underscore\"); }\n      if (i === 0) { this.raiseRecoverable(this.pos, \"Numeric separator is not allowed at the first of digits\"); }\n      lastCode = code;\n      continue\n    }\n\n    if (code >= 97) { val = code - 97 + 10; } // a\n    else if (code >= 65) { val = code - 65 + 10; } // A\n    else if (code >= 48 && code <= 57) { val = code - 48; } // 0-9\n    else { val = Infinity; }\n    if (val >= radix) { break }\n    lastCode = code;\n    total = total * radix + val;\n  }\n\n  if (allowSeparators && lastCode === 95) { this.raiseRecoverable(this.pos - 1, \"Numeric separator is not allowed at the last of digits\"); }\n  if (this.pos === start || len != null && this.pos - start !== len) { return null }\n\n  return total\n};\n\nfunction stringToNumber(str, isLegacyOctalNumericLiteral) {\n  if (isLegacyOctalNumericLiteral) {\n    return parseInt(str, 8)\n  }\n\n  // `parseFloat(value)` stops parsing at the first numeric separator then returns a wrong value.\n  return parseFloat(str.replace(/_/g, \"\"))\n}\n\nfunction stringToBigInt(str) {\n  if (typeof BigInt !== \"function\") {\n    return null\n  }\n\n  // `BigInt(value)` throws syntax error if the string contains numeric separators.\n  return BigInt(str.replace(/_/g, \"\"))\n}\n\npp.readRadixNumber = function(radix) {\n  var start = this.pos;\n  this.pos += 2; // 0x\n  var val = this.readInt(radix);\n  if (val == null) { this.raise(this.start + 2, \"Expected number in radix \" + radix); }\n  if (this.options.ecmaVersion >= 11 && this.input.charCodeAt(this.pos) === 110) {\n    val = stringToBigInt(this.input.slice(start, this.pos));\n    ++this.pos;\n  } else if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n  return this.finishToken(types$1.num, val)\n};\n\n// Read an integer, octal integer, or floating-point number.\n\npp.readNumber = function(startsWithDot) {\n  var start = this.pos;\n  if (!startsWithDot && this.readInt(10, undefined, true) === null) { this.raise(start, \"Invalid number\"); }\n  var octal = this.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n  if (octal && this.strict) { this.raise(start, \"Invalid number\"); }\n  var next = this.input.charCodeAt(this.pos);\n  if (!octal && !startsWithDot && this.options.ecmaVersion >= 11 && next === 110) {\n    var val$1 = stringToBigInt(this.input.slice(start, this.pos));\n    ++this.pos;\n    if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n    return this.finishToken(types$1.num, val$1)\n  }\n  if (octal && /[89]/.test(this.input.slice(start, this.pos))) { octal = false; }\n  if (next === 46 && !octal) { // '.'\n    ++this.pos;\n    this.readInt(10);\n    next = this.input.charCodeAt(this.pos);\n  }\n  if ((next === 69 || next === 101) && !octal) { // 'eE'\n    next = this.input.charCodeAt(++this.pos);\n    if (next === 43 || next === 45) { ++this.pos; } // '+-'\n    if (this.readInt(10) === null) { this.raise(start, \"Invalid number\"); }\n  }\n  if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n\n  var val = stringToNumber(this.input.slice(start, this.pos), octal);\n  return this.finishToken(types$1.num, val)\n};\n\n// Read a string value, interpreting backslash-escapes.\n\npp.readCodePoint = function() {\n  var ch = this.input.charCodeAt(this.pos), code;\n\n  if (ch === 123) { // '{'\n    if (this.options.ecmaVersion < 6) { this.unexpected(); }\n    var codePos = ++this.pos;\n    code = this.readHexChar(this.input.indexOf(\"}\", this.pos) - this.pos);\n    ++this.pos;\n    if (code > 0x10FFFF) { this.invalidStringToken(codePos, \"Code point out of bounds\"); }\n  } else {\n    code = this.readHexChar(4);\n  }\n  return code\n};\n\npp.readString = function(quote) {\n  var out = \"\", chunkStart = ++this.pos;\n  for (;;) {\n    if (this.pos >= this.input.length) { this.raise(this.start, \"Unterminated string constant\"); }\n    var ch = this.input.charCodeAt(this.pos);\n    if (ch === quote) { break }\n    if (ch === 92) { // '\\'\n      out += this.input.slice(chunkStart, this.pos);\n      out += this.readEscapedChar(false);\n      chunkStart = this.pos;\n    } else if (ch === 0x2028 || ch === 0x2029) {\n      if (this.options.ecmaVersion < 10) { this.raise(this.start, \"Unterminated string constant\"); }\n      ++this.pos;\n      if (this.options.locations) {\n        this.curLine++;\n        this.lineStart = this.pos;\n      }\n    } else {\n      if (isNewLine(ch)) { this.raise(this.start, \"Unterminated string constant\"); }\n      ++this.pos;\n    }\n  }\n  out += this.input.slice(chunkStart, this.pos++);\n  return this.finishToken(types$1.string, out)\n};\n\n// Reads template string tokens.\n\nvar INVALID_TEMPLATE_ESCAPE_ERROR = {};\n\npp.tryReadTemplateToken = function() {\n  this.inTemplateElement = true;\n  try {\n    this.readTmplToken();\n  } catch (err) {\n    if (err === INVALID_TEMPLATE_ESCAPE_ERROR) {\n      this.readInvalidTemplateToken();\n    } else {\n      throw err\n    }\n  }\n\n  this.inTemplateElement = false;\n};\n\npp.invalidStringToken = function(position, message) {\n  if (this.inTemplateElement && this.options.ecmaVersion >= 9) {\n    throw INVALID_TEMPLATE_ESCAPE_ERROR\n  } else {\n    this.raise(position, message);\n  }\n};\n\npp.readTmplToken = function() {\n  var out = \"\", chunkStart = this.pos;\n  for (;;) {\n    if (this.pos >= this.input.length) { this.raise(this.start, \"Unterminated template\"); }\n    var ch = this.input.charCodeAt(this.pos);\n    if (ch === 96 || ch === 36 && this.input.charCodeAt(this.pos + 1) === 123) { // '`', '${'\n      if (this.pos === this.start && (this.type === types$1.template || this.type === types$1.invalidTemplate)) {\n        if (ch === 36) {\n          this.pos += 2;\n          return this.finishToken(types$1.dollarBraceL)\n        } else {\n          ++this.pos;\n          return this.finishToken(types$1.backQuote)\n        }\n      }\n      out += this.input.slice(chunkStart, this.pos);\n      return this.finishToken(types$1.template, out)\n    }\n    if (ch === 92) { // '\\'\n      out += this.input.slice(chunkStart, this.pos);\n      out += this.readEscapedChar(true);\n      chunkStart = this.pos;\n    } else if (isNewLine(ch)) {\n      out += this.input.slice(chunkStart, this.pos);\n      ++this.pos;\n      switch (ch) {\n      case 13:\n        if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; }\n      case 10:\n        out += \"\\n\";\n        break\n      default:\n        out += String.fromCharCode(ch);\n        break\n      }\n      if (this.options.locations) {\n        ++this.curLine;\n        this.lineStart = this.pos;\n      }\n      chunkStart = this.pos;\n    } else {\n      ++this.pos;\n    }\n  }\n};\n\n// Reads a template token to search for the end, without validating any escape sequences\npp.readInvalidTemplateToken = function() {\n  for (; this.pos < this.input.length; this.pos++) {\n    switch (this.input[this.pos]) {\n    case \"\\\\\":\n      ++this.pos;\n      break\n\n    case \"$\":\n      if (this.input[this.pos + 1] !== \"{\") {\n        break\n      }\n\n    // falls through\n    case \"`\":\n      return this.finishToken(types$1.invalidTemplate, this.input.slice(this.start, this.pos))\n\n    // no default\n    }\n  }\n  this.raise(this.start, \"Unterminated template\");\n};\n\n// Used to read escaped characters\n\npp.readEscapedChar = function(inTemplate) {\n  var ch = this.input.charCodeAt(++this.pos);\n  ++this.pos;\n  switch (ch) {\n  case 110: return \"\\n\" // 'n' -> '\\n'\n  case 114: return \"\\r\" // 'r' -> '\\r'\n  case 120: return String.fromCharCode(this.readHexChar(2)) // 'x'\n  case 117: return codePointToString(this.readCodePoint()) // 'u'\n  case 116: return \"\\t\" // 't' -> '\\t'\n  case 98: return \"\\b\" // 'b' -> '\\b'\n  case 118: return \"\\u000b\" // 'v' -> '\\u000b'\n  case 102: return \"\\f\" // 'f' -> '\\f'\n  case 13: if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; } // '\\r\\n'\n  case 10: // ' \\n'\n    if (this.options.locations) { this.lineStart = this.pos; ++this.curLine; }\n    return \"\"\n  case 56:\n  case 57:\n    if (this.strict) {\n      this.invalidStringToken(\n        this.pos - 1,\n        \"Invalid escape sequence\"\n      );\n    }\n    if (inTemplate) {\n      var codePos = this.pos - 1;\n\n      this.invalidStringToken(\n        codePos,\n        \"Invalid escape sequence in template string\"\n      );\n    }\n  default:\n    if (ch >= 48 && ch <= 55) {\n      var octalStr = this.input.substr(this.pos - 1, 3).match(/^[0-7]+/)[0];\n      var octal = parseInt(octalStr, 8);\n      if (octal > 255) {\n        octalStr = octalStr.slice(0, -1);\n        octal = parseInt(octalStr, 8);\n      }\n      this.pos += octalStr.length - 1;\n      ch = this.input.charCodeAt(this.pos);\n      if ((octalStr !== \"0\" || ch === 56 || ch === 57) && (this.strict || inTemplate)) {\n        this.invalidStringToken(\n          this.pos - 1 - octalStr.length,\n          inTemplate\n            ? \"Octal literal in template string\"\n            : \"Octal literal in strict mode\"\n        );\n      }\n      return String.fromCharCode(octal)\n    }\n    if (isNewLine(ch)) {\n      // Unicode new line characters after \\ get removed from output in both\n      // template literals and strings\n      return \"\"\n    }\n    return String.fromCharCode(ch)\n  }\n};\n\n// Used to read character escape sequences ('\\x', '\\u', '\\U').\n\npp.readHexChar = function(len) {\n  var codePos = this.pos;\n  var n = this.readInt(16, len);\n  if (n === null) { this.invalidStringToken(codePos, \"Bad character escape sequence\"); }\n  return n\n};\n\n// Read an identifier, and return it as a string. Sets `this.containsEsc`\n// to whether the word contained a '\\u' escape.\n//\n// Incrementally adds only escaped chars, adding other chunks as-is\n// as a micro-optimization.\n\npp.readWord1 = function() {\n  this.containsEsc = false;\n  var word = \"\", first = true, chunkStart = this.pos;\n  var astral = this.options.ecmaVersion >= 6;\n  while (this.pos < this.input.length) {\n    var ch = this.fullCharCodeAtPos();\n    if (isIdentifierChar(ch, astral)) {\n      this.pos += ch <= 0xffff ? 1 : 2;\n    } else if (ch === 92) { // \"\\\"\n      this.containsEsc = true;\n      word += this.input.slice(chunkStart, this.pos);\n      var escStart = this.pos;\n      if (this.input.charCodeAt(++this.pos) !== 117) // \"u\"\n        { this.invalidStringToken(this.pos, \"Expecting Unicode escape sequence \\\\uXXXX\"); }\n      ++this.pos;\n      var esc = this.readCodePoint();\n      if (!(first ? isIdentifierStart : isIdentifierChar)(esc, astral))\n        { this.invalidStringToken(escStart, \"Invalid Unicode escape\"); }\n      word += codePointToString(esc);\n      chunkStart = this.pos;\n    } else {\n      break\n    }\n    first = false;\n  }\n  return word + this.input.slice(chunkStart, this.pos)\n};\n\n// Read an identifier or keyword token. Will check for reserved\n// words when necessary.\n\npp.readWord = function() {\n  var word = this.readWord1();\n  var type = types$1.name;\n  if (this.keywords.test(word)) {\n    type = keywords[word];\n  }\n  return this.finishToken(type, word)\n};\n\n// Acorn is a tiny, fast JavaScript parser written in JavaScript.\n\nvar version = \"8.8.2\";\n\nParser.acorn = {\n  Parser: Parser,\n  version: version,\n  defaultOptions: defaultOptions,\n  Position: Position,\n  SourceLocation: SourceLocation,\n  getLineInfo: getLineInfo,\n  Node: Node,\n  TokenType: TokenType,\n  tokTypes: types$1,\n  keywordTypes: keywords,\n  TokContext: TokContext,\n  tokContexts: types,\n  isIdentifierChar: isIdentifierChar,\n  isIdentifierStart: isIdentifierStart,\n  Token: Token,\n  isNewLine: isNewLine,\n  lineBreak: lineBreak,\n  lineBreakG: lineBreakG,\n  nonASCIIwhitespace: nonASCIIwhitespace\n};\n\n// The main exported interface (under `self.acorn` when in the\n// browser) is a `parse` function that takes a code string and\n// returns an abstract syntax tree as specified by [Mozilla parser\n// API][api].\n//\n// [api]: https://developer.mozilla.org/en-US/docs/SpiderMonkey/Parser_API\n\nfunction parse(input, options) {\n  return Parser.parse(input, options)\n}\n\n// This function tries to parse a single expression at a given\n// offset in a string. Useful for parsing mixed-language formats\n// that embed JavaScript expressions.\n\nfunction parseExpressionAt(input, pos, options) {\n  return Parser.parseExpressionAt(input, pos, options)\n}\n\n// Acorn is organized as a tokenizer and a recursive-descent parser.\n// The `tokenizer` export provides an interface to the tokenizer.\n\nfunction tokenizer(input, options) {\n  return Parser.tokenizer(input, options)\n}\n\nexport { Node, Parser, Position, SourceLocation, TokContext, Token, TokenType, defaultOptions, getLineInfo, isIdentifierChar, isIdentifierStart, isNewLine, keywords as keywordTypes, lineBreak, lineBreakG, nonASCIIwhitespace, parse, parseExpressionAt, types as tokContexts, types$1 as tokTypes, tokenizer, version };\n","/**\n * @typedef {import('unist').Position} Position\n *\n * @typedef {[number, number]} RangeLike\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n *\n * @typedef LocLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef NodeLike\n * @property {LocLike | null | undefined} [loc]\n * @property {RangeLike | null | undefined} [range]\n * @property {number | null | undefined} [start]\n * @property {number | null | undefined} [end]\n */\n\n/**\n * Turn an estree `node` into a unist `position`.\n *\n * @param {NodeLike | null | undefined} [node]\n *   estree node.\n * @returns {Position}\n *   unist position.\n */\nexport function positionFromEstree(node) {\n  const nodeLike = node || {}\n  const loc = nodeLike.loc || {}\n  const range = nodeLike.range || [0, 0]\n  const startColumn = loc.start\n    ? numberOrUndefined(loc.start.column)\n    : undefined\n  const endColumn = loc.end ? numberOrUndefined(loc.end.column) : undefined\n\n  return {\n    start: {\n      // @ts-expect-error: return no point / no position next major.\n      line: loc.start ? numberOrUndefined(loc.start.line) : undefined,\n      // @ts-expect-error: return no point / no position next major.\n      column: startColumn === undefined ? undefined : startColumn + 1,\n      offset: numberOrUndefined(range[0] || nodeLike.start)\n    },\n    end: {\n      // @ts-expect-error: return no point / no position next major.\n      line: loc.end ? numberOrUndefined(loc.end.line) : undefined,\n      // @ts-expect-error: return no point / no position next major.\n      column: endColumn === undefined ? undefined : endColumn + 1,\n      offset: numberOrUndefined(range[1] || nodeLike.end)\n    }\n  }\n}\n\n/**\n *\n * @param {number | null | undefined} value\n * @returns {number | undefined}\n */\nfunction numberOrUndefined(value) {\n  return typeof value === 'number' && value > -1 ? value : undefined\n}\n","/**\n * @typedef {import('estree-jsx').Node} Node\n */\n\n/**\n * @typedef {CONTINUE | SKIP | EXIT} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed), when moving in an array.\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n */\n\n/**\n * @callback Visitor\n *   Handle a node.\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node`, the `Visitor` should\n *   return a new `Index` to specify the sibling to traverse after `node` is\n *   traversed.\n *   Adding or removing next siblings of `node` is handled as expected without\n *   needing to return a new `Index`.\n * @param {Node} node\n *   Found node.\n * @param {string | null} key\n *   Field at which `node` lives in its parent (or where a list of nodes lives).\n * @param {number | null} index\n *   Index where `node` lives if `parent[key]` is an array.\n * @param {Array<Node>} ancestors\n *   Ancestors of `node`.\n * @returns {Action | Index | ActionTuple | null | undefined | void}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * @typedef Visitors\n *   Handle nodes when entering (preorder) and leaving (postorder).\n * @property {Visitor | null | undefined} [enter]\n *   Handle nodes when entering (preorder).\n * @property {Visitor | null | undefined} [leave]\n *   Handle nodes when leaving (postorder).\n */\n\nimport {color} from './color.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = Symbol('continue')\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = Symbol('exit')\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = Symbol('skip')\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) and/or *postorder* (**LRN**).\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor(s) when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * @param {Node} tree\n *   Tree to traverse\n * @param {Visitor | Visitors | null | undefined} [visitor]\n *   Handle each node.\n * @returns {void}\n *   Nothing.\n */\nexport function visit(tree, visitor) {\n  /** @type {Visitor | undefined} */\n  let enter\n  /** @type {Visitor | undefined} */\n  let leave\n\n  if (typeof visitor === 'function') {\n    enter = visitor\n  } else if (visitor && typeof visitor === 'object') {\n    if (visitor.enter) enter = visitor.enter\n    if (visitor.leave) leave = visitor.leave\n  }\n\n  build(tree, null, null, [])()\n\n  /**\n   * @param {Node} node\n   * @param {string | null} key\n   * @param {number | null} index\n   * @param {Array<Node>} parents\n   */\n  function build(node, key, index, parents) {\n    if (nodelike(node)) {\n      visit.displayName = 'node (' + color(node.type) + ')'\n    }\n\n    return visit\n\n    /**\n     * @returns {ActionTuple}\n     */\n    function visit() {\n      /** @type {ActionTuple} */\n      const result = enter ? toResult(enter(node, key, index, parents)) : []\n\n      if (result[0] === EXIT) {\n        return result\n      }\n\n      if (result[0] !== SKIP) {\n        /** @type {keyof node} */\n        let cKey\n\n        for (cKey in node) {\n          if (\n            own.call(node, cKey) &&\n            node[cKey] &&\n            typeof node[cKey] === 'object' &&\n            // @ts-expect-error: custom esast extension.\n            cKey !== 'data' &&\n            // @ts-expect-error: custom esast extension.\n            cKey !== 'position'\n          ) {\n            const grandparents = parents.concat(node)\n            /** @type {unknown} */\n            const value = node[cKey]\n\n            if (Array.isArray(value)) {\n              const nodes = /** @type {Array<unknown>} */ (value)\n              let cIndex = 0\n\n              while (cIndex > -1 && cIndex < nodes.length) {\n                const subvalue = nodes[cIndex]\n\n                if (nodelike(subvalue)) {\n                  const subresult = build(\n                    subvalue,\n                    cKey,\n                    cIndex,\n                    grandparents\n                  )()\n                  if (subresult[0] === EXIT) return subresult\n                  cIndex =\n                    typeof subresult[1] === 'number' ? subresult[1] : cIndex + 1\n                } else {\n                  cIndex++\n                }\n              }\n            } else if (nodelike(value)) {\n              const subresult = build(value, cKey, null, grandparents)()\n              if (subresult[0] === EXIT) return subresult\n            }\n          }\n        }\n      }\n\n      return leave ? toResult(leave(node, key, index, parents)) : result\n    }\n  }\n}\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {Action | Index | ActionTuple | null | undefined | void} value\n *   Valid return values from visitors.\n * @returns {ActionTuple}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n\n/**\n * Check if something looks like a node.\n *\n * @param {unknown} value\n *   Anything.\n * @returns {value is Node}\n *   Whether `value` looks like a node.\n */\nfunction nodelike(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'type' in value &&\n      typeof value.type === 'string' &&\n      value.type.length > 0\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('acorn').Options} AcornOptions\n * @typedef {import('acorn').Comment} Comment\n * @typedef {import('acorn').Token} Token\n * @typedef {import('acorn').Node} AcornNode\n * @typedef {import('estree').Program} Program\n * @typedef {import('estree').Node} EstreeNode\n *\n * @typedef {{parse: import('acorn').parse, parseExpressionAt: import('acorn').parseExpressionAt}} Acorn\n * @typedef {Error & {raisedAt: number, pos: number, loc: {line: number, column: number}}} AcornError\n *\n * @typedef Options\n * @property {Acorn} acorn\n * @property {AcornOptions | null | undefined} [acornOptions]\n * @property {Point | null | undefined} [start]\n * @property {string | null | undefined} [prefix='']\n * @property {string | null | undefined} [suffix='']\n * @property {boolean | null | undefined} [expression=false]\n * @property {boolean | null | undefined} [allowEmpty=false]\n */\n\nimport { visit } from 'estree-util-visit';\nimport { VFileMessage } from 'vfile-message';\nimport { location } from 'vfile-location';\n\n/**\n * Parse a list of micromark events with acorn.\n *\n * @param {Array<Event>} events\n * @param {Options} options\n * @returns {{estree: Program | undefined, error: Error | undefined, swallow: boolean}}\n */\n// eslint-disable-next-line complexity\nexport function eventsToAcorn(events, options) {\n  const prefix = options.prefix || '';\n  const suffix = options.suffix || '';\n  const acornOptions = Object.assign({}, options.acornOptions);\n  /** @type {Array<Comment>} */\n  const comments = [];\n  /** @type {Array<Token>} */\n  const tokens = [];\n  const onComment = acornOptions.onComment;\n  const onToken = acornOptions.onToken;\n  /** @type {Array<string>} */\n  const chunks = [];\n  /** @type {Record<string, Point>} */\n  const lines = {};\n  let index = -1;\n  let swallow = false;\n  /** @type {AcornNode | undefined} */\n  let estree;\n  /** @type {Error | undefined} */\n  let exception;\n  /** @type {number} */\n  let startLine;\n  /** @type {AcornOptions} */\n  const acornConfig = Object.assign({}, acornOptions, {\n    onComment: comments,\n    preserveParens: true\n  });\n  if (onToken) {\n    acornConfig.onToken = tokens;\n  }\n\n  // We use `events` to detect everything, however, it could be empty.\n  // In that case, we need `options.start` to make sense of positional info.\n  if (options.start) {\n    startLine = options.start.line;\n    lines[startLine] = options.start;\n  }\n  while (++index < events.length) {\n    const [kind, token, context] = events[index];\n\n    // Assume only void events (and `enter` followed immediately by an `exit`).\n    if (kind === 'exit') {\n      chunks.push(context.sliceSerialize(token));\n      setPoint(token.start);\n      setPoint(token.end);\n    }\n  }\n  const source = chunks.join('');\n  const value = prefix + source + suffix;\n  const isEmptyExpression = options.expression && empty(source);\n  const place = location(source);\n  if (isEmptyExpression && !options.allowEmpty) {\n    throw new VFileMessage('Unexpected empty expression', parseOffsetToUnistPoint(0), 'micromark-extension-mdx-expression:unexpected-empty-expression');\n  }\n  try {\n    estree = options.expression && !isEmptyExpression ? options.acorn.parseExpressionAt(value, 0, acornConfig) : options.acorn.parse(value, acornConfig);\n  } catch (error_) {\n    const error = /** @type {AcornError} */error_;\n    const point = parseOffsetToUnistPoint(error.pos);\n    error.message = String(error.message).replace(/ \\(\\d+:\\d+\\)$/, '');\n    error.pos = point.offset;\n    error.loc = {\n      line: point.line,\n      column: point.column - 1\n    };\n    exception = error;\n    swallow = error.raisedAt >= prefix.length + source.length ||\n    // Broken comments are raised at their start, not their end.\n    error.message === 'Unterminated comment';\n  }\n  if (estree && options.expression && !isEmptyExpression) {\n    if (empty(value.slice(estree.end, value.length - suffix.length))) {\n      estree = {\n        type: 'Program',\n        start: 0,\n        end: prefix.length + source.length,\n        // @ts-expect-error: It’s good.\n        body: [{\n          type: 'ExpressionStatement',\n          expression: estree,\n          start: 0,\n          end: prefix.length + source.length\n        }],\n        sourceType: 'module',\n        comments: []\n      };\n    } else {\n      const point = parseOffsetToUnistPoint(estree.end);\n      exception = new Error('Unexpected content after expression');\n      // @ts-expect-error: acorn exception.\n      exception.pos = point.offset;\n      // @ts-expect-error: acorn exception.\n      exception.loc = {\n        line: point.line,\n        column: point.column - 1\n      };\n      estree = undefined;\n    }\n  }\n  if (estree) {\n    // @ts-expect-error: acorn *does* allow comments\n    estree.comments = comments;\n\n    // @ts-expect-error: acorn looks enough like estree.\n    visit(estree, (esnode, field, index, parents) => {\n      let context = /** @type {AcornNode | Array<AcornNode>} */\n      parents[parents.length - 1];\n      /** @type {string | number | null} */\n      let prop = field;\n\n      // Remove non-standard `ParenthesizedExpression`.\n      // @ts-expect-error: included in acorn.\n      if (esnode.type === 'ParenthesizedExpression' && context && prop) {\n        /* c8 ignore next 5 */\n        if (typeof index === 'number') {\n          // @ts-expect-error: indexable.\n          context = context[prop];\n          prop = index;\n        }\n\n        // @ts-expect-error: indexable.\n        context[prop] = esnode.expression;\n      }\n      fixPosition(esnode);\n    });\n\n    // Comment positions are fixed by `visit` because they’re in the tree.\n    if (Array.isArray(onComment)) {\n      onComment.push(...comments);\n    } else if (typeof onComment === 'function') {\n      for (const comment of comments) {\n        onComment(comment.type === 'Block', comment.value, comment.start, comment.end, comment.loc.start, comment.loc.end);\n      }\n    }\n    for (const token of tokens) {\n      fixPosition(token);\n      if (Array.isArray(onToken)) {\n        onToken.push(token);\n      } else {\n        // `tokens` are not added if `onToken` is not defined, so it must be a\n        // function.\n\n        onToken(token);\n      }\n    }\n  }\n\n  // @ts-expect-error: It’s a program now.\n  return {\n    estree,\n    error: exception,\n    swallow\n  };\n\n  /**\n   * Update the position of a node.\n   *\n   * @param {AcornNode | EstreeNode | Token} nodeOrToken\n   * @returns {void}\n   */\n  function fixPosition(nodeOrToken) {\n    const pointStart = parseOffsetToUnistPoint(nodeOrToken.start);\n    const pointEnd = parseOffsetToUnistPoint(nodeOrToken.end);\n    nodeOrToken.start = pointStart.offset;\n    nodeOrToken.end = pointEnd.offset;\n    nodeOrToken.loc = {\n      start: {\n        line: pointStart.line,\n        column: pointStart.column - 1,\n        offset: pointStart.offset\n      },\n      end: {\n        line: pointEnd.line,\n        column: pointEnd.column - 1,\n        offset: pointEnd.offset\n      }\n    };\n    nodeOrToken.range = [nodeOrToken.start, nodeOrToken.end];\n  }\n\n  /**\n   * Turn an arbitrary offset into the parsed value, into a point in the source\n   * value.\n   *\n   * @param {number} acornOffset\n   * @returns {Point}\n   */\n  function parseOffsetToUnistPoint(acornOffset) {\n    let sourceOffset = acornOffset - prefix.length;\n    if (sourceOffset < 0) {\n      sourceOffset = 0;\n    } else if (sourceOffset > source.length) {\n      sourceOffset = source.length;\n    }\n    const pointInSource = place.toPoint(sourceOffset);\n    const line = startLine + (pointInSource.line - 1);\n    const column = lines[line].column + (pointInSource.column - 1);\n    const offset = lines[line].offset + (pointInSource.column - 1);\n    return (/** @type {Point} */{\n        line,\n        column,\n        offset\n      }\n    );\n  }\n\n  /** @param {Point} point */\n  function setPoint(point) {\n    // Not passed by `micromark-extension-mdxjs-esm`\n    /* c8 ignore next 3 */\n    if (!startLine || point.line < startLine) {\n      startLine = point.line;\n    }\n    if (!(point.line in lines) || lines[point.line].offset > point.offset) {\n      lines[point.line] = point;\n    }\n  }\n}\n\n/**\n * @param {string} value\n * @returns {boolean}\n */\nfunction empty(value) {\n  return /^\\s*$/.test(value\n  // Multiline comments.\n  .replace(/\\/\\*[\\s\\S]*?\\*\\//g, '')\n  // Line comments.\n  // EOF instead of EOL is specifically not allowed, because that would\n  // mean the closing brace is on the commented-out line\n  .replace(/\\/\\/[^\\r\\n]*(\\r\\n|\\n|\\r)/g, ''));\n}","/**\n * @typedef {import('vfile').VFile} VFile\n * @typedef {import('vfile').Value} Value\n */\n\n/**\n * @typedef Point\n *   unist point, where `line` and `column` can be `undefined`.\n * @property {number | undefined} line\n *   Line.\n * @property {number | undefined} column\n *   Column.\n * @property {number | undefined} [offset]\n *   Offset.\n *\n * @typedef PointLike\n *   unist point, allowed as input.\n * @property {number | null | undefined} [line]\n *   Line.\n * @property {number | null | undefined} [column]\n *   Column.\n * @property {number | null | undefined} [offset]\n *   Offset.\n *\n * @callback ToPoint\n *   Get a line/column-based `point` from `offset`.\n * @param {number | null | undefined} [offset]\n *   Something that should be an `offset.\n * @returns {Point}\n *   Point, line/column are undefined for invalid or out of bounds input.\n *\n * @callback ToOffset\n *   Get an offset from a line/column-based `point`.\n * @param {Point | null | undefined} [point]\n *   Something that should be a `point.\n * @returns {number}\n *   Offset or `-1` for invalid or out of bounds input.\n *\n * @typedef Location\n *   Accessors for index.\n * @property {ToPoint} toPoint\n *   Get a line/column-based `point` from `offset`.\n * @property {ToOffset} toOffset\n *   Get an offset from a line/column-based `point`.\n */\n\n/**\n * Index the given document so you can translate between line/column and offset\n * based positional info.\n *\n * @param {VFile | Value} file\n *   File to index.\n * @returns {Location}\n *   Accessors for index.\n */\nexport function location(file) {\n  const value = String(file)\n  /** @type {Array<number>} */\n  const indices = []\n  const search = /\\r?\\n|\\r/g\n\n  while (search.test(value)) {\n    indices.push(search.lastIndex)\n  }\n\n  indices.push(value.length + 1)\n\n  return {toPoint, toOffset}\n\n  /** @type {ToPoint} */\n  function toPoint(offset) {\n    let index = -1\n\n    if (\n      typeof offset === 'number' &&\n      offset > -1 &&\n      offset < indices[indices.length - 1]\n    ) {\n      while (++index < indices.length) {\n        if (indices[index] > offset) {\n          return {\n            line: index + 1,\n            column: offset - (index > 0 ? indices[index - 1] : 0) + 1,\n            offset\n          }\n        }\n      }\n    }\n\n    return {line: undefined, column: undefined, offset: undefined}\n  }\n\n  /** @type {ToOffset} */\n  function toOffset(point) {\n    const line = point && point.line\n    const column = point && point.column\n\n    if (\n      typeof line === 'number' &&\n      typeof column === 'number' &&\n      !Number.isNaN(line) &&\n      !Number.isNaN(column) &&\n      line - 1 in indices\n    ) {\n      const offset = (indices[line - 2] || 0) + column - 1 || 0\n\n      if (offset > -1 && offset < indices[indices.length - 1]) {\n        return offset\n      }\n    }\n\n    return -1\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-events-to-acorn').Acorn} Acorn\n * @typedef {import('micromark-util-events-to-acorn').AcornOptions} AcornOptions\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {factorySpace} from 'micromark-factory-space'\nimport {positionFromEstree} from 'unist-util-position-from-estree'\nimport {VFileMessage} from 'vfile-message'\nimport {eventsToAcorn} from 'micromark-util-events-to-acorn'\n\n/**\n * @this {TokenizeContext}\n * @param {Effects} effects\n * @param {State} ok\n * @param {string} type\n * @param {string} markerType\n * @param {string} chunkType\n * @param {Acorn | null | undefined} [acorn]\n * @param {AcornOptions | null | undefined} [acornOptions]\n * @param {boolean | null | undefined} [addResult=false]\n * @param {boolean | null | undefined} [spread=false]\n * @param {boolean | null | undefined} [allowEmpty=false]\n * @param {boolean | null | undefined} [allowLazy=false]\n * @param {number | null | undefined} [startColumn=0]\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryMdxExpression(\n  effects,\n  ok,\n  type,\n  markerType,\n  chunkType,\n  acorn,\n  acornOptions,\n  addResult,\n  spread,\n  allowEmpty,\n  allowLazy,\n  startColumn\n) {\n  const self = this\n  const eventStart = this.events.length + 3 // Add main and marker token\n  const tail = this.events[this.events.length - 1]\n  const initialPrefix =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  const prefixExpressionIndent = initialPrefix ? initialPrefix + 1 : 0\n  let balance = 1\n  /** @type {Point} */\n  let startPosition\n  /** @type {Error} */\n  let lastCrash\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    startPosition = self.now()\n    return atBreak\n  }\n\n  /** @type {State} */\n  function atBreak(code) {\n    if (code === null) {\n      throw (\n        lastCrash ||\n        new VFileMessage(\n          'Unexpected end of file in expression, expected a corresponding closing brace for `{`',\n          self.now(),\n          'micromark-extension-mdx-expression:unexpected-eof'\n        )\n      )\n    }\n    if (code === 125) {\n      return atClosingBrace(code)\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      // `startColumn` is used by the JSX extensions that also wraps this\n      // factory.\n      // JSX can be indented arbitrarily, but expressions can’t exdent\n      // arbitrarily, due to that they might contain template strings\n      // (backticked strings).\n      // We’ll eat up to where that tag starts (`startColumn`), and a tab size.\n      /* c8 ignore next 3 */\n      const prefixTagIndent = startColumn\n        ? startColumn + 4 - self.now().column\n        : 0\n      const indent = Math.max(prefixExpressionIndent, prefixTagIndent)\n      return indent\n        ? factorySpace(effects, atBreak, 'linePrefix', indent)\n        : atBreak\n    }\n    const now = self.now()\n    if (\n      now.line !== startPosition.line &&\n      !allowLazy &&\n      self.parser.lazy[now.line]\n    ) {\n      throw new VFileMessage(\n        'Unexpected end of file in expression, expected a corresponding closing brace for `{`',\n        self.now(),\n        'micromark-extension-mdx-expression:unexpected-eof'\n      )\n    }\n    effects.enter(chunkType)\n    return inside(code)\n  }\n\n  /** @type {State} */\n  function inside(code) {\n    if (code === null || code === 125 || markdownLineEnding(code)) {\n      effects.exit(chunkType)\n      return atBreak(code)\n    }\n    if (code === 123 && !acorn) {\n      effects.consume(code)\n      balance++\n      return inside\n    }\n    effects.consume(code)\n    return inside\n  }\n\n  /** @type {State} */\n  function atClosingBrace(code) {\n    balance--\n\n    // Agnostic mode: count balanced braces.\n    if (!acorn) {\n      if (balance) {\n        effects.enter(chunkType)\n        effects.consume(code)\n        return inside\n      }\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    // Gnostic mode: parse w/ acorn.\n    const result = eventsToAcorn(self.events.slice(eventStart), {\n      acorn,\n      acornOptions,\n      start: startPosition,\n      expression: true,\n      allowEmpty,\n      prefix: spread ? '({' : '',\n      suffix: spread ? '})' : ''\n    })\n    const estree = result.estree\n\n    // Get the spread value.\n    if (spread && estree) {\n      // Should always be the case as we wrap in `d={}`\n\n      const head = estree.body[0]\n      // Can occur in some complex attributes.\n      /* c8 ignore next 11 */\n      if (\n        head.type !== 'ExpressionStatement' ||\n        head.expression.type !== 'ObjectExpression'\n      ) {\n        throw new VFileMessage(\n          'Unexpected `' +\n            head.type +\n            '` in code: expected an object spread (`{...spread}`)',\n          positionFromEstree(head).start,\n          'micromark-extension-mdx-expression:non-spread'\n        )\n      } else if (head.expression.properties[1]) {\n        throw new VFileMessage(\n          'Unexpected extra content in spread: only a single spread is supported',\n          positionFromEstree(head.expression.properties[1]).start,\n          'micromark-extension-mdx-expression:spread-extra'\n        )\n      } else if (\n        head.expression.properties[0] &&\n        head.expression.properties[0].type !== 'SpreadElement'\n      ) {\n        throw new VFileMessage(\n          'Unexpected `' +\n            head.expression.properties[0].type +\n            '` in code: only spread elements are supported',\n          positionFromEstree(head.expression.properties[0]).start,\n          'micromark-extension-mdx-expression:non-spread'\n        )\n      }\n    }\n    if (result.error) {\n      lastCrash = new VFileMessage(\n        'Could not parse expression with acorn: ' + result.error.message,\n        {\n          // @ts-expect-error: fine.\n          line: result.error.loc.line,\n          // @ts-expect-error: fine.\n          column: result.error.loc.column + 1,\n          // @ts-expect-error: fine.\n          offset: result.error.pos\n        },\n        'micromark-extension-mdx-expression:acorn'\n      )\n      if (code !== null && result.swallow) {\n        effects.enter(chunkType)\n        effects.consume(code)\n        return inside\n      }\n      throw lastCrash\n    }\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    Object.assign(\n      effects.exit(type),\n      addResult\n        ? {\n            estree\n          }\n        : undefined\n    )\n    return ok\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-events-to-acorn').Acorn} Acorn\n * @typedef {import('micromark-util-events-to-acorn').AcornOptions} AcornOptions\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {Acorn | null | undefined} [acorn]\n *   Acorn parser to use (optional).\n * @property {AcornOptions | null | undefined} [acornOptions]\n *   Options to pass to acorn (default: `{ecmaVersion: 2020, locations: true,\n *   sourceType: 'module'}`).\n *   All fields (except for `locations`) can be set.\n * @property {boolean | null | undefined} [addResult=false]\n *   Whether to add an `estree` field to `mdxFlowExpression` and\n *   `mdxTextExpression` tokens with results from acorn.\n * @property {boolean | null | undefined} [spread=false]\n *   Undocumented option to parse only a spread (used by\n *   `micromark-extension-mdx-jsx` to parse spread attributes).\n * @property {boolean | null | undefined} [allowEmpty=true]\n *   Undocumented option to disallow empty attributes (used by\n *   `micromark-extension-mdx-jsx` to prohobit empty attribute values).\n */\n\nimport {factoryMdxExpression} from 'micromark-factory-mdx-expression'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/**\n * Add support for MDX expressions.\n *\n * Function called optionally with options to get a syntax extension for\n * micromark.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Extension}\n *   Syntax extension for micromark (passed in `extensions`).\n */\nexport function mdxExpression(options) {\n  const options_ = options || {}\n  const addResult = options_.addResult\n  const acorn = options_.acorn\n  // Hidden: `micromark-extension-mdx-jsx` supports expressions in tags,\n  // and one of them is only “spread” elements.\n  // It also has expressions that are not allowed to be empty (`<x y={}/>`).\n  // Instead of duplicating code there, this are two small hidden feature here\n  // to test that behavior.\n  const spread = options_.spread\n  let allowEmpty = options_.allowEmpty\n  /** @type {AcornOptions} */\n  let acornOptions\n  if (allowEmpty === null || allowEmpty === undefined) {\n    allowEmpty = true\n  }\n  if (acorn) {\n    if (!acorn.parseExpressionAt) {\n      throw new Error(\n        'Expected a proper `acorn` instance passed in as `options.acorn`'\n      )\n    }\n    acornOptions = Object.assign(\n      {\n        ecmaVersion: 2020,\n        sourceType: 'module'\n      },\n      options_.acornOptions\n    )\n  } else if (options_.acornOptions || options_.addResult) {\n    throw new Error('Expected an `acorn` instance passed in as `options.acorn`')\n  }\n  return {\n    flow: {\n      [123]: {\n        tokenize: tokenizeFlowExpression,\n        concrete: true\n      }\n    },\n    text: {\n      [123]: {\n        tokenize: tokenizeTextExpression\n      }\n    }\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeFlowExpression(effects, ok, nok) {\n    const self = this\n    return start\n\n    /** @type {State} */\n    function start(code) {\n      return factoryMdxExpression.call(\n        self,\n        effects,\n        factorySpace(effects, after, 'whitespace'),\n        'mdxFlowExpression',\n        'mdxFlowExpressionMarker',\n        'mdxFlowExpressionChunk',\n        acorn,\n        acornOptions,\n        addResult,\n        spread,\n        allowEmpty\n      )(code)\n    }\n\n    /** @type {State} */\n    function after(code) {\n      return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n    }\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeTextExpression(effects, ok) {\n    const self = this\n    return start\n\n    /** @type {State} */\n    function start(code) {\n      return factoryMdxExpression.call(\n        self,\n        effects,\n        ok,\n        'mdxTextExpression',\n        'mdxTextExpressionMarker',\n        'mdxTextExpressionChunk',\n        acorn,\n        acornOptions,\n        addResult,\n        spread,\n        allowEmpty,\n        true\n      )(code)\n    }\n  }\n}\n","// This module is generated by `build.js`.\nexport const start =\n  /[$A-Z_a-z\\u00AA\\u00B5\\u00BA\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u0870-\\u0887\\u0889-\\u088E\\u08A0-\\u08C9\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C5D\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D04-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u1711\\u171F-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1878\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4C\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309B-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u31A0-\\u31BF\\u31F0-\\u31FF\\u3400-\\u4DBF\\u4E00-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7CA\\uA7D0\\uA7D1\\uA7D3\\uA7D5-\\uA7D9\\uA7F2-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA8FE\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB69\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/\nexport const cont =\n  /[\\d\\u00B7\\u0300-\\u036F\\u0387\\u0483-\\u0487\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u0669\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u06F0-\\u06F9\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07C0-\\u07C9\\u07EB-\\u07F3\\u07FD\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u0898-\\u089F\\u08CA-\\u08E1\\u08E3-\\u0903\\u093A-\\u093C\\u093E-\\u094F\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096F\\u0981-\\u0983\\u09BC\\u09BE-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CD\\u09D7\\u09E2\\u09E3\\u09E6-\\u09EF\\u09FE\\u0A01-\\u0A03\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A66-\\u0A71\\u0A75\\u0A81-\\u0A83\\u0ABC\\u0ABE-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AE2\\u0AE3\\u0AE6-\\u0AEF\\u0AFA-\\u0AFF\\u0B01-\\u0B03\\u0B3C\\u0B3E-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B55-\\u0B57\\u0B62\\u0B63\\u0B66-\\u0B6F\\u0B82\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C04\\u0C3C\\u0C3E-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C66-\\u0C6F\\u0C81-\\u0C83\\u0CBC\\u0CBE-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CE2\\u0CE3\\u0CE6-\\u0CEF\\u0CF3\\u0D00-\\u0D03\\u0D3B\\u0D3C\\u0D3E-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4D\\u0D57\\u0D62\\u0D63\\u0D66-\\u0D6F\\u0D81-\\u0D83\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0E50-\\u0E59\\u0EB1\\u0EB4-\\u0EBC\\u0EC8-\\u0ECE\\u0ED0-\\u0ED9\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E\\u0F3F\\u0F71-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102B-\\u103E\\u1040-\\u1049\\u1056-\\u1059\\u105E-\\u1060\\u1062-\\u1064\\u1067-\\u106D\\u1071-\\u1074\\u1082-\\u108D\\u108F-\\u109D\\u135D-\\u135F\\u1369-\\u1371\\u1712-\\u1715\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4-\\u17D3\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u180F-\\u1819\\u18A9\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u194F\\u19D0-\\u19DA\\u1A17-\\u1A1B\\u1A55-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AB0-\\u1ABD\\u1ABF-\\u1ACE\\u1B00-\\u1B04\\u1B34-\\u1B44\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1B82\\u1BA1-\\u1BAD\\u1BB0-\\u1BB9\\u1BE6-\\u1BF3\\u1C24-\\u1C37\\u1C40-\\u1C49\\u1C50-\\u1C59\\u1CD0-\\u1CD2\\u1CD4-\\u1CE8\\u1CED\\u1CF4\\u1CF7-\\u1CF9\\u1DC0-\\u1DFF\\u200C\\u200D\\u203F\\u2040\\u2054\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302F\\u3099\\u309A\\uA620-\\uA629\\uA66F\\uA674-\\uA67D\\uA69E\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA823-\\uA827\\uA82C\\uA880\\uA881\\uA8B4-\\uA8C5\\uA8D0-\\uA8D9\\uA8E0-\\uA8F1\\uA8FF-\\uA909\\uA926-\\uA92D\\uA947-\\uA953\\uA980-\\uA983\\uA9B3-\\uA9C0\\uA9D0-\\uA9D9\\uA9E5\\uA9F0-\\uA9F9\\uAA29-\\uAA36\\uAA43\\uAA4C\\uAA4D\\uAA50-\\uAA59\\uAA7B-\\uAA7D\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEB-\\uAAEF\\uAAF5\\uAAF6\\uABE3-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFF10-\\uFF19\\uFF3F]/\n","import {start as startRe, cont as contRe} from './regex.js'\n\n/**\n * Checks if the given character code can start an identifier.\n *\n * @param {number} code\n *   Character code to check.\n * @returns {boolean}\n *   Whether `code` can start an identifier.\n */\n// To do: support astrals.\nexport function start(code) {\n  return startRe.test(String.fromCharCode(code))\n}\n\n/**\n * Checks if the given character code can continue an identifier.\n *\n * @param {number} code\n *   Character code to check.\n * @returns {boolean}\n *   Whether `code` can continue an identifier.\n */\n// To do: support astrals.\nexport function cont(code) {\n  const character = String.fromCharCode(code)\n  return startRe.test(character) || contRe.test(character)\n}\n\n/**\n * Checks if the given value is a valid identifier name.\n *\n * @param {string} name\n *   Identifier to check.\n * @returns {boolean}\n *   Whether `name` can be an identifier.\n */\nexport function name(name) {\n  let index = -1\n\n  while (++index < name.length) {\n    if (!(index ? cont : start)(name.charCodeAt(index))) return false\n  }\n\n  // `false` if `name` is empty.\n  return index > 0\n}\n","/**\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-factory-mdx-expression').Acorn} Acorn\n * @typedef {import('micromark-factory-mdx-expression').AcornOptions} AcornOptions\n */\nimport {start as idStart, cont as idCont} from 'estree-util-is-identifier-name'\nimport {factoryMdxExpression} from 'micromark-factory-mdx-expression'\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace,\n  unicodeWhitespace\n} from 'micromark-util-character'\nimport {VFileMessage} from 'vfile-message'\nconst lazyLineEnd = {\n  tokenize: tokenizeLazyLineEnd,\n  partial: true\n}\n/**\n * @this {TokenizeContext}\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {Acorn|undefined} acorn\n * @param {AcornOptions|undefined} acornOptions\n * @param {boolean|undefined} addResult\n * @param {boolean|undefined} allowLazy\n * @param {string} tagType\n * @param {string} tagMarkerType\n * @param {string} tagClosingMarkerType\n * @param {string} tagSelfClosingMarker\n * @param {string} tagNameType\n * @param {string} tagNamePrimaryType\n * @param {string} tagNameMemberMarkerType\n * @param {string} tagNameMemberType\n * @param {string} tagNamePrefixMarkerType\n * @param {string} tagNameLocalType\n * @param {string} tagExpressionAttributeType\n * @param {string} tagExpressionAttributeMarkerType\n * @param {string} tagExpressionAttributeValueType\n * @param {string} tagAttributeType\n * @param {string} tagAttributeNameType\n * @param {string} tagAttributeNamePrimaryType\n * @param {string} tagAttributeNamePrefixMarkerType\n * @param {string} tagAttributeNameLocalType\n * @param {string} tagAttributeInitializerMarkerType\n * @param {string} tagAttributeValueLiteralType\n * @param {string} tagAttributeValueLiteralMarkerType\n * @param {string} tagAttributeValueLiteralValueType\n * @param {string} tagAttributeValueExpressionType\n * @param {string} tagAttributeValueExpressionMarkerType\n * @param {string} tagAttributeValueExpressionValueType\n */\n// eslint-disable-next-line max-params\n\nexport function factoryTag(\n  effects,\n  ok,\n  nok,\n  acorn,\n  acornOptions,\n  addResult,\n  allowLazy,\n  tagType,\n  tagMarkerType,\n  tagClosingMarkerType,\n  tagSelfClosingMarker,\n  tagNameType,\n  tagNamePrimaryType,\n  tagNameMemberMarkerType,\n  tagNameMemberType,\n  tagNamePrefixMarkerType,\n  tagNameLocalType,\n  tagExpressionAttributeType,\n  tagExpressionAttributeMarkerType,\n  tagExpressionAttributeValueType,\n  tagAttributeType,\n  tagAttributeNameType,\n  tagAttributeNamePrimaryType,\n  tagAttributeNamePrefixMarkerType,\n  tagAttributeNameLocalType,\n  tagAttributeInitializerMarkerType,\n  tagAttributeValueLiteralType,\n  tagAttributeValueLiteralMarkerType,\n  tagAttributeValueLiteralValueType,\n  tagAttributeValueExpressionType,\n  tagAttributeValueExpressionMarkerType,\n  tagAttributeValueExpressionValueType\n) {\n  const self = this\n  /** @type {State} */\n\n  let returnState\n  /** @type {NonNullable<Code>|undefined} */\n\n  let marker\n  /** @type {Point|undefined} */\n\n  let startPoint\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    startPoint = self.now()\n    effects.enter(tagType)\n    effects.enter(tagMarkerType)\n    effects.consume(code)\n    effects.exit(tagMarkerType)\n    return afterStart\n  }\n  /** @type {State} */\n\n  function afterStart(code) {\n    // Deviate from JSX, which allows arbitrary whitespace.\n    // See: <https://github.com/micromark/micromark-extension-mdx-jsx/issues/7>.\n    if (markdownLineEnding(code) || markdownSpace(code)) {\n      return nok(code)\n    } // Any other ES whitespace does not get this treatment.\n\n    returnState = beforeName\n    return optionalEsWhitespace(code)\n  } // Right after `<`, before an optional name.\n\n  /** @type {State} */\n\n  function beforeName(code) {\n    // Closing tag.\n    if (code === 47) {\n      effects.enter(tagClosingMarkerType)\n      effects.consume(code)\n      effects.exit(tagClosingMarkerType)\n      returnState = beforeClosingTagName\n      return optionalEsWhitespace\n    } // Fragment opening tag.\n\n    if (code === 62) {\n      return tagEnd(code)\n    } // Start of a name.\n\n    if (code !== null && idStart(code)) {\n      effects.enter(tagNameType)\n      effects.enter(tagNamePrimaryType)\n      effects.consume(code)\n      return primaryName\n    }\n\n    crash(\n      code,\n      'before name',\n      'a character that can start a name, such as a letter, `$`, or `_`' +\n        (code === 33\n          ? ' (note: to create a comment in MDX, use `{/* text */}`)'\n          : '')\n    )\n  } // At the start of a closing tag, right after `</`.\n\n  /** @type {State} */\n\n  function beforeClosingTagName(code) {\n    // Fragment closing tag.\n    if (code === 62) {\n      return tagEnd(code)\n    } // Start of a closing tag name.\n\n    if (code !== null && idStart(code)) {\n      effects.enter(tagNameType)\n      effects.enter(tagNamePrimaryType)\n      effects.consume(code)\n      return primaryName\n    }\n\n    crash(\n      code,\n      'before name',\n      'a character that can start a name, such as a letter, `$`, or `_`' +\n        (code === 42 || code === 47\n          ? ' (note: JS comments in JSX tags are not supported in MDX)'\n          : '')\n    )\n  } // Inside the primary name.\n\n  /** @type {State} */\n\n  function primaryName(code) {\n    // Continuation of name: remain.\n    if (code === 45 || (code !== null && idCont(code))) {\n      effects.consume(code)\n      return primaryName\n    } // End of name.\n\n    if (\n      code === 46 ||\n      code === 47 ||\n      code === 58 ||\n      code === 62 ||\n      code === 123 ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code)\n    ) {\n      effects.exit(tagNamePrimaryType)\n      returnState = afterPrimaryName\n      return optionalEsWhitespace(code)\n    }\n\n    crash(\n      code,\n      'in name',\n      'a name character such as letters, digits, `$`, or `_`; whitespace before attributes; or the end of the tag' +\n        (code === 64\n          ? ' (note: to create a link in MDX, use `[text](url)`)'\n          : '')\n    )\n  } // After a name.\n\n  /** @type {State} */\n\n  function afterPrimaryName(code) {\n    // Start of a member name.\n    if (code === 46) {\n      effects.enter(tagNameMemberMarkerType)\n      effects.consume(code)\n      effects.exit(tagNameMemberMarkerType)\n      returnState = beforeMemberName\n      return optionalEsWhitespace\n    } // Start of a local name.\n\n    if (code === 58) {\n      effects.enter(tagNamePrefixMarkerType)\n      effects.consume(code)\n      effects.exit(tagNamePrefixMarkerType)\n      returnState = beforeLocalName\n      return optionalEsWhitespace\n    } // End of name.\n\n    if (\n      code === 47 ||\n      code === 62 ||\n      code === 123 ||\n      (code !== null && idStart(code))\n    ) {\n      effects.exit(tagNameType)\n      return beforeAttribute(code)\n    }\n\n    crash(\n      code,\n      'after name',\n      'a character that can start an attribute name, such as a letter, `$`, or `_`; whitespace before attributes; or the end of the tag'\n    )\n  } // We’ve seen a `.` and are expecting a member name.\n\n  /** @type {State} */\n\n  function beforeMemberName(code) {\n    // Start of a member name.\n    if (code !== null && idStart(code)) {\n      effects.enter(tagNameMemberType)\n      effects.consume(code)\n      return memberName\n    }\n\n    crash(\n      code,\n      'before member name',\n      'a character that can start an attribute name, such as a letter, `$`, or `_`; whitespace before attributes; or the end of the tag'\n    )\n  } // Inside the member name.\n\n  /** @type {State} */\n\n  function memberName(code) {\n    // Continuation of member name: stay in state\n    if (code === 45 || (code !== null && idCont(code))) {\n      effects.consume(code)\n      return memberName\n    } // End of member name (note that namespaces and members can’t be combined).\n\n    if (\n      code === 46 ||\n      code === 47 ||\n      code === 62 ||\n      code === 123 ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code)\n    ) {\n      effects.exit(tagNameMemberType)\n      returnState = afterMemberName\n      return optionalEsWhitespace(code)\n    }\n\n    crash(\n      code,\n      'in member name',\n      'a name character such as letters, digits, `$`, or `_`; whitespace before attributes; or the end of the tag' +\n        (code === 64\n          ? ' (note: to create a link in MDX, use `[text](url)`)'\n          : '')\n    )\n  } // After a member name: this is the same as `afterPrimaryName` but we don’t\n  // expect colons.\n\n  /** @type {State} */\n\n  function afterMemberName(code) {\n    // Start another member name.\n    if (code === 46) {\n      effects.enter(tagNameMemberMarkerType)\n      effects.consume(code)\n      effects.exit(tagNameMemberMarkerType)\n      returnState = beforeMemberName\n      return optionalEsWhitespace\n    } // End of name.\n\n    if (\n      code === 47 ||\n      code === 62 ||\n      code === 123 ||\n      (code !== null && idStart(code))\n    ) {\n      effects.exit(tagNameType)\n      return beforeAttribute(code)\n    }\n\n    crash(\n      code,\n      'after member name',\n      'a character that can start an attribute name, such as a letter, `$`, or `_`; whitespace before attributes; or the end of the tag'\n    )\n  } // We’ve seen a `:`, and are expecting a local name.\n\n  /** @type {State} */\n\n  function beforeLocalName(code) {\n    // Start of a local name.\n    if (code !== null && idStart(code)) {\n      effects.enter(tagNameLocalType)\n      effects.consume(code)\n      return localName\n    }\n\n    crash(\n      code,\n      'before local name',\n      'a character that can start a name, such as a letter, `$`, or `_`' +\n        (code === 43 || (code !== null && code > 46 && code < 58)\n          ? /* `/` - `9` */\n            ' (note: to create a link in MDX, use `[text](url)`)'\n          : '')\n    )\n  } // Inside the local name.\n\n  /** @type {State} */\n\n  function localName(code) {\n    // Continuation of local name: stay in state\n    if (code === 45 || (code !== null && idCont(code))) {\n      effects.consume(code)\n      return localName\n    } // End of local name (note that we don’t expect another colon, or a member).\n\n    if (\n      code === 47 ||\n      code === 62 ||\n      code === 123 ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code)\n    ) {\n      effects.exit(tagNameLocalType)\n      returnState = afterLocalName\n      return optionalEsWhitespace(code)\n    }\n\n    crash(\n      code,\n      'in local name',\n      'a name character such as letters, digits, `$`, or `_`; whitespace before attributes; or the end of the tag'\n    )\n  } // After a local name: this is the same as `afterPrimaryName` but we don’t\n  // expect colons or periods.\n\n  /** @type {State} */\n\n  function afterLocalName(code) {\n    // End of name.\n    if (\n      code === 47 ||\n      code === 62 ||\n      code === 123 ||\n      (code !== null && idStart(code))\n    ) {\n      effects.exit(tagNameType)\n      return beforeAttribute(code)\n    }\n\n    crash(\n      code,\n      'after local name',\n      'a character that can start an attribute name, such as a letter, `$`, or `_`; whitespace before attributes; or the end of the tag'\n    )\n  }\n  /** @type {State} */\n\n  function beforeAttribute(code) {\n    // Mark as self-closing.\n    if (code === 47) {\n      effects.enter(tagSelfClosingMarker)\n      effects.consume(code)\n      effects.exit(tagSelfClosingMarker)\n      returnState = selfClosing\n      return optionalEsWhitespace\n    } // End of tag.\n\n    if (code === 62) {\n      return tagEnd(code)\n    } // Attribute expression.\n\n    if (code === 123) {\n      return factoryMdxExpression.call(\n        self,\n        effects,\n        afterAttributeExpression,\n        tagExpressionAttributeType,\n        tagExpressionAttributeMarkerType,\n        tagExpressionAttributeValueType,\n        acorn,\n        acornOptions,\n        addResult,\n        true,\n        false,\n        allowLazy,\n        startPoint.column\n      )(code)\n    } // Start of an attribute name.\n\n    if (code !== null && idStart(code)) {\n      effects.enter(tagAttributeType)\n      effects.enter(tagAttributeNameType)\n      effects.enter(tagAttributeNamePrimaryType)\n      effects.consume(code)\n      return attributePrimaryName\n    }\n\n    crash(\n      code,\n      'before attribute name',\n      'a character that can start an attribute name, such as a letter, `$`, or `_`; whitespace before attributes; or the end of the tag'\n    )\n  } // At the start of an attribute expression.\n\n  /** @type {State} */\n\n  function afterAttributeExpression(code) {\n    returnState = beforeAttribute\n    return optionalEsWhitespace(code)\n  } // In the attribute name.\n\n  /** @type {State} */\n\n  function attributePrimaryName(code) {\n    // Continuation of the attribute name.\n    if (code === 45 || (code !== null && idCont(code))) {\n      effects.consume(code)\n      return attributePrimaryName\n    } // End of attribute name or tag.\n\n    if (\n      code === 47 ||\n      code === 58 ||\n      code === 61 ||\n      code === 62 ||\n      code === 123 ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code)\n    ) {\n      effects.exit(tagAttributeNamePrimaryType)\n      returnState = afterAttributePrimaryName\n      return optionalEsWhitespace(code)\n    }\n\n    crash(\n      code,\n      'in attribute name',\n      'an attribute name character such as letters, digits, `$`, or `_`; `=` to initialize a value; whitespace before attributes; or the end of the tag'\n    )\n  } // After an attribute name, probably finding an equals.\n\n  /** @type {State} */\n\n  function afterAttributePrimaryName(code) {\n    // Start of a local name.\n    if (code === 58) {\n      effects.enter(tagAttributeNamePrefixMarkerType)\n      effects.consume(code)\n      effects.exit(tagAttributeNamePrefixMarkerType)\n      returnState = beforeAttributeLocalName\n      return optionalEsWhitespace\n    } // Start of an attribute value.\n\n    if (code === 61) {\n      effects.exit(tagAttributeNameType)\n      effects.enter(tagAttributeInitializerMarkerType)\n      effects.consume(code)\n      effects.exit(tagAttributeInitializerMarkerType)\n      returnState = beforeAttributeValue\n      return optionalEsWhitespace\n    } // End of tag / new attribute.\n\n    if (\n      code === 47 ||\n      code === 62 ||\n      code === 123 ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code) ||\n      (code !== null && idStart(code))\n    ) {\n      effects.exit(tagAttributeNameType)\n      effects.exit(tagAttributeType)\n      returnState = beforeAttribute\n      return optionalEsWhitespace(code)\n    }\n\n    crash(\n      code,\n      'after attribute name',\n      'a character that can start an attribute name, such as a letter, `$`, or `_`; `=` to initialize a value; or the end of the tag'\n    )\n  } // We’ve seen a `:`, and are expecting a local name.\n\n  /** @type {State} */\n\n  function beforeAttributeLocalName(code) {\n    // Start of a local name.\n    if (code !== null && idStart(code)) {\n      effects.enter(tagAttributeNameLocalType)\n      effects.consume(code)\n      return attributeLocalName\n    }\n\n    crash(\n      code,\n      'before local attribute name',\n      'a character that can start an attribute name, such as a letter, `$`, or `_`; `=` to initialize a value; or the end of the tag'\n    )\n  } // In the local attribute name.\n\n  /** @type {State} */\n\n  function attributeLocalName(code) {\n    // Continuation of the local attribute name.\n    if (code === 45 || (code !== null && idCont(code))) {\n      effects.consume(code)\n      return attributeLocalName\n    } // End of tag / attribute name.\n\n    if (\n      code === 47 ||\n      code === 61 ||\n      code === 62 ||\n      code === 123 ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code)\n    ) {\n      effects.exit(tagAttributeNameLocalType)\n      effects.exit(tagAttributeNameType)\n      returnState = afterAttributeLocalName\n      return optionalEsWhitespace(code)\n    }\n\n    crash(\n      code,\n      'in local attribute name',\n      'an attribute name character such as letters, digits, `$`, or `_`; `=` to initialize a value; whitespace before attributes; or the end of the tag'\n    )\n  } // After a local attribute name, expecting an equals.\n\n  /** @type {State} */\n\n  function afterAttributeLocalName(code) {\n    // Start of an attribute value.\n    if (code === 61) {\n      effects.enter(tagAttributeInitializerMarkerType)\n      effects.consume(code)\n      effects.exit(tagAttributeInitializerMarkerType)\n      returnState = beforeAttributeValue\n      return optionalEsWhitespace\n    } // End of tag / new attribute.\n\n    if (\n      code === 47 ||\n      code === 62 ||\n      code === 123 ||\n      (code !== null && idStart(code))\n    ) {\n      effects.exit(tagAttributeType)\n      return beforeAttribute(code)\n    }\n\n    crash(\n      code,\n      'after local attribute name',\n      'a character that can start an attribute name, such as a letter, `$`, or `_`; `=` to initialize a value; or the end of the tag'\n    )\n  } // After an attribute value initializer, expecting quotes and such.\n\n  /** @type {State} */\n\n  function beforeAttributeValue(code) {\n    // Start of double- or single quoted value.\n    if (code === 34 || code === 39) {\n      effects.enter(tagAttributeValueLiteralType)\n      effects.enter(tagAttributeValueLiteralMarkerType)\n      effects.consume(code)\n      effects.exit(tagAttributeValueLiteralMarkerType)\n      marker = code\n      return attributeValueQuotedStart\n    } // Start of an assignment expression.\n\n    if (code === 123) {\n      return factoryMdxExpression.call(\n        self,\n        effects,\n        afterAttributeValueExpression,\n        tagAttributeValueExpressionType,\n        tagAttributeValueExpressionMarkerType,\n        tagAttributeValueExpressionValueType,\n        acorn,\n        acornOptions,\n        addResult,\n        false,\n        false,\n        allowLazy,\n        startPoint.column\n      )(code)\n    }\n\n    crash(\n      code,\n      'before attribute value',\n      'a character that can start an attribute value, such as `\"`, `\\'`, or `{`' +\n        (code === 60\n          ? ' (note: to use an element or fragment as a prop value in MDX, use `{<element />}`)'\n          : '')\n    )\n  }\n  /** @type {State} */\n\n  function afterAttributeValueExpression(code) {\n    effects.exit(tagAttributeType)\n    returnState = beforeAttribute\n    return optionalEsWhitespace(code)\n  } // At the start of a quoted attribute value.\n\n  /** @type {State} */\n\n  function attributeValueQuotedStart(code) {\n    if (code === null) {\n      crash(\n        code,\n        'in attribute value',\n        'a corresponding closing quote `' + String.fromCharCode(marker) + '`'\n      )\n    }\n\n    if (code === marker) {\n      effects.enter(tagAttributeValueLiteralMarkerType)\n      effects.consume(code)\n      effects.exit(tagAttributeValueLiteralMarkerType)\n      effects.exit(tagAttributeValueLiteralType)\n      effects.exit(tagAttributeType)\n      marker = undefined\n      returnState = beforeAttribute\n      return optionalEsWhitespace\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = attributeValueQuotedStart\n      return optionalEsWhitespace(code)\n    }\n\n    effects.enter(tagAttributeValueLiteralValueType)\n    return attributeValueQuoted(code)\n  } // In a quoted attribute value.\n\n  /** @type {State} */\n\n  function attributeValueQuoted(code) {\n    if (code === null || code === marker || markdownLineEnding(code)) {\n      effects.exit(tagAttributeValueLiteralValueType)\n      return attributeValueQuotedStart(code)\n    } // Continuation.\n\n    effects.consume(code)\n    return attributeValueQuoted\n  } // Right after the slash on a tag, e.g., `<asd /`.\n\n  /** @type {State} */\n\n  function selfClosing(code) {\n    // End of tag.\n    if (code === 62) {\n      return tagEnd(code)\n    }\n\n    crash(\n      code,\n      'after self-closing slash',\n      '`>` to end the tag' +\n        (code === 42 || code === 47\n          ? ' (note: JS comments in JSX tags are not supported in MDX)'\n          : '')\n    )\n  } // At a `>`.\n\n  /** @type {State} */\n\n  function tagEnd(code) {\n    effects.enter(tagMarkerType)\n    effects.consume(code)\n    effects.exit(tagMarkerType)\n    effects.exit(tagType)\n    return ok\n  } // Optionally start whitespace.\n\n  /** @type {State} */\n\n  function optionalEsWhitespace(code) {\n    if (markdownLineEnding(code)) {\n      if (allowLazy) {\n        effects.enter('lineEnding')\n        effects.consume(code)\n        effects.exit('lineEnding')\n        return factorySpace(effects, optionalEsWhitespace, 'linePrefix', 4)\n      }\n\n      return effects.attempt(\n        lazyLineEnd,\n        factorySpace(effects, optionalEsWhitespace, 'linePrefix', 4),\n        crashEol\n      )(code)\n    }\n\n    if (markdownSpace(code) || unicodeWhitespace(code)) {\n      effects.enter('esWhitespace')\n      return optionalEsWhitespaceContinue(code)\n    }\n\n    return returnState(code)\n  } // Continue optional whitespace.\n\n  /** @type {State} */\n\n  function optionalEsWhitespaceContinue(code) {\n    if (\n      markdownLineEnding(code) ||\n      !(markdownSpace(code) || unicodeWhitespace(code))\n    ) {\n      effects.exit('esWhitespace')\n      return optionalEsWhitespace(code)\n    }\n\n    effects.consume(code)\n    return optionalEsWhitespaceContinue\n  }\n  /** @type {State} */\n\n  function crashEol() {\n    throw new VFileMessage(\n      'Unexpected lazy line in container, expected line to be prefixed with `>` when in a block quote, whitespace when in a list, etc',\n      self.now(),\n      'micromark-extension-mdx-jsx:unexpected-eof'\n    )\n  } // Crash at a nonconforming character.\n\n  /**\n   * @param {Code} code\n   * @param {string} at\n   * @param {string} expect\n   */\n\n  function crash(code, at, expect) {\n    throw new VFileMessage(\n      'Unexpected ' +\n        (code === null\n          ? 'end of file'\n          : 'character `' +\n            (code === 96 ? '` ` `' : String.fromCharCode(code)) +\n            '` (' +\n            serializeCharCode(code) +\n            ')') +\n        ' ' +\n        at +\n        ', expected ' +\n        expect,\n      self.now(),\n      'micromark-extension-mdx-jsx:unexpected-' +\n        (code === null ? 'eof' : 'character')\n    )\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLazyLineEnd(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return lineStart\n  }\n  /** @type {State} */\n\n  function lineStart(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n  }\n}\n/**\n * @param {NonNullable<Code>} code\n * @returns {string}\n */\n\nfunction serializeCharCode(code) {\n  return 'U+' + code.toString(16).toUpperCase().padStart(4, '0')\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-factory-mdx-expression').Acorn} Acorn\n * @typedef {import('micromark-factory-mdx-expression').AcornOptions} AcornOptions\n */\nimport {factoryTag} from './factory-tag.js'\n/**\n * @param {Acorn|undefined} acorn\n * @param {AcornOptions|undefined} acornOptions\n * @param {boolean|undefined} addResult\n * @returns {Construct}\n */\n\nexport function jsxText(acorn, acornOptions, addResult) {\n  return {\n    tokenize: tokenizeJsxText\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeJsxText(effects, ok, nok) {\n    return factoryTag.call(\n      this,\n      effects,\n      ok,\n      nok,\n      acorn,\n      acornOptions,\n      addResult,\n      true,\n      'mdxJsxTextTag',\n      'mdxJsxTextTagMarker',\n      'mdxJsxTextTagClosingMarker',\n      'mdxJsxTextTagSelfClosingMarker',\n      'mdxJsxTextTagName',\n      'mdxJsxTextTagNamePrimary',\n      'mdxJsxTextTagNameMemberMarker',\n      'mdxJsxTextTagNameMember',\n      'mdxJsxTextTagNamePrefixMarker',\n      'mdxJsxTextTagNameLocal',\n      'mdxJsxTextTagExpressionAttribute',\n      'mdxJsxTextTagExpressionAttributeMarker',\n      'mdxJsxTextTagExpressionAttributeValue',\n      'mdxJsxTextTagAttribute',\n      'mdxJsxTextTagAttributeName',\n      'mdxJsxTextTagAttributeNamePrimary',\n      'mdxJsxTextTagAttributeNamePrefixMarker',\n      'mdxJsxTextTagAttributeNameLocal',\n      'mdxJsxTextTagAttributeInitializerMarker',\n      'mdxJsxTextTagAttributeValueLiteral',\n      'mdxJsxTextTagAttributeValueLiteralMarker',\n      'mdxJsxTextTagAttributeValueLiteralValue',\n      'mdxJsxTextTagAttributeValueExpression',\n      'mdxJsxTextTagAttributeValueExpressionMarker',\n      'mdxJsxTextTagAttributeValueExpressionValue'\n    )\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-factory-mdx-expression').Acorn} Acorn\n * @typedef {import('micromark-factory-mdx-expression').AcornOptions} AcornOptions\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {factoryTag} from './factory-tag.js'\n/**\n * @param {Acorn|undefined} acorn\n * @param {AcornOptions|undefined} acornOptions\n * @param {boolean|undefined} addResult\n * @returns {Construct}\n */\n\nexport function jsxFlow(acorn, acornOptions, addResult) {\n  return {\n    tokenize: tokenizeJsxFlow,\n    concrete: true\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeJsxFlow(effects, ok, nok) {\n    const self = this\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      return factoryTag.call(\n        self,\n        effects,\n        factorySpace(effects, after, 'whitespace'),\n        nok,\n        acorn,\n        acornOptions,\n        addResult,\n        false,\n        'mdxJsxFlowTag',\n        'mdxJsxFlowTagMarker',\n        'mdxJsxFlowTagClosingMarker',\n        'mdxJsxFlowTagSelfClosingMarker',\n        'mdxJsxFlowTagName',\n        'mdxJsxFlowTagNamePrimary',\n        'mdxJsxFlowTagNameMemberMarker',\n        'mdxJsxFlowTagNameMember',\n        'mdxJsxFlowTagNamePrefixMarker',\n        'mdxJsxFlowTagNameLocal',\n        'mdxJsxFlowTagExpressionAttribute',\n        'mdxJsxFlowTagExpressionAttributeMarker',\n        'mdxJsxFlowTagExpressionAttributeValue',\n        'mdxJsxFlowTagAttribute',\n        'mdxJsxFlowTagAttributeName',\n        'mdxJsxFlowTagAttributeNamePrimary',\n        'mdxJsxFlowTagAttributeNamePrefixMarker',\n        'mdxJsxFlowTagAttributeNameLocal',\n        'mdxJsxFlowTagAttributeInitializerMarker',\n        'mdxJsxFlowTagAttributeValueLiteral',\n        'mdxJsxFlowTagAttributeValueLiteralMarker',\n        'mdxJsxFlowTagAttributeValueLiteralValue',\n        'mdxJsxFlowTagAttributeValueExpression',\n        'mdxJsxFlowTagAttributeValueExpressionMarker',\n        'mdxJsxFlowTagAttributeValueExpressionValue'\n      )(code)\n    }\n    /** @type {State} */\n\n    function after(code) {\n      // Another tag.\n      return code === 60\n        ? start(code)\n        : code === null || markdownLineEnding(code)\n        ? ok(code)\n        : nok(code)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-factory-mdx-expression').Acorn} Acorn\n * @typedef {import('micromark-factory-mdx-expression').AcornOptions} AcornOptions\n */\n\n/**\n * @typedef Options\n * @property {boolean} [addResult=false]\n * @property {Acorn} [acorn]\n * @property {AcornOptions} [acornOptions]\n */\nimport {jsxText} from './jsx-text.js'\nimport {jsxFlow} from './jsx-flow.js'\n/**\n * @param {Options} [options]\n * @returns {Extension}\n */\n\nexport function mdxJsx(options = {}) {\n  const acorn = options.acorn\n  /** @type {AcornOptions|undefined} */\n\n  let acornOptions\n\n  if (acorn) {\n    if (!acorn.parse || !acorn.parseExpressionAt) {\n      throw new Error(\n        'Expected a proper `acorn` instance passed in as `options.acorn`'\n      )\n    }\n\n    acornOptions = Object.assign(\n      {\n        ecmaVersion: 2020,\n        sourceType: 'module'\n      },\n      options.acornOptions,\n      {\n        locations: true\n      }\n    )\n  } else if (options.acornOptions || options.addResult) {\n    throw new Error('Expected an `acorn` instance passed in as `options.acorn`')\n  }\n\n  return {\n    flow: {\n      [60]: jsxFlow(acorn, acornOptions, options.addResult)\n    },\n    text: {\n      [60]: jsxText(acorn, acornOptions, options.addResult)\n    }\n  }\n}\n","/**\n * @type {import('micromark-util-types').Extension}\n */\nexport const mdxMd = {\n  disable: {null: ['autolink', 'codeIndented', 'htmlFlow', 'htmlText']}\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n *\n * @typedef {import('micromark-util-events-to-acorn').Acorn} Acorn\n * @typedef {import('micromark-util-events-to-acorn').AcornOptions} AcornOptions\n */\n\n/**\n * @typedef Options\n * @property {boolean} [addResult=false]\n * @property {Acorn} acorn\n * @property {AcornOptions} [acornOptions]\n */\nimport {blankLine} from 'micromark-core-commonmark'\nimport {markdownLineEnding, unicodeWhitespace} from 'micromark-util-character'\nimport {eventsToAcorn} from 'micromark-util-events-to-acorn'\nimport {positionFromEstree} from 'unist-util-position-from-estree'\nimport {VFileMessage} from 'vfile-message'\nconst nextBlankConstruct = {\n  tokenize: tokenizeNextBlank,\n  partial: true\n}\nconst allowedAcornTypes = new Set([\n  'ExportAllDeclaration',\n  'ExportDefaultDeclaration',\n  'ExportNamedDeclaration',\n  'ImportDeclaration'\n])\n/**\n * @param {Options} options\n * @returs {Extension}\n */\n\nexport function mdxjsEsm(options) {\n  const exportImportConstruct = {\n    tokenize: tokenizeExportImport,\n    concrete: true\n  }\n\n  if (!options || !options.acorn || !options.acorn.parse) {\n    throw new Error('Expected an `acorn` instance passed in as `options.acorn`')\n  }\n\n  const acorn = options.acorn\n  const acornOptions = Object.assign(\n    {\n      ecmaVersion: 2020,\n      sourceType: 'module'\n    },\n    options.acornOptions\n  )\n  return {\n    flow: {\n      [101]: exportImportConstruct,\n      [105]: exportImportConstruct\n    }\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeExportImport(effects, ok, nok) {\n    const self = this\n    /** @type {string[]} */\n\n    const definedModuleSpecifiers = // @ts-expect-error: hush\n      self.parser.definedModuleSpecifiers || // @ts-expect-error: hush\n      (self.parser.definedModuleSpecifiers = [])\n    const eventStart = this.events.length + 1 // Add the main `mdxjsEsm` token\n\n    let index = 0\n    /** @type {string} */\n\n    let buffer\n    return self.interrupt ? nok : start\n    /** @type {State} */\n\n    function start(code) {\n      // Do not support indent (the easiest check for containers).\n      if (self.now().column > 1) return nok(code)\n      buffer = code === 101 ? 'export' : 'import'\n      effects.enter('mdxjsEsm')\n      effects.enter('mdxjsEsmData')\n      return keyword(code)\n    }\n    /** @type {State} */\n\n    function keyword(code) {\n      if (code === buffer.charCodeAt(index++)) {\n        effects.consume(code)\n        return index === buffer.length ? after : keyword\n      }\n\n      return nok(code)\n    }\n    /** @type {State} */\n\n    function after(code) {\n      if (unicodeWhitespace(code)) {\n        effects.consume(code)\n        return rest\n      }\n\n      return nok(code)\n    }\n    /** @type {State} */\n\n    function rest(code) {\n      if (code === null) {\n        return atEndOfData(code)\n      }\n\n      if (markdownLineEnding(code)) {\n        return effects.check(nextBlankConstruct, atEndOfData, atEol)(code)\n      }\n\n      effects.consume(code)\n      return rest\n    }\n    /** @type {State} */\n\n    function atEol(code) {\n      effects.exit('mdxjsEsmData')\n      return lineStart(code)\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      if (markdownLineEnding(code)) {\n        effects.enter('lineEnding')\n        effects.consume(code)\n        effects.exit('lineEnding')\n        return lineStart\n      }\n\n      if (code === null) {\n        return atEnd(code)\n      }\n\n      effects.enter('mdxjsEsmData')\n      return rest(code)\n    }\n    /** @type {State} */\n\n    function atEndOfData(code) {\n      effects.exit('mdxjsEsmData')\n      return atEnd(code)\n    }\n    /** @type {State} */\n\n    function atEnd(code) {\n      let index = -1\n      const result = eventsToAcorn(self.events.slice(eventStart), {\n        acorn,\n        acornOptions,\n        prefix:\n          definedModuleSpecifiers.length > 0\n            ? 'var ' + definedModuleSpecifiers.join(',') + '\\n'\n            : ''\n      })\n\n      if (code !== null && result.swallow) {\n        return lineStart(code)\n      }\n\n      if (result.error) {\n        throw new VFileMessage(\n          'Could not parse import/exports with acorn: ' + String(result.error),\n          {\n            // @ts-expect-error: hush\n            line: result.error.loc.line,\n            // @ts-expect-error: hush\n            column: result.error.loc.column + 1,\n            // @ts-expect-error: hush\n            offset: result.error.pos\n          },\n          'micromark-extension-mdxjs-esm:acorn'\n        )\n      }\n\n      // Remove the `VariableDeclaration`\n      if (definedModuleSpecifiers.length > 0) {\n        result.estree.body.shift()\n      }\n\n      while (++index < result.estree.body.length) {\n        const node = result.estree.body[index]\n\n        if (!allowedAcornTypes.has(node.type)) {\n          throw new VFileMessage(\n            'Unexpected `' +\n              node.type +\n              '` in code: only import/exports are supported',\n            positionFromEstree(node),\n            'micromark-extension-mdxjs-esm:non-esm'\n          )\n        } // Otherwise, when we’re not interrupting (hacky, because `interrupt` is\n        // used to parse containers and “sniff” if this is ESM), collect all the\n        // local values that are imported.\n\n        if (node.type === 'ImportDeclaration' && !self.interrupt) {\n          let index = -1\n\n          while (++index < node.specifiers.length) {\n            definedModuleSpecifiers.push(node.specifiers[index].local.name)\n          }\n        }\n      }\n\n      Object.assign(\n        effects.exit('mdxjsEsm'),\n        options.addResult\n          ? {\n              estree: result.estree\n            }\n          : undefined\n      )\n      return ok(code)\n    }\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNextBlank(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.exit('mdxjsEsmData')\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n","/**\n * @typedef {import('estree-jsx').Program} Program\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n *\n * @typedef {import('../index.js').MdxFlowExpression} MdxFlowExpression\n * @typedef {import('../index.js').MdxTextExpression} MdxTextExpression\n */\n\n/**\n * Extension for `mdast-util-from-markdown` to enable MDX expressions.\n *\n * When using the syntax extension with `addResult`, nodes will have a\n * `data.estree` field set to an ESTree `Program` node.\n *\n * @type {FromMarkdownExtension}\n */\nexport const mdxExpressionFromMarkdown = {\n  enter: {\n    mdxFlowExpression: enterMdxFlowExpression,\n    mdxTextExpression: enterMdxTextExpression\n  },\n  exit: {\n    mdxFlowExpression: exitMdxExpression,\n    mdxFlowExpressionChunk: exitMdxExpressionData,\n    mdxTextExpression: exitMdxExpression,\n    mdxTextExpressionChunk: exitMdxExpressionData\n  }\n}\n\n/**\n * Extension for `mdast-util-to-markdown` to enable MDX ESM.\n *\n * @type {ToMarkdownExtension}\n */\nexport const mdxExpressionToMarkdown = {\n  handlers: {\n    mdxFlowExpression: handleMdxExpression,\n    mdxTextExpression: handleMdxExpression\n  },\n  unsafe: [\n    {character: '{', inConstruct: ['phrasing']},\n    {atBreak: true, character: '{'}\n  ]\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterMdxFlowExpression(token) {\n  this.enter({type: 'mdxFlowExpression', value: ''}, token)\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterMdxTextExpression(token) {\n  this.enter({type: 'mdxTextExpression', value: ''}, token)\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitMdxExpression(token) {\n  const value = this.resume()\n  /** @type {Program | undefined} */\n  // @ts-expect-error: estree.\n  const estree = token.estree\n  const node = /** @type {MdxFlowExpression | MdxTextExpression} */ (\n    this.exit(token)\n  )\n  node.value = value\n\n  if (estree) {\n    node.data = {estree}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitMdxExpressionData(token) {\n  this.config.enter.data.call(this, token)\n  this.config.exit.data.call(this, token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {MdxFlowExpression | MdxTextExpression} node\n */\nfunction handleMdxExpression(node) {\n  const value = node.value || ''\n  return '{' + value + '}'\n}\n","/**\n * @typedef {import('estree-jsx').Program} Program\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-from-markdown').Token} Token\n * @typedef {import('mdast-util-from-markdown').OnEnterError} OnEnterError\n * @typedef {import('mdast-util-from-markdown').OnExitError} OnExitError\n *\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Map} ToMarkdownMap\n *\n * @typedef {import('../index.js').MdxJsxAttributeValueExpression} MdxJsxAttributeValueExpression\n * @typedef {import('../index.js').MdxJsxAttribute} MdxJsxAttribute\n * @typedef {import('../index.js').MdxJsxExpressionAttribute} MdxJsxExpressionAttribute\n * @typedef {import('../index.js').MdxJsxFlowElement} MdxJsxFlowElement\n * @typedef {import('../index.js').MdxJsxTextElement} MdxJsxTextElement\n */\n\n/**\n * @typedef Tag\n *   Single tag.\n * @property {string | undefined} name\n *   Name of tag, or `undefined` for fragment.\n *\n *   > 👉 **Note**: `null` is used in the AST for fragments, as it serializes in\n *   > JSON.\n * @property {Array<MdxJsxAttribute | MdxJsxExpressionAttribute>} attributes\n *   Attributes.\n * @property {boolean} close\n *   Whether the tag is closing (`</x>`).\n * @property {boolean} selfClosing\n *   Whether the tag is self-closing (`<x/>`).\n * @property {Token['start']} start\n *   Start point.\n * @property {Token['start']} end\n *   End point.\n *\n * @typedef ToMarkdownOptions\n *   Configuration.\n * @property {'\"' | \"'\" | null | undefined} [quote='\"']\n *   Preferred quote to use around attribute values.\n * @property {boolean | null | undefined} [quoteSmart=false]\n *   Use the other quote if that results in less bytes.\n * @property {boolean | null | undefined} [tightSelfClosing=false]\n *   Do not use an extra space when closing self-closing elements: `<img/>`\n *   instead of `<img />`.\n * @property {number | null | undefined} [printWidth=Infinity]\n *   Try and wrap syntax at this width.\n *\n *   When set to a finite number (say, `80`), the formatter will print\n *   attributes on separate lines when a tag doesn’t fit on one line.\n *   The normal behavior is to print attributes with spaces between them\n *   instead of line endings.\n */\n\nimport {ccount} from 'ccount'\nimport {parseEntities} from 'parse-entities'\nimport {stringifyPosition} from 'unist-util-stringify-position'\nimport {VFileMessage} from 'vfile-message'\nimport {stringifyEntitiesLight} from 'stringify-entities'\nimport {containerFlow} from 'mdast-util-to-markdown/lib/util/container-flow.js'\nimport {containerPhrasing} from 'mdast-util-to-markdown/lib/util/container-phrasing.js'\nimport {indentLines} from 'mdast-util-to-markdown/lib/util/indent-lines.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\n// To do: next major: use `state`, use utilities from state, rename `safeOptions` to `info`.\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable MDX JSX.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable MDX JSX.\n *\n *   When using the syntax extension with `addResult`, nodes will have a\n *   `data.estree` field set to an ESTree `Program` node.\n */\nexport function mdxJsxFromMarkdown() {\n  return {\n    canContainEols: ['mdxJsxTextElement'],\n    enter: {\n      mdxJsxFlowTag: enterMdxJsxTag,\n      mdxJsxFlowTagClosingMarker: enterMdxJsxTagClosingMarker,\n      mdxJsxFlowTagAttribute: enterMdxJsxTagAttribute,\n      mdxJsxFlowTagExpressionAttribute: enterMdxJsxTagExpressionAttribute,\n      mdxJsxFlowTagAttributeValueLiteral: buffer,\n      mdxJsxFlowTagAttributeValueExpression: buffer,\n      mdxJsxFlowTagSelfClosingMarker: enterMdxJsxTagSelfClosingMarker,\n\n      mdxJsxTextTag: enterMdxJsxTag,\n      mdxJsxTextTagClosingMarker: enterMdxJsxTagClosingMarker,\n      mdxJsxTextTagAttribute: enterMdxJsxTagAttribute,\n      mdxJsxTextTagExpressionAttribute: enterMdxJsxTagExpressionAttribute,\n      mdxJsxTextTagAttributeValueLiteral: buffer,\n      mdxJsxTextTagAttributeValueExpression: buffer,\n      mdxJsxTextTagSelfClosingMarker: enterMdxJsxTagSelfClosingMarker\n    },\n    exit: {\n      mdxJsxFlowTagClosingMarker: exitMdxJsxTagClosingMarker,\n      mdxJsxFlowTagNamePrimary: exitMdxJsxTagNamePrimary,\n      mdxJsxFlowTagNameMember: exitMdxJsxTagNameMember,\n      mdxJsxFlowTagNameLocal: exitMdxJsxTagNameLocal,\n      mdxJsxFlowTagExpressionAttribute: exitMdxJsxTagExpressionAttribute,\n      mdxJsxFlowTagExpressionAttributeValue: data,\n      mdxJsxFlowTagAttributeNamePrimary: exitMdxJsxTagAttributeNamePrimary,\n      mdxJsxFlowTagAttributeNameLocal: exitMdxJsxTagAttributeNameLocal,\n      mdxJsxFlowTagAttributeValueLiteral: exitMdxJsxTagAttributeValueLiteral,\n      mdxJsxFlowTagAttributeValueLiteralValue: data,\n      mdxJsxFlowTagAttributeValueExpression:\n        exitMdxJsxTagAttributeValueExpression,\n      mdxJsxFlowTagAttributeValueExpressionValue: data,\n      mdxJsxFlowTagSelfClosingMarker: exitMdxJsxTagSelfClosingMarker,\n      mdxJsxFlowTag: exitMdxJsxTag,\n\n      mdxJsxTextTagClosingMarker: exitMdxJsxTagClosingMarker,\n      mdxJsxTextTagNamePrimary: exitMdxJsxTagNamePrimary,\n      mdxJsxTextTagNameMember: exitMdxJsxTagNameMember,\n      mdxJsxTextTagNameLocal: exitMdxJsxTagNameLocal,\n      mdxJsxTextTagExpressionAttribute: exitMdxJsxTagExpressionAttribute,\n      mdxJsxTextTagExpressionAttributeValue: data,\n      mdxJsxTextTagAttributeNamePrimary: exitMdxJsxTagAttributeNamePrimary,\n      mdxJsxTextTagAttributeNameLocal: exitMdxJsxTagAttributeNameLocal,\n      mdxJsxTextTagAttributeValueLiteral: exitMdxJsxTagAttributeValueLiteral,\n      mdxJsxTextTagAttributeValueLiteralValue: data,\n      mdxJsxTextTagAttributeValueExpression:\n        exitMdxJsxTagAttributeValueExpression,\n      mdxJsxTextTagAttributeValueExpressionValue: data,\n      mdxJsxTextTagSelfClosingMarker: exitMdxJsxTagSelfClosingMarker,\n      mdxJsxTextTag: exitMdxJsxTag\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function buffer() {\n    this.buffer()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function data(token) {\n    this.config.enter.data.call(this, token)\n    this.config.exit.data.call(this, token)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function enterMdxJsxTag(token) {\n    /** @type {Tag} */\n    const tag = {\n      name: undefined,\n      attributes: [],\n      close: false,\n      selfClosing: false,\n      start: token.start,\n      end: token.end\n    }\n    if (!this.getData('mdxJsxTagStack')) this.setData('mdxJsxTagStack', [])\n    this.setData('mdxJsxTag', tag)\n    this.buffer()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function enterMdxJsxTagClosingMarker(token) {\n    const stack = /** @type {Array<Tag>} */ (this.getData('mdxJsxTagStack'))\n\n    if (stack.length === 0) {\n      throw new VFileMessage(\n        'Unexpected closing slash `/` in tag, expected an open tag first',\n        {start: token.start, end: token.end},\n        'mdast-util-mdx-jsx:unexpected-closing-slash'\n      )\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function enterMdxJsxTagAnyAttribute(token) {\n    const tag = /** @type {Tag} */ (this.getData('mdxJsxTag'))\n\n    if (tag.close) {\n      throw new VFileMessage(\n        'Unexpected attribute in closing tag, expected the end of the tag',\n        {start: token.start, end: token.end},\n        'mdast-util-mdx-jsx:unexpected-attribute'\n      )\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function enterMdxJsxTagSelfClosingMarker(token) {\n    const tag = /** @type {Tag} */ (this.getData('mdxJsxTag'))\n\n    if (tag.close) {\n      throw new VFileMessage(\n        'Unexpected self-closing slash `/` in closing tag, expected the end of the tag',\n        {start: token.start, end: token.end},\n        'mdast-util-mdx-jsx:unexpected-self-closing-slash'\n      )\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function exitMdxJsxTagClosingMarker() {\n    const tag = /** @type {Tag} */ (this.getData('mdxJsxTag'))\n    tag.close = true\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function exitMdxJsxTagNamePrimary(token) {\n    const tag = /** @type {Tag} */ (this.getData('mdxJsxTag'))\n    tag.name = this.sliceSerialize(token)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function exitMdxJsxTagNameMember(token) {\n    const tag = /** @type {Tag} */ (this.getData('mdxJsxTag'))\n    tag.name += '.' + this.sliceSerialize(token)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function exitMdxJsxTagNameLocal(token) {\n    const tag = /** @type {Tag} */ (this.getData('mdxJsxTag'))\n    tag.name += ':' + this.sliceSerialize(token)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function enterMdxJsxTagAttribute(token) {\n    const tag = /** @type {Tag} */ (this.getData('mdxJsxTag'))\n    enterMdxJsxTagAnyAttribute.call(this, token)\n    tag.attributes.push({type: 'mdxJsxAttribute', name: '', value: null})\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function enterMdxJsxTagExpressionAttribute(token) {\n    const tag = /** @type {Tag} */ (this.getData('mdxJsxTag'))\n    enterMdxJsxTagAnyAttribute.call(this, token)\n    tag.attributes.push({type: 'mdxJsxExpressionAttribute', value: ''})\n    this.buffer()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function exitMdxJsxTagExpressionAttribute(token) {\n    const tag = /** @type {Tag} */ (this.getData('mdxJsxTag'))\n    const tail = /** @type {MdxJsxExpressionAttribute} */ (\n      tag.attributes[tag.attributes.length - 1]\n    )\n    /** @type {Program | undefined} */\n    // @ts-expect-error: custom.\n    const estree = token.estree\n\n    tail.value = this.resume()\n\n    if (estree) {\n      tail.data = {estree}\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function exitMdxJsxTagAttributeNamePrimary(token) {\n    const tag = /** @type {Tag} */ (this.getData('mdxJsxTag'))\n    const node = /** @type {MdxJsxAttribute} */ (\n      tag.attributes[tag.attributes.length - 1]\n    )\n    node.name = this.sliceSerialize(token)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function exitMdxJsxTagAttributeNameLocal(token) {\n    const tag = /** @type {Tag} */ (this.getData('mdxJsxTag'))\n    const node = /** @type {MdxJsxAttribute} */ (\n      tag.attributes[tag.attributes.length - 1]\n    )\n    node.name += ':' + this.sliceSerialize(token)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function exitMdxJsxTagAttributeValueLiteral() {\n    const tag = /** @type {Tag} */ (this.getData('mdxJsxTag'))\n    tag.attributes[tag.attributes.length - 1].value = parseEntities(\n      this.resume(),\n      {nonTerminated: false}\n    )\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function exitMdxJsxTagAttributeValueExpression(token) {\n    const tag = /** @type {Tag} */ (this.getData('mdxJsxTag'))\n    const tail = /** @type {MdxJsxAttribute} */ (\n      tag.attributes[tag.attributes.length - 1]\n    )\n    /** @type {MdxJsxAttributeValueExpression} */\n    const node = {type: 'mdxJsxAttributeValueExpression', value: this.resume()}\n    /** @type {Program | undefined} */\n    // @ts-expect-error: custom.\n    const estree = token.estree\n\n    if (estree) {\n      node.data = {estree}\n    }\n\n    tail.value = node\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function exitMdxJsxTagSelfClosingMarker() {\n    const tag = /** @type {Tag} */ (this.getData('mdxJsxTag'))\n\n    tag.selfClosing = true\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {FromMarkdownHandle}\n   */\n  function exitMdxJsxTag(token) {\n    const tag = /** @type {Tag} */ (this.getData('mdxJsxTag'))\n    const stack = /** @type {Array<Tag>} */ (this.getData('mdxJsxTagStack'))\n    const tail = stack[stack.length - 1]\n\n    if (tag.close && tail.name !== tag.name) {\n      throw new VFileMessage(\n        'Unexpected closing tag `' +\n          serializeAbbreviatedTag(tag) +\n          '`, expected corresponding closing tag for `' +\n          serializeAbbreviatedTag(tail) +\n          '` (' +\n          stringifyPosition(tail) +\n          ')',\n        {start: token.start, end: token.end},\n        'mdast-util-mdx-jsx:end-tag-mismatch'\n      )\n    }\n\n    // End of a tag, so drop the buffer.\n    this.resume()\n\n    if (tag.close) {\n      stack.pop()\n    } else {\n      this.enter(\n        {\n          type:\n            token.type === 'mdxJsxTextTag'\n              ? 'mdxJsxTextElement'\n              : 'mdxJsxFlowElement',\n          name: tag.name || null,\n          attributes: tag.attributes,\n          children: []\n        },\n        token,\n        onErrorRightIsTag\n      )\n    }\n\n    if (tag.selfClosing || tag.close) {\n      this.exit(token, onErrorLeftIsTag)\n    } else {\n      stack.push(tag)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {OnEnterError}\n   */\n  function onErrorRightIsTag(closing, open) {\n    const tag = /** @type {Tag} */ (this.getData('mdxJsxTag'))\n    const place = closing ? ' before the end of `' + closing.type + '`' : ''\n    const position = closing\n      ? {start: closing.start, end: closing.end}\n      : undefined\n\n    throw new VFileMessage(\n      'Expected a closing tag for `' +\n        serializeAbbreviatedTag(tag) +\n        '` (' +\n        stringifyPosition({start: open.start, end: open.end}) +\n        ')' +\n        place,\n      position,\n      'mdast-util-mdx-jsx:end-tag-mismatch'\n    )\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {OnExitError}\n   */\n  function onErrorLeftIsTag(a, b) {\n    const tag = /** @type {Tag} */ (this.getData('mdxJsxTag'))\n    throw new VFileMessage(\n      'Expected the closing tag `' +\n        serializeAbbreviatedTag(tag) +\n        '` either after the end of `' +\n        b.type +\n        '` (' +\n        stringifyPosition(b.end) +\n        ') or another opening tag after the start of `' +\n        b.type +\n        '` (' +\n        stringifyPosition(b.start) +\n        ')',\n      {start: a.start, end: a.end},\n      'mdast-util-mdx-jsx:end-tag-mismatch'\n    )\n  }\n\n  /**\n   * Serialize a tag, excluding attributes.\n   * `self-closing` is not supported, because we don’t need it yet.\n   *\n   * @param {Tag} tag\n   * @returns {string}\n   */\n  function serializeAbbreviatedTag(tag) {\n    return '<' + (tag.close ? '/' : '') + (tag.name || '') + '>'\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable MDX JSX.\n *\n * This extension configures `mdast-util-to-markdown` with\n * `options.fences: true` and `options.resourceLink: true` too, do not\n * overwrite them!\n *\n * @param {ToMarkdownOptions | null | undefined} [options]\n *   Configuration.\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable MDX JSX.\n */\nexport function mdxJsxToMarkdown(options) {\n  const options_ = options || {}\n  const quote = options_.quote || '\"'\n  const quoteSmart = options_.quoteSmart || false\n  const tightSelfClosing = options_.tightSelfClosing || false\n  const printWidth = options_.printWidth || Number.POSITIVE_INFINITY\n  const alternative = quote === '\"' ? \"'\" : '\"'\n\n  if (quote !== '\"' && quote !== \"'\") {\n    throw new Error(\n      'Cannot serialize attribute values with `' +\n        quote +\n        '` for `options.quote`, expected `\"`, or `\\'`'\n    )\n  }\n\n  mdxElement.peek = peekElement\n\n  return {\n    handlers: {\n      mdxJsxFlowElement: mdxElement,\n      mdxJsxTextElement: mdxElement\n    },\n    unsafe: [\n      {character: '<', inConstruct: ['phrasing']},\n      {atBreak: true, character: '<'}\n    ],\n    // Always generate fenced code (never indented code).\n    fences: true,\n    // Always generate links with resources (never autolinks).\n    resourceLink: true\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {MdxJsxFlowElement | MdxJsxTextElement} node\n   */\n  // eslint-disable-next-line complexity\n  function mdxElement(node, _, context, safeOptions) {\n    const tracker = track(safeOptions)\n    const selfClosing =\n      node.name && (!node.children || node.children.length === 0)\n    const exit = context.enter(node.type)\n    let index = -1\n    /** @type {Array<string>} */\n    const serializedAttributes = []\n    let value = tracker.move('<' + (node.name || ''))\n\n    // None.\n    if (node.attributes && node.attributes.length > 0) {\n      if (!node.name) {\n        throw new Error('Cannot serialize fragment w/ attributes')\n      }\n\n      while (++index < node.attributes.length) {\n        const attribute = node.attributes[index]\n        /** @type {string} */\n        let result\n\n        if (attribute.type === 'mdxJsxExpressionAttribute') {\n          result = '{' + (attribute.value || '') + '}'\n        } else {\n          if (!attribute.name) {\n            throw new Error('Cannot serialize attribute w/o name')\n          }\n\n          const value = attribute.value\n          const left = attribute.name\n          /** @type {string} */\n          let right = ''\n\n          if (value === undefined || value === null) {\n            // Empty.\n          } else if (typeof value === 'object') {\n            right = '{' + (value.value || '') + '}'\n          } else {\n            // If the alternative is less common than `quote`, switch.\n            const appliedQuote =\n              quoteSmart && ccount(value, quote) > ccount(value, alternative)\n                ? alternative\n                : quote\n            right =\n              appliedQuote +\n              stringifyEntitiesLight(value, {subset: [appliedQuote]}) +\n              appliedQuote\n          }\n\n          result = left + (right ? '=' : '') + right\n        }\n\n        serializedAttributes.push(result)\n      }\n    }\n\n    let attributesOnTheirOwnLine = false\n    const attributesOnOneLine = serializedAttributes.join(' ')\n\n    if (\n      // Block:\n      node.type === 'mdxJsxFlowElement' &&\n      // Including a line ending (expressions).\n      (/\\r?\\n|\\r/.test(attributesOnOneLine) ||\n        // Current position (including `<tag`).\n        tracker.current().now.column +\n          // -1 because columns, +1 for ` ` before attributes.\n          // Attributes joined by spaces.\n          attributesOnOneLine.length +\n          // ` />`.\n          (selfClosing ? (tightSelfClosing ? 2 : 3) : 1) >\n          printWidth)\n    ) {\n      attributesOnTheirOwnLine = true\n    }\n\n    if (attributesOnTheirOwnLine) {\n      value += tracker.move(\n        '\\n' + indentLines(serializedAttributes.join('\\n'), map)\n      )\n    } else if (attributesOnOneLine) {\n      value += tracker.move(' ' + attributesOnOneLine)\n    }\n\n    if (attributesOnTheirOwnLine) {\n      value += tracker.move('\\n')\n    }\n\n    if (selfClosing) {\n      value += tracker.move(\n        (tightSelfClosing || attributesOnTheirOwnLine ? '' : ' ') + '/'\n      )\n    }\n\n    value += tracker.move('>')\n\n    if (node.children && node.children.length > 0) {\n      if (node.type === 'mdxJsxFlowElement') {\n        tracker.shift(2)\n        value += tracker.move('\\n')\n        value += tracker.move(\n          indentLines(containerFlow(node, context, tracker.current()), map)\n        )\n        value += tracker.move('\\n')\n      } else {\n        value += tracker.move(\n          containerPhrasing(node, context, {\n            ...tracker.current(),\n            before: '<',\n            after: '>'\n          })\n        )\n      }\n    }\n\n    if (!selfClosing) {\n      value += tracker.move('</' + (node.name || '') + '>')\n    }\n\n    exit()\n    return value\n  }\n\n  /** @type {ToMarkdownMap} */\n  function map(line, _, blank) {\n    return (blank ? '' : '  ') + line\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   */\n  function peekElement() {\n    return '<'\n  }\n}\n","/**\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n *\n * @typedef {import('estree-jsx').Program} Program\n *\n * @typedef {import('../index.js').MdxjsEsm} MdxjsEsm\n */\n\n// To do: next major: expose functions.\n\n/**\n * Extension for `mdast-util-from-markdown` to enable MDX ESM.\n *\n * When using the syntax extension with `addResult`, nodes will have a\n * `data.estree` field set to an ESTree `Program` node.\n *\n * @type {FromMarkdownExtension}\n */\nexport const mdxjsEsmFromMarkdown = {\n  enter: {mdxjsEsm: enterMdxjsEsm},\n  exit: {mdxjsEsm: exitMdxjsEsm, mdxjsEsmData: exitMdxjsEsmData}\n}\n\n/**\n * Extension for `mdast-util-to-markdown` to enable MDX ESM.\n *\n * @type {ToMarkdownExtension}\n */\nexport const mdxjsEsmToMarkdown = {handlers: {mdxjsEsm: handleMdxjsEsm}}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterMdxjsEsm(token) {\n  this.enter({type: 'mdxjsEsm', value: ''}, token)\n  this.buffer() // Capture EOLs\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitMdxjsEsm(token) {\n  const value = this.resume()\n  const node = /** @type {MdxjsEsm} */ (this.exit(token))\n  /** @type {Program | undefined} */\n  // @ts-expect-error: custom.\n  const estree = token.estree\n\n  node.value = value\n\n  if (estree) {\n    node.data = {estree}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitMdxjsEsmData(token) {\n  this.config.enter.data.call(this, token)\n  this.config.exit.data.call(this, token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {MdxjsEsm} node\n */\nfunction handleMdxjsEsm(node) {\n  return node.value || ''\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('micromark-extension-mdxjs').Options} MicromarkOptions\n * @typedef {import('mdast-util-mdx').ToMarkdownOptions} ToMarkdownOptions\n * @typedef {import('mdast-util-mdx')} DoNotTouchAsThisIncludesMdxInTree\n */\n\n/**\n * @typedef {MicromarkOptions & ToMarkdownOptions} Options\n *   Configuration.\n */\n\nimport {mdxjs} from 'micromark-extension-mdxjs'\nimport {mdxFromMarkdown, mdxToMarkdown} from 'mdast-util-mdx'\n\n/**\n * Plugin to support MDX (import/exports: `export {x} from 'y'`; expressions:\n * `{1 + 1}`; and JSX: `<Video id={123} />`).\n *\n * @this {import('unified').Processor}\n * @type {import('unified').Plugin<[Options | null | undefined] | [], Root>}\n */\nexport default function remarkMdx(options) {\n  const data = this.data()\n\n  add('micromarkExtensions', mdxjs(options))\n  add('fromMarkdownExtensions', mdxFromMarkdown())\n  add('toMarkdownExtensions', mdxToMarkdown(options))\n\n  /**\n   * @param {string} field\n   * @param {unknown} value\n   */\n  function add(field, value) {\n    const list = /** @type {Array<unknown>} */ (\n      // Other extensions\n      /* c8 ignore next 2 */\n      data[field] ? data[field] : (data[field] = [])\n    )\n\n    list.push(value)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-extension-mdx-expression').Options} Options\n */\n\nimport {Parser} from 'acorn'\n// @ts-expect-error: untyped\nimport acornJsx from 'acorn-jsx'\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {mdxExpression} from 'micromark-extension-mdx-expression'\nimport {mdxJsx} from 'micromark-extension-mdx-jsx'\nimport {mdxMd} from 'micromark-extension-mdx-md'\nimport {mdxjsEsm} from 'micromark-extension-mdxjs-esm'\n\n/**\n * @param {Options} [options]\n * @returns {Extension}\n */\nexport function mdxjs(options) {\n  const settings = Object.assign(\n    {\n      acorn: Parser.extend(acornJsx()),\n      acornOptions: {ecmaVersion: 2020, sourceType: 'module'},\n      addResult: true\n    },\n    options\n  )\n\n  return combineExtensions([\n    mdxjsEsm(settings),\n    mdxExpression(settings),\n    mdxJsx(settings),\n    mdxMd\n  ])\n}\n","/**\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n *\n * @typedef {import('mdast-util-mdx-expression').MdxFlowExpression} MdxFlowExpression\n * @typedef {import('mdast-util-mdx-expression').MdxTextExpression} MdxTextExpression\n * @typedef {import('mdast-util-mdxjs-esm').MdxjsEsm} MdxjsEsm\n * @typedef {import('mdast-util-mdx-jsx').MdxJsxAttributeValueExpression} MdxJsxAttributeValueExpression\n * @typedef {import('mdast-util-mdx-jsx').MdxJsxAttribute} MdxJsxAttribute\n * @typedef {import('mdast-util-mdx-jsx').MdxJsxExpressionAttribute} MdxJsxExpressionAttribute\n * @typedef {import('mdast-util-mdx-jsx').MdxJsxFlowElement} MdxJsxFlowElement\n * @typedef {import('mdast-util-mdx-jsx').MdxJsxTextElement} MdxJsxTextElement\n * @typedef {import('mdast-util-mdx-jsx').ToMarkdownOptions} ToMarkdownOptions\n */\n\nimport {\n  mdxExpressionFromMarkdown,\n  mdxExpressionToMarkdown\n} from 'mdast-util-mdx-expression'\nimport {mdxJsxFromMarkdown, mdxJsxToMarkdown} from 'mdast-util-mdx-jsx'\nimport {mdxjsEsmFromMarkdown, mdxjsEsmToMarkdown} from 'mdast-util-mdxjs-esm'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable MDX (ESM, JSX,\n * expressions).\n *\n * @returns {Array<FromMarkdownExtension>}\n *   Extension for `mdast-util-from-markdown` to enable MDX (ESM, JSX,\n *   expressions).\n *\n *   When using the syntax extensions with `addResult`, ESM and expression\n *   nodes will have `data.estree` fields set to ESTree `Program` node.\n */\nexport function mdxFromMarkdown() {\n  return [mdxExpressionFromMarkdown, mdxJsxFromMarkdown(), mdxjsEsmFromMarkdown]\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable MDX (ESM, JSX,\n * expressions).\n *\n * @param {ToMarkdownOptions | null | undefined} [options]\n *   Configuration.\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable MDX (ESM, JSX,\n *   expressions).\n */\nexport function mdxToMarkdown(options) {\n  return {\n    extensions: [\n      mdxExpressionToMarkdown,\n      mdxJsxToMarkdown(options),\n      mdxjsEsmToMarkdown\n    ]\n  }\n}\n","/**\n * @typedef CoreOptions\n * @property {Array<string>} [subset=[]]\n *   Whether to only escape the given subset of characters.\n * @property {boolean} [escapeOnly=false]\n *   Whether to only escape possibly dangerous characters.\n *   Those characters are `\"`, `&`, `'`, `<`, `>`, and `` ` ``.\n *\n * @typedef FormatOptions\n * @property {(code: number, next: number, options: CoreWithFormatOptions) => string} format\n *   Format strategy.\n *\n * @typedef {CoreOptions & FormatOptions & import('./util/format-smart.js').FormatSmartOptions} CoreWithFormatOptions\n */\n\n/**\n * Encode certain characters in `value`.\n *\n * @param {string} value\n * @param {CoreWithFormatOptions} options\n * @returns {string}\n */\nexport function core(value, options) {\n  value = value.replace(\n    options.subset ? charactersToExpression(options.subset) : /[\"&'<>`]/g,\n    basic\n  )\n\n  if (options.subset || options.escapeOnly) {\n    return value\n  }\n\n  return (\n    value\n      // Surrogate pairs.\n      .replace(/[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g, surrogate)\n      // BMP control characters (C0 except for LF, CR, SP; DEL; and some more\n      // non-ASCII ones).\n      .replace(\n        // eslint-disable-next-line no-control-regex, unicorn/no-hex-escape\n        /[\\x01-\\t\\v\\f\\x0E-\\x1F\\x7F\\x81\\x8D\\x8F\\x90\\x9D\\xA0-\\uFFFF]/g,\n        basic\n      )\n  )\n\n  /**\n   * @param {string} pair\n   * @param {number} index\n   * @param {string} all\n   */\n  function surrogate(pair, index, all) {\n    return options.format(\n      (pair.charCodeAt(0) - 0xd800) * 0x400 +\n        pair.charCodeAt(1) -\n        0xdc00 +\n        0x10000,\n      all.charCodeAt(index + 2),\n      options\n    )\n  }\n\n  /**\n   * @param {string} character\n   * @param {number} index\n   * @param {string} all\n   */\n  function basic(character, index, all) {\n    return options.format(\n      character.charCodeAt(0),\n      all.charCodeAt(index + 1),\n      options\n    )\n  }\n}\n\n/**\n * @param {Array<string>} subset\n * @returns {RegExp}\n */\nfunction charactersToExpression(subset) {\n  /** @type {Array<string>} */\n  const groups = []\n  let index = -1\n\n  while (++index < subset.length) {\n    groups.push(subset[index].replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&'))\n  }\n\n  return new RegExp('(?:' + groups.join('|') + ')', 'g')\n}\n","/**\n * The smallest way to encode a character.\n *\n * @param {number} code\n * @returns {string}\n */\nexport function formatBasic(code) {\n  return '&#x' + code.toString(16).toUpperCase() + ';'\n}\n","/**\n * @typedef {import('./core.js').CoreOptions & import('./util/format-smart.js').FormatSmartOptions} Options\n * @typedef {import('./core.js').CoreOptions} LightOptions\n */\n\nimport {core} from './core.js'\nimport {formatSmart} from './util/format-smart.js'\nimport {formatBasic} from './util/format-basic.js'\n\n/**\n * Encode special characters in `value`.\n *\n * @param {string} value\n *   Value to encode.\n * @param {Options} [options]\n *   Configuration.\n * @returns {string}\n *   Encoded value.\n */\nexport function stringifyEntities(value, options) {\n  return core(value, Object.assign({format: formatSmart}, options))\n}\n\n/**\n * Encode special characters in `value` as hexadecimals.\n *\n * @param {string} value\n *   Value to encode.\n * @param {LightOptions} [options]\n *   Configuration.\n * @returns {string}\n *   Encoded value.\n */\nexport function stringifyEntitiesLight(value, options) {\n  return core(value, Object.assign({format: formatBasic}, options))\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @typedef {Record<string, unknown>} Props\n * @typedef {null | undefined | string | Props | TestFunctionAnything | Array<string | Props | TestFunctionAnything>} Test\n *   Check for an arbitrary node, unaware of TypeScript inferral.\n *\n * @callback TestFunctionAnything\n *   Check if a node passes a test, unaware of TypeScript inferral.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | void}\n *   Whether this node passes the test.\n */\n\n/**\n * @template {Node} Kind\n *   Node type.\n * @typedef {Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind> | Array<Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind>>} PredicateTest\n *   Check for a node that can be inferred by TypeScript.\n */\n\n/**\n * Check if a node passes a certain test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback TestFunctionPredicate\n *   Complex test function for a node that can be inferred by TypeScript.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this node passes the test.\n */\n\n/**\n * @callback AssertAnything\n *   Check that an arbitrary value is a node, unaware of TypeScript inferral.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if a node is a node and passes a certain node test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback AssertPredicate\n *   Check that an arbitrary value is a specific node, aware of TypeScript.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @param test\n *   A check for a specific node.\n * @param index\n *   The node’s position in its parent.\n * @param parent\n *   The node’s parent.\n * @returns\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  /**\n   * @type {(\n   *   (() => false) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index: number, parent: Parent, context?: unknown) => node is Kind) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index?: null | undefined, parent?: null | undefined, context?: unknown) => node is Kind) &\n   *   ((node: unknown, test: Test, index: number, parent: Parent, context?: unknown) => boolean) &\n   *   ((node: unknown, test?: Test, index?: null | undefined, parent?: null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns\n *   An assertion.\n */\nexport const convert =\n  /**\n   * @type {(\n   *   (<Kind extends Node>(test: PredicateTest<Kind>) => AssertPredicate<Kind>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<string | Props | TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {unknown} node\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(node, ...parameters) {\n    return Boolean(\n      node &&\n        typeof node === 'object' &&\n        'type' in node &&\n        // @ts-expect-error: fine.\n        Boolean(check.call(this, node, ...parameters))\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Position | PositionLike | Point | PointLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n */\n\n/**\n * @typedef {boolean | 'skip'} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<Ancestor>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   Tree type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {Visitor<import('./complex-types.js').Matches<import('./complex-types.js').InclusiveDescendant<Tree>, Check>, Extract<import('./complex-types.js').InclusiveDescendant<Tree>, Parent>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor<Node>} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-expect-error no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      const is = convert(test)\n      const step = reverse ? -1 : 1\n\n      factory(tree, undefined, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number | undefined} index\n       * @param {Array<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Record<string, unknown>} */\n        // @ts-expect-error: hush\n        const value = node && typeof node === 'object' ? node : {}\n\n        if (typeof value.type === 'string') {\n          const name =\n            // `hast`\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : // `xast`\n              typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          let result = []\n          /** @type {ActionTuple} */\n          let subresult\n          /** @type {number} */\n          let offset\n          /** @type {Array<Parent>} */\n          let grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          // @ts-expect-error looks like a parent.\n          if (node.children && result[0] !== SKIP) {\n            // @ts-expect-error looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-expect-error looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-expect-error looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              // @ts-expect-error looks like a parent.\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {ActionTuple}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * Check if `Child` can be a child of `Ancestor`.\n *\n * Returns the ancestor when `Child` can be a child of `Ancestor`, or returns\n * `never`.\n *\n * @template {Node} Ancestor\n *   Node type.\n * @template {Node} Child\n *   Node type.\n * @typedef {(\n *   Ancestor extends Parent\n *     ? Child extends Ancestor['children'][number]\n *       ? Ancestor\n *       : never\n *     : never\n * )} ParentsOf\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends Node ? number | null : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends Node ? Ancestor | null : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * Build a typed `Visitor` function from a node and all possible parents.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Visited\n *   Node type.\n * @template {Parent} Ancestor\n *   Parent type.\n * @typedef {Visitor<Visited, ParentsOf<Ancestor, Visited>>} BuildVisitorFromMatch\n */\n\n/**\n * Build a typed `Visitor` function from a list of descendants and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     import('unist-util-visit-parents/complex-types.js').Matches<Descendant, Check>,\n *     Extract<Descendant, Parent>\n *   >\n * )} BuildVisitorFromDescendants\n */\n\n/**\n * Build a typed `Visitor` function from a tree and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} [Tree=Node]\n *   Node type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     import('unist-util-visit-parents/complex-types.js').InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason` at `place` from `origin`.\n   *\n   * When an error is passed in as `reason`, the `stack` is copied.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   *\n   *   > 👉 **Note**: you should use markdown.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // To do: next major: expose `undefined` everywhere instead of `null`.\n  constructor(reason, place, origin) {\n    /** @type {[string | null, string | null]} */\n    const parts = [null, null]\n    /** @type {Position} */\n    let position = {\n      // @ts-expect-error: we always follows the structure of `position`.\n      start: {line: null, column: null},\n      // @ts-expect-error: \"\n      end: {line: null, column: null}\n    }\n\n    super()\n\n    if (typeof place === 'string') {\n      origin = place\n      place = undefined\n    }\n\n    if (typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        parts[1] = origin\n      } else {\n        parts[0] = origin.slice(0, index)\n        parts[1] = origin.slice(index + 1)\n      }\n    }\n\n    if (place) {\n      // Node.\n      if ('type' in place || 'position' in place) {\n        if (place.position) {\n          // To do: next major: deep clone.\n          // @ts-expect-error: looks like a position.\n          position = place.position\n        }\n      }\n      // Position.\n      else if ('start' in place || 'end' in place) {\n        // @ts-expect-error: looks like a position.\n        // To do: next major: deep clone.\n        position = place\n      }\n      // Point.\n      else if ('line' in place || 'column' in place) {\n        // To do: next major: deep clone.\n        position.start = place\n      }\n    }\n\n    // Fields from `Error`.\n    /**\n     * Serialized positional info of error.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(place) || '1:1'\n\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = typeof reason === 'object' ? reason.message : reason\n\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack = ''\n\n    if (typeof reason === 'object' && reason.stack) {\n      this.stack = reason.stack\n    }\n\n    /**\n     * Reason for message.\n     *\n     * > 👉 **Note**: you should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * State of problem.\n     *\n     * * `true` — marks associated file as no longer processable (error)\n     * * `false` — necessitates a (potential) change (warning)\n     * * `null | undefined` — for things that might not need changing (info)\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | null}\n     */\n    this.line = position.start.line\n\n    /**\n     * Starting column of error.\n     *\n     * @type {number | null}\n     */\n    this.column = position.start.column\n\n    /**\n     * Full unist position.\n     *\n     * @type {Position | null}\n     */\n    this.position = position\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | null}\n     */\n    this.source = parts[0]\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | null}\n     */\n    this.ruleId = parts[1]\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | null}\n     */\n    this.file\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | null}\n     */\n    this.actual\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | null}\n     */\n    this.expected\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | null}\n     */\n    this.url\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | null}\n     */\n    this.note\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.fatal = null\nVFileMessage.prototype.column = null\nVFileMessage.prototype.line = null\nVFileMessage.prototype.source = null\nVFileMessage.prototype.ruleId = null\nVFileMessage.prototype.position = null\n"],"names":["_classCallCheck","require","_createClass","_get","_getPrototypeOf","_inherits","_createSuper","XHTMLEntities","hexNumber","decimalNumber","acornJsxMap","WeakMap","getJsxTokens","acorn","Parser","acornJsx","get","tt","tokTypes","TokContext","TokenType","tc_oTag","tc_cTag","tc_expr","tokContexts","jsxName","jsxText","beforeExpr","jsxTagStart","startsExpr","jsxTagEnd","updateContext","this","context","push","exprAllowed","prevType","out","pop","slash","curContext","set","getQualifiedJSXName","object","type","name","namespace","property","module","exports","options","tok","isNewLine","isIdentifierStart","isIdentifierChar","_Parser","_class","_super","apply","arguments","key","value","chunkStart","pos","input","length","raise","start","ch","charCodeAt","finishToken","getTokenFromCode","slice","jsx_readEntity","jsx_readNewLine","normalizeCRLF","String","fromCharCode","locations","curLine","lineStart","quote","string","entity","str","count","startPos","substr","test","parseInt","node","startNode","keyword","unexpected","next","finishNode","startLoc","jsx_parseIdentifier","allowNamespaces","eat","colon","startNodeAt","jsx_parseNamespacedName","dot","allowNamespacedObjects","newNode","braceL","jsx_parseExpressionContainer","expression","parseExprAtom","lastTokEnd","lastTokEndLoc","finishNodeAt","braceR","jsx_parseEmptyExpression","parseExpression","expect","ellipsis","argument","parseMaybeAssign","eq","jsx_parseAttributeValue","attributes","nodeName","jsx_parseElementName","jsx_parseAttribute","selfClosing","children","openingElement","jsx_parseOpeningElementAt","closingElement","contents","jsx_parseClosingElementAt","jsx_parseElementAt","fragmentOrElement","relational","parseLiteral","refShortHandDefaultPos","jsx_parseText","jsx_parseElement","prototype","call","code","jsx_readToken","jsx_readWord","jsx_readString","b_expr","b_tmpl","plugin","Object","defineProperty","configurable","enumerable","quot","amp","apos","lt","gt","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","tilde","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","frasl","euro","image","weierp","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","empty","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","prop","infin","ang","and","or","cap","cup","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams","astralIdentifierCodes","astralIdentifierStartCodes","nonASCIIidentifierChars","nonASCIIidentifierStartChars","reservedWords","strict","strictBind","ecma5AndLessKeywords","keywords$1","keywordRelationalOperator","nonASCIIidentifierStart","RegExp","nonASCIIidentifier","isInAstralSet","i","astral","label","conf","isLoop","isAssign","prefix","postfix","binop","prec","keywords","kw","types$1","num","regexp","privateId","eof","bracketL","bracketR","parenL","parenR","comma","semi","question","questionDot","arrow","template","invalidTemplate","backQuote","dollarBraceL","assign","incDec","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","bitShift","plusMin","modulo","star","starstar","coalesce","_break","_case","_catch","_continue","_debugger","_default","_do","_else","_finally","_for","_function","_if","_return","_switch","_throw","_try","_var","_const","_while","_with","_new","_this","_extends","_export","_import","_null","_true","_false","_in","_instanceof","_typeof","_void","_delete","lineBreak","lineBreakG","source","nextLineBreak","from","end","nonASCIIwhitespace","skipWhiteSpace","ref","hasOwnProperty","toString","hasOwn","obj","propName","isArray","Array","wordsRegexp","words","replace","codePointToString","loneSurrogate","Position","line","col","column","offset","n","SourceLocation","p","sourceFile","getLineInfo","cur","nextBreak","defaultOptions","ecmaVersion","sourceType","onInsertedSemicolon","onTrailingComma","allowReserved","allowReturnOutsideFunction","allowImportExportEverywhere","allowAwaitOutsideFunction","allowSuperOutsideMethod","allowHashBang","onToken","onComment","ranges","program","directSourceFile","preserveParens","warnedAboutEcmaVersion","getOptions","opts","opt","console","warn","tokens","token","pushComment","array","block","text","endLoc","comment","loc","range","SCOPE_TOP","SCOPE_FUNCTION","SCOPE_ASYNC","SCOPE_GENERATOR","SCOPE_ARROW","SCOPE_SIMPLE_CATCH","SCOPE_SUPER","SCOPE_DIRECT_SUPER","SCOPE_CLASS_STATIC_BLOCK","SCOPE_VAR","functionFlags","async","generator","BIND_NONE","BIND_VAR","BIND_LEXICAL","BIND_FUNCTION","BIND_SIMPLE_CATCH","BIND_OUTSIDE","reserved","reservedStrict","reservedWordsStrict","reservedWordsStrictBind","containsEsc","lastIndexOf","split","curPosition","lastTokStartLoc","lastTokStart","initialContext","inModule","strictDirective","potentialArrowAt","potentialArrowInForAwait","yieldPos","awaitPos","awaitIdentPos","labels","undefinedExports","create","skipLineComment","scopeStack","enterScope","regexpState","privateNameStack","prototypeAccessors","inFunction","inGenerator","inAsync","canAwait","allowSuper","allowDirectSuper","treatFunctionsAsVar","allowNewDotTarget","inClassStaticBlock","parse","nextToken","parseTopLevel","currentVarScope","flags","inClassFieldInit","scope","currentThisScope","treatFunctionsAsVarInScope","currentScope","extend","plugins","len","cls","parseExpressionAt","parser","tokenizer","defineProperties","pp$9","literal","lastIndex","exec","match","spaceAfter","index","charAt","isContextual","eatContextual","expectContextual","canInsertSemicolon","insertSemicolon","semicolon","afterTrailingComma","tokType","notNext","DestructuringErrors","shorthandAssign","trailingComma","parenthesizedAssign","parenthesizedBind","doubleProto","checkPatternErrors","refDestructuringErrors","raiseRecoverable","parens","checkExpressionErrors","andThrow","checkYieldAwaitInDefaultParams","isSimpleAssignTarget","expr","pp$8","body","stmt","parseStatement","list","keys","adaptDirectivePrologue","loopLabel","kind","switchLabel","isLet","skip","nextCh","ident","isAsyncFunction","after","topLevel","starttype","parseBreakContinueStatement","parseDebuggerStatement","parseDoStatement","parseForStatement","parseFunctionStatement","parseClass","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseVarStatement","parseWhileStatement","parseWithStatement","parseBlock","parseEmptyStatement","parseExpressionStatement","parseImport","parseExport","maybeName","parseLabeledStatement","isBreak","parseIdent","lab","parseParenExpression","awaitAt","parseFor","init$1","parseVar","declarations","await","parseForIn","startsWithLet","isForOf","init","toAssignable","checkLValPattern","isAsync","declarationPosition","parseFunction","FUNC_STATEMENT","FUNC_HANGING_STATEMENT","consequent","alternate","discriminant","cases","sawDefault","isCase","exitScope","empty$1","handler","clause","param","parseBindingAtom","simple","finalizer","i$1","label$1","statementStart","indexOf","createNewLexicalScope","exitStrict","update","isForIn","id","left","right","isFor","decl","parseVarId","FUNC_NULLABLE_ID","isPrivateNameConflicted","privateNameMap","element","curr","static","checkKeyName","computed","statement","allowExpressionBody","forInit","initFunction","checkLValSimple","oldYieldPos","oldAwaitPos","oldAwaitIdentPos","parseFunctionParams","parseFunctionBody","params","parseBindingList","isStatement","oldStrict","parseClassId","parseClassSuper","enterClassBody","classBody","hadConstructor","parseClassElement","superClass","exitClassBody","constructorAllowsSuper","keyName","isGenerator","isStatic","parseClassStaticBlock","isClassElementNameStart","lastValue","parseClassElementName","isConstructor","allowsDirectSuper","parseClassMethod","parseClassField","parsePrivateIdent","parsePropertyName","method","parseMethod","field","oldLabels","parseExprSubscripts","declared","used","parent","exported","parseModuleExportName","checkExport","fNode","declaration","cNode","shouldParseExportStatement","checkVariableExport","specifiers","parseExportSpecifiers","spec","checkUnreserved","local","checkLocalExport","checkPatternExport","pat","properties","list$1","elements","elt","decls","nodes","first","parseImportSpecifiers","node$1","node$2","imported","stringLiteral","statements","isDirectiveCandidate","directive","raw","pp$7","isBinding","toAssignableList","operator","exprList","last","parseSpread","parseRestBinding","parseObj","close","allowEmpty","allowTrailingComma","elts","rest","parseBindingListItem","elem","parseMaybeDefault","bindingType","checkClashes","isBind","declareName","checkLValInnerPattern","isExpr","preserveSpace","override","types","b_stat","p_stat","p_expr","q_tmpl","tryReadTemplateToken","f_stat","f_expr","f_expr_gen","f_gen","pp$6","braceIsBlock","inGeneratorContext","overrideContext","tokenCtx","statementParens","allowed","pp$5","isPrivateFieldAccess","checkPropClash","propHash","shorthand","proto","other","expressions","afterLeftParse","parseYield","ownDestructuringErrors","oldParenAssign","oldTrailingComma","oldDoubleProto","parseMaybeConditional","parseExprOps","parseMaybeUnary","parseExprOp","leftStartPos","leftStartLoc","minPrec","logical","op","buildBinary","sawUnary","parseAwait","result","parseSubscripts","base","noCalls","maybeAsyncArrow","optionalChained","parseSubscript","optional","chainNode","optionalSupported","parseExprList","parseArrowExpression","callee","tag","quasi","parseTemplate","isTagged","readRegexp","canBeArrow","regex","pattern","parseParenAndDistinguishExpression","parseNew","parseExprImport","meta","parseDynamicImport","parseImportMeta","errorPos","bigint","val","spreadStart","innerStartPos","innerStartLoc","lastIsComma","parseParenItem","innerEndPos","innerEndLoc","parseParenArrowList","par","item","isImport","parseTemplateElement","cooked","tail","curElt","quasis","isAsyncProp","isPattern","parseProperty","parsePropertyValue","copyNode","paramCount","isArrowFunction","isMethod","isExpression","useStrict","checkParams","nonSimple","isSimpleParamList","undefined","allowDuplicates","nameHash","liberal","delegate","pp$4","message","err","SyntaxError","raisedAt","pp$3","Scope","var","lexical","functions","redeclared","scope$2","scope$3","Node","pp$2","ecma9BinaryProperties","ecma10BinaryProperties","ecma12BinaryProperties","unicodeBinaryProperties","unicodeGeneralCategoryValues","ecma9ScriptValues","ecma10ScriptValues","ecma11ScriptValues","ecma12ScriptValues","ecma13ScriptValues","unicodeScriptValues","data","buildUnicodeData","d","binary","nonBinary","General_Category","Script","Script_Extensions","gc","sc","scx","pp$1","RegExpValidationState","validFlags","unicodeProperties","switchU","switchN","lastIntValue","lastStringValue","lastAssertionIsQuantifiable","numCapturingParens","maxBackReference","groupNames","backReferenceNames","isSyntaxCharacter","isRegExpIdentifierStart","isRegExpIdentifierPart","isControlLetter","isValidUnicode","isCharacterClassEscape","isUnicodePropertyNameCharacter","isUnicodePropertyValueCharacter","isDecimalDigit","isHexDigit","hexToInt","isOctalDigit","reset","unicode","at","forceU","s","l","c","nextIndex","current","lookahead","advance","validateRegExpFlags","state","flag","validateRegExpPattern","regexp_pattern","regexp_disjunction","regexp_alternative","regexp_eatQuantifier","regexp_eatTerm","regexp_eatAssertion","regexp_eatAtom","regexp_eatExtendedAtom","lookbehind","noError","regexp_eatQuantifierPrefix","regexp_eatBracedQuantifier","min","max","regexp_eatDecimalDigits","regexp_eatPatternCharacters","regexp_eatReverseSolidusAtomEscape","regexp_eatCharacterClass","regexp_eatUncapturingGroup","regexp_eatCapturingGroup","regexp_eatAtomEscape","regexp_groupSpecifier","regexp_eatInvalidBracedQuantifier","regexp_eatExtendedPatternCharacter","regexp_eatSyntaxCharacter","regexp_eatGroupName","regexp_eatRegExpIdentifierName","regexp_eatRegExpIdentifierStart","regexp_eatRegExpIdentifierPart","regexp_eatRegExpUnicodeEscapeSequence","regexp_eatBackReference","regexp_eatCharacterClassEscape","regexp_eatCharacterEscape","regexp_eatKGroupName","regexp_eatDecimalEscape","regexp_eatControlEscape","regexp_eatCControlLetter","regexp_eatZero","regexp_eatHexEscapeSequence","regexp_eatLegacyOctalEscapeSequence","regexp_eatIdentityEscape","regexp_eatControlLetter","regexp_eatFixedHexDigits","lead","leadSurrogateEnd","trail","regexp_eatHexDigits","regexp_eatUnicodePropertyValueExpression","regexp_eatUnicodePropertyName","regexp_eatUnicodePropertyValue","regexp_validateUnicodePropertyNameAndValue","regexp_eatLoneUnicodePropertyNameOrValue","nameOrValue","regexp_validateUnicodePropertyNameOrValue","regexp_classRanges","regexp_eatClassAtom","regexp_eatClassEscape","ch$1","regexp_eatClassControlLetter","regexp_eatOctalDigit","n1","n2","Token","pp","stringToNumber","isLegacyOctalNumericLiteral","parseFloat","stringToBigInt","BigInt","ignoreEscapeSequenceInKeyword","getToken","Symbol","iterator","this$1$1","done","skipSpace","readToken","fullCharCodeAtPos","readWord","skipBlockComment","startSkip","loop","readToken_dot","readNumber","next2","readToken_slash","finishOp","readToken_mult_modulo_exp","size","tokentype","readToken_pipe_amp","readToken_caret","readToken_plus_min","readToken_lt_gt","readToken_eq_excl","readToken_question","readToken_numberSign","readWord1","readRadixNumber","readString","escaped","inClass","flagsStart","e","readInt","radix","maybeLegacyOctalNumericLiteral","allowSeparators","total","lastCode","Infinity","startsWithDot","octal","val$1","readCodePoint","codePos","readHexChar","invalidStringToken","readEscapedChar","INVALID_TEMPLATE_ESCAPE_ERROR","inTemplateElement","readTmplToken","readInvalidTemplateToken","position","inTemplate","octalStr","word","escStart","esc","version","keywordTypes","factory","toStr","gOPD","getOwnPropertyDescriptor","arr","isPlainObject","hasOwnConstructor","hasIsPrototypeOf","constructor","setProperty","target","newValue","writable","getProperty","src","copyIsArray","clone","deep","format","fmt","arg","tmp","precision","argIndex","args","leadingZero","nextArg","slurpNumber","digits","toFixed","JSON","stringify","toUpperCase","vsprintf","replacements","concat","log","printf","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","EMPTY_STRING","trim","style","TypeError","lineno","updatePosition","lines","whitespace","content","errorsList","error","msg","Error","reason","filename","silent","re","m","comments","rules","ret","isBuffer","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","props","componentName","location","propFullName","secret","getShim","isRequired","ReactPropTypes","bool","func","number","symbol","any","arrayOf","elementType","instanceOf","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","u","b","for","f","g","h","k","q","t","v","a","r","$$typeof","ContextConsumer","ContextProvider","Element","ForwardRef","Fragment","Lazy","Memo","Portal","Profiler","StrictMode","Suspense","SuspenseList","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isElement","isForwardRef","isFragment","isLazy","isMemo","isPortal","isProfiler","isStrictMode","isSuspense","isSuspenseList","isValidElementType","getModuleId","typeOf","StyleToObject","output","hasIterator","self","ReferenceError","__esModule","instance","Constructor","toPropertyKey","_defineProperties","descriptor","protoProps","staticProps","getPrototypeOf","isNativeReflectConstruct","possibleConstructorReturn","Derived","hasNativeReflectConstruct","Super","NewTarget","Reflect","construct","superPropBase","bind","receiver","desc","o","setPrototypeOf","__proto__","subClass","sham","Proxy","Boolean","valueOf","assertThisInitialized","_setPrototypeOf","hint","prim","toPrimitive","res","Number","ccount","character","document","createElement","decodeNamedCharacterReference","characterReference","innerHTML","char","textContent","own","findAndReplace","tree","find","settings","schema","ignored","convert","ignore","pairs","toExpression","toFunction","toPairs","pairIndex","visitParents","visitor","parents","grandparent","change","matchObject","stack","_toConsumableArray","_nodes","global","_parent$children","splice","escape","containerFlow","info","indexStack","tracker","createTracker","results","child","move","handle","_objectSpread","before","bulletLastUsed","between","join","repeat","containerPhrasing","handlers","peek","eol","indentLines","map","one","track","config","now","lineShift","chunks","shift","emptyOptions","includeImageAlt","includeHtml","alt","all","values","blankLine","tokenize","effects","ok","nok","factorySpace","markdownLineEnding","partial","limit","POSITIVE_INFINITY","markdownSpace","enter","consume","exit","factoryWhitespace","seen","asciiAlpha","regexCheck","asciiDigit","asciiHexDigit","asciiAlphanumeric","asciiPunctuation","asciiAtext","asciiControl","markdownLineEndingOrSpace","unicodeWhitespace","unicodePunctuation","remove","items","parameters","unshift","classifyCharacter","combineExtensions","extensions","syntaxExtension","extension","hook","constructs","existing","add","decodeNumericCharacterReference","characterEscapeOrReference","decodeString","decode","$0","$1","$2","head","hex","normalizeIdentifier","toLowerCase","resolveAll","events","called","resolve","includes","characterEntitiesLegacy","characterReferenceInvalid","isDecimal","isHexadecimal","isAlphanumerical","isAlphabetical","messages","parseEntities","point","indent","additional","queue","previous","following","isNaN","begin","characterReferenceCharacters","characters","terminated","namedReference","diff","reference","nonTerminated","warning","attribute","referenceCode","disallowed","flush","referenceContext","warningContext","textContext","path","basename","ext","assertPath","seenNonSlash","firstNonSlashEnd","extIndex","dirname","unmatchedSlash","extname","startPart","startDot","preDotState","joined","_len","segments","_key","absolute","allowAboveRoot","lastSlashIndex","lastSegmentLength","lastSlash","dots","normalizeString","normalize","sep","proc","cwd","isUrl","fileUrlOrPath","href","origin","urlToPath","URL","protocol","url","hostname","pathname","third","decodeURIComponent","getPathFromURLPosix","order","VFile","bufferLike","buffer","history","stored","assertNonEmpty","assertPart","stem","encoding","place","VFileMessage","file","fatal","bail","toStringTag","trough","fns","pipeline","run","middlewareIndex","callback","fn","_len2","_key2","middleware","wrapped","_len3","_key3","fnExpectsCallback","Promise","then","_len4","_key4","wrap","use","middelware","unified","frozen","transformers","attachers","freezeIndex","processor","assertUnfrozen","Compiler","freeze","_attachers$freezeInde","_toArray","attacher","transformer","addPlugin","addList","addPreset","_value","entry","isPlainObj","doc","vfile","assertParser","newable","assertCompiler","assertNode","compile","executor","reject","runSync","complete","assertDone","process","processSync","destination","asyncName","looksLikeAVFile","contentStart","attempt","contentInitial","contentType","childFlow","childToken","lineStartOffset","continued","containerState","continuation","documentContinue","checkNewContainers","_closeFlow","closeFlow","indexBeforeExits","indexBeforeFlow","exitContainers","documentContinued","currentConstruct","concrete","flowStart","interrupt","_gfmTableDynamicInterruptHack","check","containerConstruct","thereIsANewContainer","thereIsNoNewContainer","lazy","containerContinue","flow","_tokenizer","flowContinue","writeToChild","stream","sliceStream","defineSkip","write","disable","null","subtokenize","event","lineIndex","otherIndex","otherEvent","subevents","more","jumps","_isInFirstContentOfListItem","subcontent","_container","eventIndex","startPosition","startPositions","childEvents","gaps","adjust","breaks","_gfmTasklistFirstContentOfListItem","contentEnd","continuationConstruct","contentContinue","prefixed","sliceSerialize","initial","flowInitial","afterConstruct","resolver","createResolver","initializeFactory","notText","atBreak","resolveAllLineSuffixes","extraResolver","bufferIndex","tabs","chunk","_index","_bufferIndex","createTokenizer","initialize","columnStart","resolveAllConstructs","accountForPotentialSkip","fields","constructFactory","addResult","onsuccessfulcheck","expandTabs","atTab","serializeChunks","main","view","startIndex","startBufferIndex","endIndex","endBufferIndex","sliceChunks","chunkIndex","go","_","restore","onreturn","returnState","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","def","handleMapOfConstructs","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","store","resolveTo","thematicBreak","marker","sequence","initialSize","atMarker","inside","onBlank","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","initialBlankLine","furtherBlankLines","notInCurrentItem","indentConstruct","blockQuote","open","factoryDestination","literalType","literalMarkerType","rawType","stringType","balance","destinationEnclosedBefore","destinationRaw","destinationEnclosed","destinationEnclosedEscape","destinationRawEscape","factoryLabel","markerType","labelEscape","factoryTitle","atFirstTitleBreak","atTitleBreak","title","titleEscape","definition","identifier","labelAfter","titleConstruct","defined","codeIndented","afterStartPrefix","afterPrefix","indentedContent","headingAtx","fenceOpenInside","headingBreak","setextUnderline","paragraph","closingSequence","closingSequenceEnd","heading","htmlBlockNames","htmlRawNames","htmlFlow","startTag","declarationStart","tagCloseStart","continuationDeclarationInside","tagName","commentOpenInside","cdataOpenInside","basicSelfClosing","completeAttributeNameBefore","completeClosingTagAfter","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCharacterDataInside","continuationAtLineEnding","nextBlankConstruct","htmlContinueStart","htmlLineEnd","continuationRawEndTag","codeFenced","closingFenceConstruct","closingSequenceStart","sizeOpen","nonLazyLine","initialPrefix","sequenceOpen","infoOpen","openAfter","infoAfter","numeric","characterEscape","lineEnding","labelEnd","labelStart","_balanced","_inactive","balanced","afterLabelEnd","resourceConstruct","fullReferenceConstruct","collapsedReferenceConstruct","media","group","insideSpan","destinationAfter","afterLabel","labelStartImage","attention","attentionMarkers","_open","_close","openingSequence","nextEvents","movePoint","autolink","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","htmlText","declarationOpen","instruction","tagOpen","commentOpen","cdataOpen","commentStart","commentStartDash","commentClose","atLineEnding","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","labelStartLink","hardBreakEscape","codeText","gap","tailExitIndex","headEnterIndex","_document","_defineProperty","_flowInitial","_flow","_string","_text","resolveText","search","fromMarkdown","transforms","canContainEols","opener","link","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","codeFlow","codeFencedFenceInfo","codeFencedFenceMeta","codeTextData","codeFlowValue","definitionDestinationString","definitionLabelString","definitionTitleString","emphasis","hardBreak","hardBreakTrailing","html","htmlFlowData","htmlTextData","listItem","listItemValue","onenterlistitemvalue","listOrdered","onenterlistordered","listUnordered","onenterreference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","strong","closer","atxHeadingSequence","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","characterEscapeValue","onexitdata","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","onexitcharacterreferencevalue","onexitcodefenced","codeFencedFence","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","labelText","onexitlabeltext","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","resource","onexitresource","onexitsetextheading","setextHeadingLineSequence","onexitsetextheadinglinesequence","setextHeadingText","onexitsetextheadingtext","configure","mdastExtensions","tokenStack","resume","setData","getData","listStack","prepareList","defaultOnError","firstBlankLineIndex","containerBalance","listSpread","tailIndex","tailEvent","_spread","errorHandler","onExitError","stringifyPosition","depth","referenceType","ancestor","fragment","ordered","spread","checked","compiler","postprocess","defaultConstructs","atCarriageReturn","endPosition","Math","ceil","preprocess","combined","_combined$key","_combined$key2","normalizeUri","encodeURIComponent","pointStart","pointEnd","clean","footnoteReference","counter","safeId","footnoteOrder","footnoteCounts","reuseCounter","clobberPrefix","dataFootnoteRef","ariaDescribedBy","patch","applyData","revert","subtype","suffix","listItemLoose","tab","space","trimLines","trimLine","codePointAt","blockquote","break","className","delete","footnote","footnoteById","no","dangerous","imageReference","inlineCode","linkReference","loose","listLoose","disabled","root","table","rows","firstRow","tableContent","tableCell","tableRow","siblings","align","cellIndex","cells","cell","alignValue","toml","yaml","footnoteDefinition","createState","allowDangerousHtml","footnoteLabel","footnoteLabelTagName","footnoteLabelProperties","footnoteBackLabel","unknownHandler","passThrough","cache","visit","definitions","augment","hName","hProperties","hChildren","ctx","to","defaultUnknownHandler","toHast","foot","listItems","referenceIndex","backReferences","backReference","dataFootnoteBackref","ariaLabel","_tail$children","tailTail","dataFootnotes","footer","bridge","mutate","Schema","normal","merge","Info","boolean","booleanish","overloadedBoolean","commaSeparated","spaceSeparated","commaOrSpaceSeparated","mustUseProperty","powers","increment","pow","checks","DefinedInfo","_Info","mask","mark","_assertThisInitialized","transform","xlink","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xml","xmlLang","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlns","xmlnsxlink","xmlnsXLink","aria","ariaActiveDescendant","ariaAtomic","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","role","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","action","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","as","autoCapitalize","autoComplete","autoFocus","autoPlay","capture","charSet","cite","cols","colSpan","contentEditable","controls","controlsList","coords","crossOrigin","dateTime","decoding","default","defer","dir","dirName","download","draggable","encType","enterKeyHint","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","height","hidden","high","hrefLang","htmlFor","httpEquiv","imageSizes","imageSrcSet","inputMode","integrity","is","isMap","itemId","itemProp","itemRef","itemScope","itemType","language","loading","low","manifest","maxLength","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforeMatch","onBeforePrint","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClick","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onScrollEnd","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","optimum","ping","placeholder","playsInline","poster","preload","readOnly","referrerPolicy","rel","required","reversed","rowSpan","sandbox","scoped","seamless","selected","sizes","slot","span","spellCheck","srcDoc","srcLang","srcSet","step","tabIndex","translate","typeMustMatch","useMap","width","aLink","archive","axis","background","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","charOff","classId","clear","codeBase","codeType","color","compact","declare","face","frame","frameBorder","hSpace","leftMargin","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","profile","prompt","rev","rightMargin","scheme","scrolling","standby","summary","topMargin","valueType","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","security","unselectable","svg","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cursor","cx","cy","defaultAction","descent","diffuseConstant","direction","display","dur","divisor","dx","dy","edgeMode","editable","elevation","exponent","externalResourcesRequired","fill","filter","filterRes","filterUnits","focusable","focusHighlight","fr","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in","in2","intercept","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","mode","numOctaves","observer","opacity","orient","orientation","overflow","overlay","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","restart","rotate","rx","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","startOffset","stdDeviation","stemh","stemv","stitchTiles","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","u1","u2","viewBox","viewTarget","visibility","widths","x","x1","x2","xChannelSelector","y","y1","y2","yChannelSelector","z","zoomAndPan","htmlBase","svgBase","rehypeFilter","allowedElements","disallowedElements","allowElement","parent_","unwrapDisallowed","thing","valid","dash","kebab","camelcase","hastToReact","protocols","uriTransformer","uri","tableElements","Set","childrenToReact","childIndex","toReact","has","skipHtml","transformLinkUri","parentSchema","addProperty","listDepth","component","components","basic","React","ReactIs","linkTarget","inline","level","transformImageUri","getInputElement","getElementsBeforeCount","textAlign","isHeader","sourcePos","rawSourcePos","sourcePosition","includeElementIndex","siblingCount","Type","dashes","padRight","padLeft","commas","_unused","styleReplacer","parseStyle","changelog","deprecated","renderers","astPlugins","escapeHtml","allowNode","allowedTypes","disallowedTypes","includeNodeIndex","ReactMarkdown","deprecation","remarkParse","remarkPlugins","remarkRehype","remarkRehypeOptions","rehypePlugins","hastNode","propTypes","remarkBreaks","factoryAttributes","attributesType","attributesMarkerType","attributeIdType","attributeClassType","attributeNameType","attributeInitializerType","attributeValueLiteralType","attributeValueType","attributeValueMarker","attributeValueData","disallowEol","shortcutStart","shortcutStartAfter","shortcut","nameAfter","valueBefore","valueQuotedStart","valueUnquoted","valueQuotedAfter","valueQuotedBetween","valueQuoted","afterStart","atClosingBrace","dataEscape","factoryName","directiveContainer","afterName","afterAttributes","afterOpening","tokenizeClosingFence","nonLazyLineAfter","lineAfter","directiveLeaf","inStart","directiveText","handleDirective","directiveFromMarkdown","directiveContainerAttributes","enterAttributes","directiveContainerLabel","directiveLabel","directiveLeafAttributes","directiveTextAttributes","directiveContainerAttributeClassValue","exitAttributeClassValue","directiveContainerAttributeIdValue","exitAttributeIdValue","directiveContainerAttributeName","exitAttributeName","directiveContainerAttributeValue","exitAttributeValue","exitAttributes","directiveContainerName","exitName","directiveLeafAttributeClassValue","directiveLeafAttributeIdValue","directiveLeafAttributeName","directiveLeafAttributeValue","directiveLeafName","directiveTextAttributeClassValue","directiveTextAttributeIdValue","directiveTextAttributeName","directiveTextAttributeValue","directiveTextName","directiveToMarkdown","unsafe","inConstruct","containerDirective","leafDirective","textDirective","cleaned","class","safeOptions","nesting","fence","inlineDirectiveLabel","labelType","subexit","classesFull","classes","checkQuote","subset","attrs","quoted","classesFullList","classesList","stringifyEntitiesLight","shallow","remarkDirective","fault","eval","EvalError","RangeError","syntax","URIError","FormattedError","displayName","formatter","markers","matters","presetsOrMatters","matter","option","createConstruct","anywhere","frontmatterType","fenceType","sequenceType","closeSequence","closeSequenceWhitespace","closeAfter","openSequence","openSequenceWhitespace","contentInside","pick","remarkFrontmatter","listOfMatters","frontmatter","frontmatterFromMarkdown","frontmatterToMarkdown","wwwPrefix","wwwPrefixInside","wwwPrefixAfter","domain","underscoreInLastSegment","underscoreInLastLastSegment","domainInside","domainAfter","domainAtPunctuation","sizeClose","pathInside","pathAtPunctuation","trailCharRefStart","trailBracketAfter","trailCharRefInside","emailDomainDotTrail","wwwAutolink","previousWww","previousUnbalanced","wwwAfter","protocolAutolink","previousProtocol","fromCodePoint","protocolPrefixInside","protocolSlashesInside","afterProtocol","protocolAfter","emailAutolink","gfmAtext","previousEmail","atext","emailDomain","emailDomainAfter","emailDomainDot","gfmAutolinkLiteral","_gfmAutolinkLiteralWalkedInto","gfmFootnote","tokenizeDefinitionStart","tokenizeDefinitionContinuation","gfmFootnoteDefinitionEnd","tokenizeGfmFootnoteCall","tokenizePotentialGfmFootnoteCall","resolveToPotentialGfmFootnoteCall","gfmFootnotes","replacement","callStart","callData","callEscape","labelAtMarker","labelInside","whitespaceAfter","gfmStrikethrough","single","singleTilde","strikethrough","gfmTable","seenDelimiter","hasDash","tableHeaderCount","_align","cellDividerHead","inCellContentHead","cellBreakHead","originalInterrupt","tokenizeRowEnd","atDelimiterRowBreak","atRowEndHead","inWhitespaceHead","inCellContentEscapeHead","rowEndDelimiter","inWhitespaceDelimiter","inFillerDelimiter","afterLeftAlignment","afterRightAlignment","tableClose","nextPrefixedOrBlank","bodyStart","rowStartBody","cellDividerBody","inCellContentBody","cellBreakBody","tableBodyClose","atRowEndBody","inWhitespaceBody","inCellContentEscapeBody","inHead","inDelimiterRow","inRow","cellStart","seenCellInRow","tasklistCheck","spaceThenNonSpace","gfmTaskListItem","notInConstruct","gfmAutolinkLiteralFromMarkdown","findUrl","findEmail","literalAutolink","literalAutolinkEmail","enterLiteralAutolinkValue","literalAutolinkHttp","literalAutolinkWww","gfmAutolinkLiteralToMarkdown","parts","isCorrectDomain","trailExec","closingParenIndex","openingParens","closingParens","splitUrl","email","association","patternCompile","_compiled","patternInScope","listInScope","none","safe","positions","infos","sort","numerical","escapeBackslashes","encode","whole","enterFootnoteDefinition","enterFootnoteDefinitionLabelString","exitFootnoteDefinitionLabelString","exitFootnoteDefinition","enterFootnoteCall","enterFootnoteCallString","exitFootnoteCallString","exitFootnoteCall","blank","handleDelete","gfmStrikethroughFromMarkdown","gfmStrikethroughToMarkdown","defaultStringLength","toAlignment","gfmTableFromMarkdown","tableData","enterCell","tableHeader","gfmTableToMarkdown","padding","tableCellPadding","alignDelimiters","tablePipeAlign","stringLength","around","serializeData","handleTableRowAsData","handleTableAsData","handleTableCell","matrix","alignments","cellMatrix","sizeMatrix","longestCellByColumn","mostCellsPerRow","rowIndex","row","columnIndex","delimiterStart","delimiterEnd","markdownTable","listItemIndent","checkListItemIndent","bullet","bulletCurrent","checkBullet","incrementListMarker","gfmTaskListItemFromMarkdown","taskListCheckValueChecked","exitCheck","taskListCheckValueUnchecked","firstParaghraph","sibling","gfmTaskListItemToMarkdown","checkable","checkbox","remarkGfm","gfm","gfmFootnoteDefinition","gfmFootnoteDefinitionLabelString","gfmFootnoteCall","gfmFootnoteCallString","gfmToMarkdown","denyMention","denyHash","minShaLength","userGroup","projectGroup","repoGroup","linkRegex","repoRegex","referenceRegex","mentionRegex","remarkGithub","repository","repositoryMatch","repositoryInfo","user","project","buildUrl","defaultBuildUrl","specificProject","hash","username","mentionStrong","compare","_reference$split","_reference$split2","_slicedToArray","page","sha","positionFromEstree","nodeLike","startColumn","numberOrUndefined","endColumn","CONTINUE","EXIT","SKIP","toResult","nodelike","eventsToAcorn","estree","exception","startLine","acornOptions","swallow","acornConfig","_events$index","setPoint","isEmptyExpression","indices","toPoint","toOffset","parseOffsetToUnistPoint","error_","leave","build","cKey","grandparents","cIndex","subvalue","subresult","esnode","fixPosition","_step","_iterator","_createForOfIteratorHelper","_step2","_iterator2","nodeOrToken","acornOffset","sourceOffset","pointInSource","factoryMdxExpression","chunkType","allowLazy","lastCrash","eventStart","prefixExpressionIndent","prefixTagIndent","mdxExpression","options_","cont","startRe","contRe","lazyLineEnd","factoryTag","tagType","tagMarkerType","tagClosingMarkerType","tagSelfClosingMarker","tagNameType","tagNamePrimaryType","tagNameMemberMarkerType","tagNameMemberType","tagNamePrefixMarkerType","tagNameLocalType","tagExpressionAttributeType","tagExpressionAttributeMarkerType","tagExpressionAttributeValueType","tagAttributeType","tagAttributeNameType","tagAttributeNamePrimaryType","tagAttributeNamePrefixMarkerType","tagAttributeNameLocalType","tagAttributeInitializerMarkerType","tagAttributeValueLiteralType","tagAttributeValueLiteralMarkerType","tagAttributeValueLiteralValueType","tagAttributeValueExpressionType","tagAttributeValueExpressionMarkerType","tagAttributeValueExpressionValueType","beforeName","optionalEsWhitespace","beforeClosingTagName","tagEnd","idStart","primaryName","crash","idCont","afterPrimaryName","beforeMemberName","beforeLocalName","beforeAttribute","memberName","afterMemberName","localName","afterLocalName","afterAttributeExpression","attributePrimaryName","afterAttributePrimaryName","beforeAttributeLocalName","beforeAttributeValue","attributeLocalName","afterAttributeLocalName","attributeValueQuotedStart","afterAttributeValueExpression","attributeValueQuoted","crashEol","optionalEsWhitespaceContinue","padStart","serializeCharCode","jsxFlow","mdxJsx","mdxMd","allowedAcornTypes","mdxjsEsm","exportImportConstruct","definedModuleSpecifiers","atEndOfData","atEol","atEnd","mdxExpressionFromMarkdown","mdxFlowExpression","mdxTextExpression","exitMdxExpression","mdxFlowExpressionChunk","exitMdxExpressionData","mdxTextExpressionChunk","mdxExpressionToMarkdown","handleMdxExpression","mdxJsxFromMarkdown","mdxJsxFlowTag","enterMdxJsxTag","mdxJsxFlowTagClosingMarker","enterMdxJsxTagClosingMarker","mdxJsxFlowTagAttribute","enterMdxJsxTagAttribute","mdxJsxFlowTagExpressionAttribute","enterMdxJsxTagExpressionAttribute","mdxJsxFlowTagAttributeValueLiteral","mdxJsxFlowTagAttributeValueExpression","mdxJsxFlowTagSelfClosingMarker","enterMdxJsxTagSelfClosingMarker","mdxJsxTextTag","mdxJsxTextTagClosingMarker","mdxJsxTextTagAttribute","mdxJsxTextTagExpressionAttribute","mdxJsxTextTagAttributeValueLiteral","mdxJsxTextTagAttributeValueExpression","mdxJsxTextTagSelfClosingMarker","exitMdxJsxTagClosingMarker","mdxJsxFlowTagNamePrimary","exitMdxJsxTagNamePrimary","mdxJsxFlowTagNameMember","exitMdxJsxTagNameMember","mdxJsxFlowTagNameLocal","exitMdxJsxTagNameLocal","exitMdxJsxTagExpressionAttribute","mdxJsxFlowTagExpressionAttributeValue","mdxJsxFlowTagAttributeNamePrimary","exitMdxJsxTagAttributeNamePrimary","mdxJsxFlowTagAttributeNameLocal","exitMdxJsxTagAttributeNameLocal","exitMdxJsxTagAttributeValueLiteral","mdxJsxFlowTagAttributeValueLiteralValue","exitMdxJsxTagAttributeValueExpression","mdxJsxFlowTagAttributeValueExpressionValue","exitMdxJsxTagSelfClosingMarker","exitMdxJsxTag","mdxJsxTextTagNamePrimary","mdxJsxTextTagNameMember","mdxJsxTextTagNameLocal","mdxJsxTextTagExpressionAttributeValue","mdxJsxTextTagAttributeNamePrimary","mdxJsxTextTagAttributeNameLocal","mdxJsxTextTagAttributeValueLiteralValue","mdxJsxTextTagAttributeValueExpressionValue","enterMdxJsxTagAnyAttribute","serializeAbbreviatedTag","onErrorRightIsTag","onErrorLeftIsTag","closing","mdxJsxToMarkdown","quoteSmart","tightSelfClosing","printWidth","alternative","mdxElement","mdxJsxFlowElement","mdxJsxTextElement","fences","resourceLink","serializedAttributes","appliedQuote","attributesOnTheirOwnLine","attributesOnOneLine","mdxjsEsmFromMarkdown","mdxjsEsmData","mdxjsEsmToMarkdown","remarkMdx","mdxjs","mdxToMarkdown","core","groups","charactersToExpression","escapeOnly","pair","formatBasic","castFactory","typeFactory","anyFactory","propsFactory","tests","_checks$index","reverse","_Error","ruleId","actual","expected","note","_wrapNativeSuper"],"sourceRoot":""}